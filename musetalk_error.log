The cache for model files in Transformers v4.22.0 has been updated. Migrating your old cache. This is a one-time only operation. You can interrupt this and resume the migration later on by calling `transformers.utils.move_cache()`.
0it [00:00, ?it/s]0it [00:00, ?it/s]
Downloading: "https://www.adrianbulat.com/downloads/python-fan/s3fd-619a316812.pth" to /root/.cache/torch/hub/checkpoints/s3fd-619a316812.pth
  0%|          | 0.00/85.7M [00:00<?, ?B/s]  0%|          | 168k/85.7M [00:00<00:52, 1.71MB/s]  1%|          | 896k/85.7M [00:00<00:19, 4.62MB/s]  2%|▏         | 1.98M/85.7M [00:00<00:11, 7.58MB/s]  4%|▍         | 3.27M/85.7M [00:00<00:08, 9.80MB/s]  5%|▌         | 4.48M/85.7M [00:00<00:08, 10.6MB/s]  7%|▋         | 6.17M/85.7M [00:00<00:06, 12.9MB/s]  9%|▉         | 8.03M/85.7M [00:00<00:05, 15.0MB/s] 11%|█▏        | 9.69M/85.7M [00:00<00:05, 15.3MB/s] 14%|█▍        | 11.9M/85.7M [00:00<00:04, 17.7MB/s] 17%|█▋        | 14.2M/85.7M [00:01<00:03, 19.5MB/s] 20%|█▉        | 16.9M/85.7M [00:01<00:03, 22.1MB/s] 22%|██▏       | 19.0M/85.7M [00:01<00:03, 21.8MB/s] 25%|██▍       | 21.2M/85.7M [00:01<00:03, 19.6MB/s] 27%|██▋       | 23.1M/85.7M [00:01<00:03, 17.5MB/s] 30%|██▉       | 25.5M/85.7M [00:01<00:03, 19.3MB/s] 32%|███▏      | 27.4M/85.7M [00:01<00:03, 19.0MB/s] 34%|███▍      | 29.3M/85.7M [00:01<00:03, 18.6MB/s] 36%|███▋      | 31.1M/85.7M [00:01<00:03, 18.7MB/s] 38%|███▊      | 32.9M/85.7M [00:02<00:03, 18.3MB/s] 40%|████      | 34.7M/85.7M [00:02<00:02, 18.3MB/s] 43%|████▎     | 36.4M/85.7M [00:02<00:02, 18.2MB/s] 45%|████▍     | 38.2M/85.7M [00:02<00:02, 18.3MB/s] 47%|████▋     | 40.0M/85.7M [00:02<00:02, 18.3MB/s] 49%|████▊     | 41.8M/85.7M [00:02<00:02, 18.3MB/s] 51%|█████     | 43.7M/85.7M [00:02<00:02, 19.0MB/s] 53%|█████▎    | 45.6M/85.7M [00:02<00:02, 18.5MB/s] 55%|█████▌    | 47.4M/85.7M [00:02<00:02, 18.6MB/s] 57%|█████▋    | 49.2M/85.7M [00:02<00:02, 18.4MB/s] 60%|█████▉    | 51.1M/85.7M [00:03<00:01, 18.7MB/s] 62%|██████▏   | 52.9M/85.7M [00:03<00:01, 18.7MB/s] 64%|██████▍   | 54.7M/85.7M [00:03<00:01, 18.6MB/s] 66%|██████▋   | 56.8M/85.7M [00:03<00:01, 18.9MB/s] 69%|██████▊   | 58.7M/85.7M [00:03<00:01, 19.1MB/s] 71%|███████   | 60.6M/85.7M [00:03<00:01, 18.8MB/s] 73%|███████▎  | 62.6M/85.7M [00:03<00:01, 19.6MB/s] 75%|███████▌  | 64.5M/85.7M [00:03<00:01, 19.0MB/s] 77%|███████▋  | 66.3M/85.7M [00:03<00:01, 19.0MB/s] 80%|███████▉  | 68.2M/85.7M [00:04<00:00, 19.2MB/s] 82%|████████▏ | 70.3M/85.7M [00:04<00:00, 20.1MB/s] 84%|████████▍ | 72.3M/85.7M [00:04<00:00, 19.6MB/s] 87%|████████▋ | 74.4M/85.7M [00:04<00:00, 20.5MB/s] 89%|████████▉ | 76.4M/85.7M [00:04<00:00, 20.1MB/s] 91%|█████████▏| 78.3M/85.7M [00:04<00:00, 19.5MB/s] 94%|█████████▍| 80.4M/85.7M [00:04<00:00, 19.8MB/s] 96%|█████████▌| 82.3M/85.7M [00:04<00:00, 19.9MB/s] 98%|█████████▊| 84.2M/85.7M [00:04<00:00, 19.7MB/s]100%|██████████| 85.7M/85.7M [00:04<00:00, 18.1MB/s]
INFO:     Started server process [1]
INFO:     Waiting for application startup.
2025-07-08 10:11:16,425 - api_inference_logic - INFO - [api_inference_logic.py:60 (load_models_for_api)] - Loading all models for the API...
An error occurred while trying to fetch /app/MuseTalk/models/sd-vae: Error no file named diffusion_pytorch_model.safetensors found in directory /app/MuseTalk/models/sd-vae.
Defaulting to unsafe serialization. Pass `allow_pickle=False` to raise an error instead.
/usr/local/lib/python3.10/site-packages/torch/_utils.py:776: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
load unet model from /app/MuseTalk/models/musetalkV15/unet.pth
Loads checkpoint by local backend from path: /app/MuseTalk/models/dwpose/dw-ll_ucoco_384.pth
2025-07-08 10:11:24,324 - api_inference_logic - INFO - [api_inference_logic.py:82 (load_models_for_api)] - All models loaded successfully.
2025-07-08 10:11:24,325 - musetalk_api - INFO - [musetalk_api.py:26 (startup_event)] - API startup complete. Models loaded.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
2025-07-08 10:13:10,006 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_part_begin with no data
2025-07-08 10:13:10,007 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_field with data[36:55]
2025-07-08 10:13:10,007 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_value with data[57:119]
2025-07-08 10:13:10,007 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_header_end with no data
2025-07-08 10:13:10,007 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_field with data[121:133]
2025-07-08 10:13:10,007 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_value with data[135:144]
2025-07-08 10:13:10,007 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_header_end with no data
2025-07-08 10:13:10,008 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_headers_finished with no data
2025-07-08 10:13:10,008 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[148:98031]
2025-07-08 10:13:10,009 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:65536]
2025-07-08 10:13:10,011 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,011 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,012 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,013 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,014 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,019 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,020 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,021 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,021 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,022 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,022 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,022 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,023 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,023 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,024 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,024 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,024 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,025 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,025 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,026 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,026 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,026 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,027 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,027 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,027 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:8561]
2025-07-08 10:13:10,027 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_part_end with no data
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_part_begin with no data
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_field with data[8599:8618]
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_value with data[8620:8682]
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_header_end with no data
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_field with data[8684:8696]
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_header_value with data[8698:8707]
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_header_end with no data
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_headers_finished with no data
2025-07-08 10:13:10,028 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[8711:256000]
2025-07-08 10:13:10,029 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:256000]
2025-07-08 10:13:10,029 - python_multipart.multipart - DEBUG - [multipart.py:625 (callback)] - Calling on_part_data with data[0:135731]
2025-07-08 10:13:10,029 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_part_end with no data
2025-07-08 10:13:10,029 - python_multipart.multipart - DEBUG - [multipart.py:628 (callback)] - Calling on_end with no data
2025-07-08 10:13:10,031 - musetalk_api - INFO - [musetalk_api.py:55 (lipsync_video_endpoint)] - --- [27be2cd2] /lipsync-video CALLED ---
2025-07-08 10:13:10,033 - api_inference_logic - INFO - [api_inference_logic.py:90 (run_lip_sync)] - Step 1: Extracting frames from video...
2025-07-08 10:13:11,712 - api_inference_logic - INFO - [api_inference_logic.py:99 (run_lip_sync)] - Step 2: Preprocessing 127 frames...
Reading images:   0%|          | 0/127 [00:00<?, ?it/s]Reading images:   6%|▋         | 8/127 [00:00<00:01, 75.49it/s]Reading images:  13%|█▎        | 16/127 [00:00<00:01, 75.78it/s]Reading images:  19%|█▉        | 24/127 [00:00<00:01, 75.04it/s]Reading images:  25%|██▌       | 32/127 [00:00<00:01, 74.88it/s]Reading images:  31%|███▏      | 40/127 [00:00<00:01, 74.87it/s]Reading images:  38%|███▊      | 48/127 [00:00<00:01, 74.23it/s]Reading images:  44%|████▍     | 56/127 [00:00<00:00, 73.63it/s]Reading images:  50%|█████     | 64/127 [00:00<00:00, 74.36it/s]Reading images:  57%|█████▋    | 72/127 [00:00<00:00, 74.23it/s]Reading images:  63%|██████▎   | 80/127 [00:01<00:00, 73.19it/s]Reading images:  69%|██████▉   | 88/127 [00:01<00:00, 72.52it/s]Reading images:  76%|███████▌  | 96/127 [00:01<00:00, 73.32it/s]Reading images:  82%|████████▏ | 104/127 [00:01<00:00, 73.76it/s]Reading images:  88%|████████▊ | 112/127 [00:01<00:00, 73.65it/s]Reading images:  94%|█████████▍| 120/127 [00:01<00:00, 73.32it/s]Reading images: 100%|██████████| 127/127 [00:01<00:00, 74.03it/s]
get key_landmark and face bounding boxes with the default value
Getting landmarks and bboxes:   0%|          | 0/127 [00:00<?, ?it/s][W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.
********************************************bbox_shift parameter adjustment**********************************************************
Getting landmarks and bboxes:   1%|          | 1/127 [00:36<1:15:52, 36.13s/it]Getting landmarks and bboxes:   2%|▏         | 2/127 [01:12<1:15:34, 36.28s/it]Getting landmarks and bboxes:   2%|▏         | 3/127 [01:48<1:15:06, 36.35s/it]Getting landmarks and bboxes:   3%|▎         | 4/127 [02:25<1:14:34, 36.38s/it]Getting landmarks and bboxes:   4%|▍         | 5/127 [03:01<1:14:01, 36.40s/it]Getting landmarks and bboxes:   5%|▍         | 6/127 [03:38<1:13:27, 36.42s/it]Getting landmarks and bboxes:   6%|▌         | 7/127 [04:14<1:12:50, 36.42s/it]Getting landmarks and bboxes:   6%|▋         | 8/127 [04:51<1:12:17, 36.45s/it]Getting landmarks and bboxes:   7%|▋         | 9/127 [07:37<2:31:24, 76.98s/it]Getting landmarks and bboxes:   8%|▊         | 10/127 [08:13<2:05:43, 64.48s/it]Getting landmarks and bboxes:   9%|▊         | 11/127 [08:50<1:48:08, 55.94s/it]Getting landmarks and bboxes:   9%|▉         | 12/127 [09:31<1:38:26, 51.36s/it]Getting landmarks and bboxes:  10%|█         | 13/127 [10:07<1:29:00, 46.85s/it]Getting landmarks and bboxes:  11%|█         | 14/127 [10:44<1:22:18, 43.70s/it]Getting landmarks and bboxes:  12%|█▏        | 15/127 [11:20<1:17:34, 41.56s/it]Getting landmarks and bboxes:  13%|█▎        | 16/127 [12:15<1:24:01, 45.42s/it]Getting landmarks and bboxes:  13%|█▎        | 17/127 [12:51<1:18:19, 42.72s/it]Getting landmarks and bboxes:  14%|█▍        | 18/127 [13:27<1:14:09, 40.82s/it]Getting landmarks and bboxes:  15%|█▍        | 19/127 [14:04<1:11:17, 39.61s/it]Getting landmarks and bboxes:  16%|█▌        | 20/127 [17:08<2:27:47, 82.87s/it]Getting landmarks and bboxes:  17%|█▋        | 21/127 [17:44<2:01:45, 68.92s/it]Getting landmarks and bboxes:  17%|█▋        | 22/127 [18:21<1:43:31, 59.15s/it]Getting landmarks and bboxes:  18%|█▊        | 23/127 [20:50<2:29:12, 86.08s/it]Getting landmarks and bboxes:  19%|█▉        | 24/127 [21:26<2:01:55, 71.02s/it]Getting landmarks and bboxes:  20%|█▉        | 25/127 [22:02<1:43:04, 60.63s/it]Getting landmarks and bboxes:  20%|██        | 26/127 [22:38<1:29:50, 53.37s/it]Getting landmarks and bboxes:  21%|██▏       | 27/127 [29:54<4:40:05, 168.05s/it]Getting landmarks and bboxes:  22%|██▏       | 28/127 [30:29<3:31:32, 128.21s/it]Getting landmarks and bboxes:  23%|██▎       | 29/127 [31:05<2:44:15, 100.56s/it]Getting landmarks and bboxes:  24%|██▎       | 30/127 [31:42<2:11:24, 81.28s/it] Getting landmarks and bboxes:  24%|██▍       | 31/127 [32:17<1:48:15, 67.66s/it]Getting landmarks and bboxes:  25%|██▌       | 32/127 [38:25<4:09:25, 157.53s/it]Getting landmarks and bboxes:  26%|██▌       | 33/127 [39:01<3:09:41, 121.09s/it]Getting landmarks and bboxes:  27%|██▋       | 34/127 [39:37<2:28:13, 95.63s/it] Getting landmarks and bboxes:  28%|██▊       | 35/127 [41:05<2:22:57, 93.23s/it]Getting landmarks and bboxes:  28%|██▊       | 36/127 [43:34<2:47:08, 110.21s/it]Getting landmarks and bboxes:  29%|██▉       | 37/127 [44:10<2:11:54, 87.93s/it] Getting landmarks and bboxes:  30%|██▉       | 38/127 [44:47<1:47:28, 72.45s/it]Getting landmarks and bboxes:  31%|███       | 39/127 [46:03<1:48:11, 73.76s/it]Getting landmarks and bboxes:  31%|███▏      | 40/127 [46:40<1:30:41, 62.55s/it]Getting landmarks and bboxes:  32%|███▏      | 41/127 [47:16<1:18:23, 54.69s/it]Getting landmarks and bboxes:  33%|███▎      | 42/127 [47:53<1:09:42, 49.21s/it]Getting landmarks and bboxes:  34%|███▍      | 43/127 [51:35<2:21:43, 101.23s/it]Getting landmarks and bboxes:  35%|███▍      | 44/127 [52:11<1:52:56, 81.64s/it] Getting landmarks and bboxes:  35%|███▌      | 45/127 [52:48<1:33:00, 68.05s/it]Getting landmarks and bboxes:  36%|███▌      | 46/127 [53:24<1:19:04, 58.57s/it]Getting landmarks and bboxes:  37%|███▋      | 47/127 [54:17<1:15:47, 56.85s/it]Getting landmarks and bboxes:  38%|███▊      | 48/127 [54:53<1:06:46, 50.72s/it]Getting landmarks and bboxes:  39%|███▊      | 49/127 [55:30<1:00:34, 46.60s/it]Getting landmarks and bboxes:  39%|███▉      | 50/127 [56:07<55:57, 43.60s/it]  Getting landmarks and bboxes:  40%|████      | 51/127 [58:58<1:43:40, 81.86s/it]Getting landmarks and bboxes:  41%|████      | 52/127 [59:34<1:25:16, 68.22s/it]Getting landmarks and bboxes:  42%|████▏     | 53/127 [1:00:11<1:12:21, 58.67s/it]Getting landmarks and bboxes:  43%|████▎     | 54/127 [1:00:47<1:03:15, 51.99s/it]Getting landmarks and bboxes:  43%|████▎     | 55/127 [1:01:24<56:55, 47.44s/it]  Getting landmarks and bboxes:  44%|████▍     | 56/127 [1:16:34<6:02:15, 306.13s/it]Getting landmarks and bboxes:  45%|████▍     | 57/127 [1:17:10<4:22:32, 225.04s/it]Getting landmarks and bboxes:  46%|████▌     | 58/127 [1:17:46<3:13:40, 168.41s/it]Getting landmarks and bboxes:  46%|████▋     | 59/127 [1:18:22<2:26:00, 128.82s/it]Getting landmarks and bboxes:  47%|████▋     | 60/127 [1:18:59<1:52:51, 101.06s/it]Getting landmarks and bboxes:  48%|████▊     | 61/127 [1:19:35<1:29:50, 81.67s/it] Getting landmarks and bboxes:  49%|████▉     | 62/127 [1:20:11<1:13:45, 68.09s/it]Getting landmarks and bboxes:  50%|████▉     | 63/127 [1:20:48<1:02:30, 58.59s/it]Getting landmarks and bboxes:  50%|█████     | 64/127 [1:21:25<54:39, 52.05s/it]  Getting landmarks and bboxes:  51%|█████     | 65/127 [1:23:38<1:18:55, 76.37s/it]Getting landmarks and bboxes:  52%|█████▏    | 66/127 [1:24:14<1:05:27, 64.38s/it]Getting landmarks and bboxes:  53%|█████▎    | 67/127 [1:24:51<55:59, 56.00s/it]  Getting landmarks and bboxes:  54%|█████▎    | 68/127 [1:25:27<49:22, 50.21s/it]Getting landmarks and bboxes:  54%|█████▍    | 69/127 [1:29:06<1:37:21, 100.72s/it]Getting landmarks and bboxes:  55%|█████▌    | 70/127 [1:29:42<1:17:20, 81.41s/it] Getting landmarks and bboxes:  56%|█████▌    | 71/127 [1:30:19<1:03:22, 67.91s/it]Getting landmarks and bboxes:  57%|█████▋    | 72/127 [1:30:55<53:35, 58.46s/it]  Getting landmarks and bboxes:  57%|█████▋    | 73/127 [1:31:31<46:39, 51.84s/it]Getting landmarks and bboxes:  58%|█████▊    | 74/127 [1:32:08<41:42, 47.21s/it]Getting landmarks and bboxes:  59%|█████▉    | 75/127 [1:32:44<38:06, 43.98s/it]Getting landmarks and bboxes:  60%|█████▉    | 76/127 [1:33:21<35:27, 41.71s/it]Getting landmarks and bboxes:  61%|██████    | 77/127 [1:33:57<33:26, 40.12s/it]Getting landmarks and bboxes:  61%|██████▏   | 78/127 [1:34:34<31:57, 39.12s/it]Getting landmarks and bboxes:  62%|██████▏   | 79/127 [1:38:00<1:11:24, 89.26s/it]Getting landmarks and bboxes:  63%|██████▎   | 80/127 [1:38:37<57:31, 73.43s/it]  Getting landmarks and bboxes:  64%|██████▍   | 81/127 [1:39:13<47:46, 62.32s/it]Getting landmarks and bboxes:  65%|██████▍   | 82/127 [1:39:50<41:01, 54.69s/it]Getting landmarks and bboxes:  65%|██████▌   | 83/127 [1:40:52<41:43, 56.89s/it]Getting landmarks and bboxes:  66%|██████▌   | 84/127 [1:41:28<36:22, 50.75s/it]Getting landmarks and bboxes:  67%|██████▋   | 85/127 [1:42:05<32:30, 46.44s/it]Getting landmarks and bboxes:  68%|██████▊   | 86/127 [1:46:03<1:11:00, 103.92s/it]Getting landmarks and bboxes:  69%|██████▊   | 87/127 [1:46:39<55:43, 83.58s/it]   Getting landmarks and bboxes:  69%|██████▉   | 88/127 [1:47:15<45:07, 69.42s/it]Getting landmarks and bboxes:  70%|███████   | 89/127 [1:47:52<37:42, 59.53s/it]Getting landmarks and bboxes:  71%|███████   | 90/127 [1:50:34<55:45, 90.42s/it]Getting landmarks and bboxes:  72%|███████▏  | 91/127 [1:51:11<44:30, 74.19s/it]Getting landmarks and bboxes:  72%|███████▏  | 92/127 [1:51:47<36:39, 62.86s/it]Getting landmarks and bboxes:  73%|███████▎  | 93/127 [1:52:24<31:09, 54.98s/it]Getting landmarks and bboxes:  74%|███████▍  | 94/127 [1:53:00<27:10, 49.41s/it]Getting landmarks and bboxes:  75%|███████▍  | 95/127 [1:53:36<24:16, 45.51s/it]Getting landmarks and bboxes:  76%|███████▌  | 96/127 [1:54:13<22:06, 42.79s/it]Getting landmarks and bboxes:  76%|███████▋  | 97/127 [1:54:49<20:28, 40.94s/it]Getting landmarks and bboxes:  77%|███████▋  | 98/127 [1:57:31<37:17, 77.15s/it]Getting landmarks and bboxes:  78%|███████▊  | 99/127 [1:58:07<30:18, 64.93s/it]Getting landmarks and bboxes:  79%|███████▊  | 100/127 [1:58:44<25:21, 56.37s/it]Getting landmarks and bboxes:  80%|███████▉  | 101/127 [1:59:20<21:50, 50.41s/it]Getting landmarks and bboxes:  80%|████████  | 102/127 [1:59:57<19:15, 46.23s/it]Getting landmarks and bboxes:  81%|████████  | 103/127 [2:00:33<17:20, 43.33s/it]Getting landmarks and bboxes:  82%|████████▏ | 104/127 [2:01:10<15:52, 41.41s/it]Getting landmarks and bboxes:  83%|████████▎ | 105/127 [2:02:47<21:17, 58.05s/it]Getting landmarks and bboxes:  83%|████████▎ | 106/127 [2:03:24<18:03, 51.57s/it]Getting landmarks and bboxes:  84%|████████▍ | 107/127 [2:04:00<15:40, 47.03s/it]Getting landmarks and bboxes:  85%|████████▌ | 108/127 [2:07:09<28:20, 89.49s/it]Getting landmarks and bboxes:  86%|████████▌ | 109/127 [2:07:45<22:03, 73.53s/it]Getting landmarks and bboxes:  87%|████████▋ | 110/127 [2:08:21<17:40, 62.40s/it]Getting landmarks and bboxes:  87%|████████▋ | 111/127 [2:08:58<14:33, 54.60s/it]Getting landmarks and bboxes:  88%|████████▊ | 112/127 [2:09:35<12:19, 49.27s/it]Getting landmarks and bboxes:  89%|████████▉ | 113/127 [2:11:46<17:15, 73.99s/it]Getting landmarks and bboxes:  90%|████████▉ | 114/127 [2:12:23<13:35, 62.71s/it]Getting landmarks and bboxes:  91%|█████████ | 115/127 [2:12:59<10:58, 54.84s/it]Getting landmarks and bboxes:  91%|█████████▏| 116/127 [2:18:21<24:43, 134.83s/it]Getting landmarks and bboxes:  92%|█████████▏| 117/127 [2:18:57<17:32, 105.25s/it]Getting landmarks and bboxes:  93%|█████████▎| 118/127 [2:19:33<12:41, 84.59s/it] Getting landmarks and bboxes:  94%|█████████▎| 119/127 [2:20:10<09:21, 70.18s/it]Getting landmarks and bboxes:  94%|█████████▍| 120/127 [2:31:09<28:48, 246.89s/it]Getting landmarks and bboxes:  95%|█████████▌| 121/127 [2:31:45<18:21, 183.62s/it]Getting landmarks and bboxes:  96%|█████████▌| 122/127 [2:32:21<11:37, 139.44s/it]Getting landmarks and bboxes:  97%|█████████▋| 123/127 [2:32:58<07:14, 108.67s/it]Getting landmarks and bboxes:  98%|█████████▊| 124/127 [2:33:50<04:34, 91.50s/it] Getting landmarks and bboxes:  98%|█████████▊| 125/127 [2:34:26<02:29, 74.97s/it]Getting landmarks and bboxes:  99%|█████████▉| 126/127 [2:35:02<01:03, 63.40s/it]Getting landmarks and bboxes: 100%|██████████| 127/127 [2:35:39<00:00, 55.32s/it]Getting landmarks and bboxes: 100%|██████████| 127/127 [2:35:39<00:00, 73.54s/it]
Total frame:「127」 Manually adjust range : [ -35~33 ] , the current value: 0
*************************************************************************************************************************************
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	LOAD_FAST(arg=0, lineno=1140)
           4	LOAD_CONST(arg=1, lineno=1140)
           6	BINARY_SUBSCR(arg=None, lineno=1140)
           8	STORE_FAST(arg=3, lineno=1140)
          10	LOAD_FAST(arg=1, lineno=1141)
          12	UNARY_NEGATIVE(arg=None, lineno=1141)
          14	LOAD_FAST(arg=3, lineno=1141)
          16	DUP_TOP(arg=None, lineno=1141)
          18	ROT_THREE(arg=None, lineno=1141)
          20	COMPARE_OP(arg=1, lineno=1141)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1141)
          24	LOAD_FAST(arg=1, lineno=1141)
          26	COMPARE_OP(arg=1, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1141)
          30	JUMP_FORWARD(arg=2, lineno=1141)
>         32	POP_TOP(arg=None, lineno=1141)
          34	JUMP_FORWARD(arg=2, lineno=1141)
>         36	LOAD_CONST(arg=1, lineno=1142)
          38	STORE_FAST(arg=3, lineno=1142)
>         40	LOAD_FAST(arg=0, lineno=1144)
          42	LOAD_CONST(arg=2, lineno=1144)
          44	BINARY_SUBSCR(arg=None, lineno=1144)
          46	STORE_FAST(arg=4, lineno=1144)
          48	LOAD_FAST(arg=1, lineno=1145)
          50	UNARY_NEGATIVE(arg=None, lineno=1145)
          52	LOAD_FAST(arg=4, lineno=1145)
          54	DUP_TOP(arg=None, lineno=1145)
          56	ROT_THREE(arg=None, lineno=1145)
          58	COMPARE_OP(arg=1, lineno=1145)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1145)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	COMPARE_OP(arg=1, lineno=1145)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1145)
          68	JUMP_FORWARD(arg=2, lineno=1145)
>         70	POP_TOP(arg=None, lineno=1145)
          72	JUMP_FORWARD(arg=2, lineno=1145)
>         74	LOAD_CONST(arg=1, lineno=1146)
          76	STORE_FAST(arg=4, lineno=1146)
>         78	LOAD_FAST(arg=2, lineno=1148)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1148)
          82	LOAD_GLOBAL(arg=0, lineno=1149)
          84	LOAD_METHOD(arg=1, lineno=1149)
          86	LOAD_FAST(arg=3, lineno=1149)
          88	CALL_METHOD(arg=1, lineno=1149)
          90	LOAD_GLOBAL(arg=0, lineno=1149)
          92	LOAD_METHOD(arg=1, lineno=1149)
          94	LOAD_FAST(arg=4, lineno=1149)
          96	CALL_METHOD(arg=1, lineno=1149)
          98	COMPARE_OP(arg=3, lineno=1149)
         100	RETURN_VALUE(arg=None, lineno=1149)
>        102	LOAD_GLOBAL(arg=0, lineno=1151)
         104	LOAD_METHOD(arg=2, lineno=1151)
         106	LOAD_FAST(arg=3, lineno=1151)
         108	CALL_METHOD(arg=1, lineno=1151)
         110	LOAD_GLOBAL(arg=0, lineno=1151)
         112	LOAD_METHOD(arg=2, lineno=1151)
         114	LOAD_FAST(arg=4, lineno=1151)
         116	CALL_METHOD(arg=1, lineno=1151)
         118	COMPARE_OP(arg=3, lineno=1151)
         120	RETURN_VALUE(arg=None, lineno=1151)
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1140)
2025-07-08 12:48:53,402 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1140)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1140)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$threshold10.3']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12unary_negative.4']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12unary_negative.4', '$x014.5']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1141)
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$16dup_top.6', '$20compare_op.7']
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-07-08 12:48:53,403 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi24.0']
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1141)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi24.0']
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1141)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi24.0', '$threshold24.1']
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1141)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$26compare_op.2']
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi32.0']
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1141)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi32.0']
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,404 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1144)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1144)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x40.0']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x40.0', '$const42.1']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1144)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44binary_subscr.2']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$threshold48.3']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$50unary_negative.4']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$50unary_negative.4', '$x152.5']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1145)
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$54dup_top.6', '$58compare_op.7']
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-07-08 12:48:53,405 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1142)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1142)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.0']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi62.0']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1145)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$threshold62.1']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1145)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$64compare_op.2']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi70.0']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1145)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi70.0']
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-07-08 12:48:53,406 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1148)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1148)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$zero_pos78.0']
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1146)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1146)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const74.0']
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1149)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$82load_global.0']
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1149)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$84load_method.1']
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1149)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$84load_method.1', '$x086.2']
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-07-08 12:48:53,407 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88call_method.3']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1149)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88call_method.3', '$90load_global.4']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1149)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88call_method.3', '$92load_method.5']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1149)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1149)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88call_method.3', '$96call_method.7']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$98compare_op.8']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$102load_global.0']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$104load_method.1']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$104load_method.1', '$x0106.2']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$108call_method.3']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$108call_method.3', '$110load_global.4']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1151)
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$108call_method.3', '$112load_method.5']
2025-07-08 12:48:53,408 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1151)
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1151)
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$108call_method.3', '$116call_method.7']
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$118compare_op.8']
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-07-08 12:48:53,409 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-07-08 12:48:53,410 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-07-08 12:48:53,411 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-07-08 12:48:53,411 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-07-08 12:48:53,411 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:53,411 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:53,412 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	LOAD_GLOBAL(arg=0, lineno=1170)
           4	LOAD_FAST(arg=0, lineno=1170)
           6	LOAD_FAST(arg=1, lineno=1170)
           8	LOAD_FAST(arg=2, lineno=1170)
          10	CALL_FUNCTION(arg=3, lineno=1170)
          12	LOAD_FAST(arg=3, lineno=1170)
          14	LOAD_CONST(arg=1, lineno=1170)
          16	LOAD_CONST(arg=1, lineno=1170)
          18	BUILD_SLICE(arg=2, lineno=1170)
          20	STORE_SUBSCR(arg=None, lineno=1170)
          22	LOAD_CONST(arg=1, lineno=1170)
          24	RETURN_VALUE(arg=None, lineno=1170)
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1170)
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1170)
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:54,038 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1', '$threshold6.2']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1', '$threshold6.2', '$zero_pos8.3']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5', '$const14.6']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=BUILD_SLICE(arg=2, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5', '$const14.6', '$const16.7']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=STORE_SUBSCR(arg=None, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5', '$18build_slice.9']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=1170)
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const22.10']
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,039 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,040 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:54,040 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:54,040 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,040 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$threshold6.2'}), (8, {'res': '$zero_pos8.3'}), (10, {'func': '$2load_global.0', 'args': ['$x4.1', '$threshold6.2', '$zero_pos8.3'], 'res': '$10call_function.4'}), (12, {'res': '$y12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$const16.7'}), (18, {'start': '$const14.6', 'stop': '$const16.7', 'step': None, 'res': '$18build_slice.9', 'slicevar': '$18build_slice.8'}), (20, {'target': '$y12.5', 'index': '$18build_slice.9', 'value': '$10call_function.4'}), (22, {'res': '$const22.10'}), (24, {'retval': '$const22.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,040 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7ffedd4f9570>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $const16.7 = const(NoneType, None)       ['$const16.7']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1170), Var($const16.7, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6', '$const16.7']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    $const22.10 = const(NoneType, None)      ['$const22.10']
    $24return_value.11 = cast(value=$const22.10) ['$24return_value.11', '$const22.10']
    return $24return_value.11                ['$24return_value.11']

2025-07-08 12:48:54,044 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcf86920>
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(3, name=y)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7ffedd4f9570>)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const16.7 = const(NoneType, None)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18build_slice.8 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1170), Var($const16.7, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $10call_function.4
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const22.10 = const(NoneType, None)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24return_value.11 = cast(value=$const22.10)
2025-07-08 12:48:54,045 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $24return_value.11
2025-07-08 12:48:54,046 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7ffedcf86fe0>,
                                     0)],
             '$18build_slice.8': [(<numba.core.ir.Assign object at 0x7ffedcf86140>,
                                   0)],
             '$18build_slice.9': [(<numba.core.ir.Assign object at 0x7ffedcf85f30>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x7ffedcfa4040>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcf87a00>,
                                  0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffedcf86440>,
                             0)],
             '$const16.7': [(<numba.core.ir.Assign object at 0x7ffedcf85cf0>,
                             0)],
             '$const22.10': [(<numba.core.ir.Assign object at 0x7ffedcf87e80>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7ffedcf87640>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedcf87520>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedcf87880>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7ffedcf87760>,
                           0)]})
2025-07-08 12:48:54,046 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcf86920>
2025-07-08 12:48:54,077 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=3, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=3, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=4, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=4, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=4, lineno=5)
          40	LOAD_CONST(arg=2, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=3, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=2, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=5, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=6, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=4, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=3, lineno=2)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=3)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:54,078 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=4, lineno=3)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=4)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=5)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:54,079 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:54,080 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=8)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=5, lineno=6)
2025-07-08 12:48:54,081 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=6, lineno=7)
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:54,082 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,083 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:54,084 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:54,084 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:54,084 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,085 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, 0)              ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 0)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 194
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 115
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 123
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 121
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 127
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const42.1 + index00
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 131
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 153
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 161
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 159
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 165
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 169
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 173
2025-07-08 12:48:54,104 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 193
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd71810>
2025-07-08 12:48:54,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,106 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$100return_value.9': [(<numba.core.ir.Assign object at 0x7ffedcd2c430>,
                                     169)],
             '$102load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcd386a0>,
                                    173)],
             '$104load_method.1': [(<numba.core.ir.Assign object at 0x7ffedcd38ac0>,
                                    173)],
             '$108call_method.3': [(<numba.core.ir.Assign object at 0x7ffedcd3a6b0>,
                                    173)],
             '$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedcd613f0>,
                                   0)],
             '$110load_global.4': [(<numba.core.ir.Assign object at 0x7ffedcd3a890>,
                                    173)],
             '$112load_method.5': [(<numba.core.ir.Assign object at 0x7ffedcd41db0>,
                                    173)],
             '$116call_method.7': [(<numba.core.ir.Assign object at 0x7ffedcd43730>,
                                    173)],
             '$118compare_op.8': [(<numba.core.ir.Assign object at 0x7ffedcd43910>,
                                   173)],
             '$120return_value.9': [(<numba.core.ir.Assign object at 0x7ffedcd49420>,
                                     173)],
             '$12unary_negative.4': [(<numba.core.ir.Assign object at 0x7ffedce95c60>,
                                      90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedcd61150>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedcd60fd0>,
                                   0)],
             '$20compare_op.7': [(<numba.core.ir.Assign object at 0x7ffedce95e40>,
                                  90)],
             '$22pred': [(<numba.core.ir.Assign object at 0x7ffedce9ee30>, 90)],
             '$26compare_op.2': [(<numba.core.ir.Assign object at 0x7ffedceab280>,
                                  91)],
             '$28pred': [(<numba.core.ir.Assign object at 0x7ffedceb4fa0>, 91)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedcd626e0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedcd62800>,
                                      0)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedcd62fe0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedcd63100>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedcd63340>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedcd634c0>,
                                      0)],
             '$50unary_negative.4': [(<numba.core.ir.Assign object at 0x7ffedccd4340>,
                                      127)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedcd639a0>,
                                        0)],
             '$58compare_op.7': [(<numba.core.ir.Assign object at 0x7ffedccd4520>,
                                  127)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedcd63ac0>,
                                         0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7ffedccdd510>,
                          127)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedcd63f10>,
                                        0)],
             '$64compare_op.2': [(<numba.core.ir.Assign object at 0x7ffedcce97e0>,
                                  131)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c0a0>,
                                      0)],
             '$66pred': [(<numba.core.ir.Assign object at 0x7ffedcceb640>,
                          131)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c580>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c6d0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c880>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c9a0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedcd6ca90>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedcd6cbb0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedcd6ccd0>,
                                  80)],
             '$80pred': [(<numba.core.ir.Assign object at 0x7ffedcd08e20>,
                          165)],
             '$82load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcd136d0>,
                                   169)],
             '$84load_method.1': [(<numba.core.ir.Assign object at 0x7ffedcd13910>,
                                   169)],
             '$88call_method.3': [(<numba.core.ir.Assign object at 0x7ffedcd156c0>,
                                   169)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedcd616c0>,
                                    0)],
             '$90load_global.4': [(<numba.core.ir.Assign object at 0x7ffedcd158a0>,
                                   169)],
             '$92load_method.5': [(<numba.core.ir.Assign object at 0x7ffedcd20dc0>,
                                   169)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedcd6d600>,
                                      194)],
             '$96call_method.7': [(<numba.core.ir.Assign object at 0x7ffedcd22740>,
                                   169)],
             '$98compare_op.8': [(<numba.core.ir.Assign object at 0x7ffedcd22920>,
                                  169)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedcd60820>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedcd623e0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedcd62560>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedcd62a40>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedce8e890>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedcd62ce0>,
                                0)],
             '$const42.1': [(<numba.core.ir.Assign object at 0x7ffedccce4d0>,
                             127)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedcd62e60>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedcd63640>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedcd637c0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedcd63d60>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c220>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedcd6c3a0>,
                                0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7ffedcea07f0>,
                           90)],
             '$phi62.0': [(<numba.core.ir.Assign object at 0x7ffedccdee90>,
                           127)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedcd61a50>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedcd63c70>,
                             80)],
             'bool22': [(<numba.core.ir.Assign object at 0x7ffedce978e0>, 90)],
             'bool28': [(<numba.core.ir.Assign object at 0x7ffedceab1c0>, 91)],
             'bool60': [(<numba.core.ir.Assign object at 0x7ffedccd5fc0>, 127)],
             'bool66': [(<numba.core.ir.Assign object at 0x7ffedcce9960>, 131)],
             'bool80': [(<numba.core.ir.Assign object at 0x7ffedcd08b50>, 165)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedcd61960>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedcd6cfa0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedcd609d0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedcd60280>,
                                90),
                               (<numba.core.ir.Assign object at 0x7ffedcd60430>,
                                127)],
             'threshold': [(<numba.core.ir.Assign object at 0x7ffedcd61d20>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedcd61e40>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7ffedcd60340>, 90),
                    (<numba.core.ir.Assign object at 0x7ffedccc6e90>, 121)],
             'x1': [(<numba.core.ir.Assign object at 0x7ffedcd604f0>, 127),
                    (<numba.core.ir.Assign object at 0x7ffedcd01510>, 159)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7ffedcd61c00>,
                           0)]})
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcd71810>
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var stencil_index
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,109 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: stencil_index
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const42.1 + index00
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72800>
2025-07-08 12:48:54,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x7ffedcd73130>],
             127: [<numba.core.ir.Assign object at 0x7ffedcd72ce0>]})
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,115 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd72800>
2025-07-08 12:48:54,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var x0
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: x0
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x0.1 = const(int, 0)
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,122 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,123 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,124 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd712a0>
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x7ffedcd72f80>],
             121: [<numba.core.ir.Assign object at 0x7ffedcd724d0>]})
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,125 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,126 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$phi24.0 = x0
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 91
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 90 from label 91
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 90
2025-07-08 12:48:54,127 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.1 = const(int, 0)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,128 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,129 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 169
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 169
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 165
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 165
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 127
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 127
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 123
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 123
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 90 from label 123
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 90
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 121
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x0.1 = const(int, 0)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 91
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 91
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 90 from label 91
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 90
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,130 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 173
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 173
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 165
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 165
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd70d90>
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,131 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var x1
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,132 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,133 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.1 = const(int, 0)
2025-07-08 12:48:54,134 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[123, 121, 91])
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: x1
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,135 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x1.1 = const(int, 0)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,136 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcd72ef0>
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {127: [<numba.core.ir.Assign object at 0x7ffedcd71060>],
             159: [<numba.core.ir.Assign object at 0x7ffedcd710c0>]})
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,137 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,138 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,139 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,140 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.1 = const(int, 0)
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[123, 121, 91])
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,141 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$phi62.0 = x1
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 131
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 131
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1.1 = const(int, 0)
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,142 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 169
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 169
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 165
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 165
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 161
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 161
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 161
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 131
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 131
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 131
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 159
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x1.1 = const(int, 0)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $96call_method.7 = call $92load_method.5(x1.2, func=$92load_method.5, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,143 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 173
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 173
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $116call_method.7 = call $112load_method.5(x1.2, func=$112load_method.5, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcd727d0>
2025-07-08 12:48:54,144 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$shape4.1']
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4']
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,151 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,152 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,152 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-07-08 12:48:54,155 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,155 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd70e80>
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(0, name=shape)
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: dtype = arg(1, name=dtype)
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_deref.3 = freevar(retty: array(bool, 1d, C))
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $12return_value.5
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7ffedcbbdd80>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7ffedcbbe170>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcbbe320>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7ffedcbbdcf0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7ffedcd70550>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7ffedcd70f40>, 0)]})
2025-07-08 12:48:54,156 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcd70e80>
2025-07-08 12:48:54,164 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4264)
           2	LOAD_FAST(arg=0, lineno=4267)
           4	LOAD_METHOD(arg=0, lineno=4267)
           6	LOAD_FAST(arg=1, lineno=4267)
           8	LOAD_FAST(arg=2, lineno=4267)
          10	CALL_METHOD(arg=2, lineno=4267)
          12	RETURN_VALUE(arg=None, lineno=4267)
2025-07-08 12:48:54,164 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,164 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,164 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,164 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4264)
2025-07-08 12:48:54,164 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4267)
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4267)
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$arrtype2.0']
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4267)
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4267)
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$size6.2']
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4267)
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$size6.2', '$align8.3']
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4267)
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_method.4']
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,165 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,166 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-07-08 12:48:54,171 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcbd6e30>
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: arrtype = arg(0, name=arrtype)
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: size = arg(1, name=size)
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: align = arg(2, name=align)
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $12return_value.5
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7ffedcbd7e20>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7ffedcbd7f10>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffedcbd79d0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7ffedcbd7730>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7ffedcbd6c50>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7ffedcbd6620>, 0)]})
2025-07-08 12:48:54,172 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcbd6e30>
2025-07-08 12:48:54,174 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4259)
           2	LOAD_GLOBAL(arg=0, lineno=4260)
           4	LOAD_FAST(arg=1, lineno=4260)
           6	LOAD_FAST(arg=2, lineno=4260)
           8	CALL_FUNCTION(arg=2, lineno=4260)
          10	RETURN_VALUE(arg=None, lineno=4260)
2025-07-08 12:48:54,174 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,174 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4259)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4260)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4260)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4260)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$allocsize4.1']
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4260)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4260)
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_function.3']
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,175 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,176 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2025-07-08 12:48:54,179 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,179 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcbef1c0>
2025-07-08 12:48:54,179 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: cls = arg(0, name=cls)
2025-07-08 12:48:54,179 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: allocsize = arg(1, name=allocsize)
2025-07-08 12:48:54,179 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: align = arg(2, name=align)
2025-07-08 12:48:54,180 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2025-07-08 12:48:54,180 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,180 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10return_value.4 = cast(value=$8call_function.3)
2025-07-08 12:48:54,180 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $10return_value.4
2025-07-08 12:48:54,180 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7ffedcbeeb00>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcbee5c0>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7ffedcbee9e0>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7ffedcbee440>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7ffedcbeda20>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7ffedcbed600>, 0)]})
2025-07-08 12:48:54,180 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcbef1c0>
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	LOAD_FAST(arg=0, lineno=201)
           4	LOAD_DEREF(arg=0, lineno=201)
           6	BINARY_SUBSCR(arg=None, lineno=201)
           8	RETURN_VALUE(arg=None, lineno=201)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=200)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=201)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_DEREF(arg=0, lineno=201)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$tup2.0']
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=201)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$tup2.0', '$4load_deref.1']
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=201)
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:54,381 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,382 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$tup2.0'}), (4, {'res': '$4load_deref.1'}), (6, {'index': '$4load_deref.1', 'target': '$tup2.0', 'res': '$6binary_subscr.2'}), (8, {'retval': '$6binary_subscr.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,382 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcafbe80>
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: tup = arg(0, name=tup)
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: idx = arg(1, name=idx)
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_deref.1 = freevar(idx_val: 0)
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$4load_deref.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8return_value.3 = cast(value=$6binary_subscr.2)
2025-07-08 12:48:54,385 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $8return_value.3
2025-07-08 12:48:54,386 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$4load_deref.1': [(<numba.core.ir.Assign object at 0x7ffedcb110c0>,
                                 0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedcb119c0>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7ffedcb113c0>,
                                   0)],
             'idx': [(<numba.core.ir.Assign object at 0x7ffedcb104c0>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x7ffedcb10670>, 0)]})
2025-07-08 12:48:54,386 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcafbe80>
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	LOAD_GLOBAL(arg=0, lineno=1170)
           4	LOAD_FAST(arg=0, lineno=1170)
           6	LOAD_FAST(arg=1, lineno=1170)
           8	LOAD_FAST(arg=2, lineno=1170)
          10	CALL_FUNCTION(arg=3, lineno=1170)
          12	LOAD_FAST(arg=3, lineno=1170)
          14	LOAD_CONST(arg=1, lineno=1170)
          16	LOAD_CONST(arg=1, lineno=1170)
          18	BUILD_SLICE(arg=2, lineno=1170)
          20	STORE_SUBSCR(arg=None, lineno=1170)
          22	LOAD_CONST(arg=1, lineno=1170)
          24	RETURN_VALUE(arg=None, lineno=1170)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1170)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1170)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=1170)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=1170)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1', '$threshold6.2']
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=1170)
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1', '$threshold6.2', '$zero_pos8.3']
2025-07-08 12:48:54,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4']
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5']
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5', '$const14.6']
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=BUILD_SLICE(arg=2, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5', '$const14.6', '$const16.7']
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=STORE_SUBSCR(arg=None, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_function.4', '$y12.5', '$18build_slice.9']
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=1170)
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const22.10']
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:54,828 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:54,829 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,829 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$threshold6.2'}), (8, {'res': '$zero_pos8.3'}), (10, {'func': '$2load_global.0', 'args': ['$x4.1', '$threshold6.2', '$zero_pos8.3'], 'res': '$10call_function.4'}), (12, {'res': '$y12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$const16.7'}), (18, {'start': '$const14.6', 'stop': '$const16.7', 'step': None, 'res': '$18build_slice.9', 'slicevar': '$18build_slice.8'}), (20, {'target': '$y12.5', 'index': '$18build_slice.9', 'value': '$10call_function.4'}), (22, {'res': '$const22.10'}), (24, {'retval': '$const22.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,829 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7ffedd4f9570>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $const16.7 = const(NoneType, None)       ['$const16.7']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1170), Var($const16.7, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6', '$const16.7']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    $const22.10 = const(NoneType, None)      ['$const22.10']
    $24return_value.11 = cast(value=$const22.10) ['$24return_value.11', '$const22.10']
    return $24return_value.11                ['$24return_value.11']

2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcaa3400>
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(3, name=y)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7ffedd4f9570>)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const16.7 = const(NoneType, None)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18build_slice.8 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1170), Var($const16.7, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $10call_function.4
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const22.10 = const(NoneType, None)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24return_value.11 = cast(value=$const22.10)
2025-07-08 12:48:54,833 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $24return_value.11
2025-07-08 12:48:54,834 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7ffedcab4160>,
                                     0)],
             '$18build_slice.8': [(<numba.core.ir.Assign object at 0x7ffedcab46a0>,
                                   0)],
             '$18build_slice.9': [(<numba.core.ir.Assign object at 0x7ffedcab47c0>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x7ffedcab4b80>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcaa3be0>,
                                  0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffedcab43a0>,
                             0)],
             '$const16.7': [(<numba.core.ir.Assign object at 0x7ffedcab4520>,
                             0)],
             '$const22.10': [(<numba.core.ir.Assign object at 0x7ffedcab4a00>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7ffedcaa2ec0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedcaa3130>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedcaa3a60>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7ffedcaa3940>,
                           0)]})
2025-07-08 12:48:54,834 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcaa3400>
2025-07-08 12:48:54,860 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=3, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=3, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=4, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=4, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=4, lineno=5)
          40	LOAD_CONST(arg=2, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=3, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=2, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=5, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=6, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=4, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:54,860 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:54,860 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,860 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=3, lineno=2)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:54,861 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=4, lineno=3)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=4)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=5)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:54,862 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:54,863 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=8)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:54,864 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=5, lineno=6)
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=6, lineno=7)
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,865 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:54,866 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:54,867 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, 0)              ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 0)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,879 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,880 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 194
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,881 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 115
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 123
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 121
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 127
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const42.1 + index00
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,882 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 131
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 153
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 161
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 159
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 165
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 169
2025-07-08 12:48:54,883 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 173
2025-07-08 12:48:54,884 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 193
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc983c70>
2025-07-08 12:48:54,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,886 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$100return_value.9': [(<numba.core.ir.Assign object at 0x7ffedc94c520>,
                                     169)],
             '$102load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc958790>,
                                    173)],
             '$104load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc958bb0>,
                                    173)],
             '$108call_method.3': [(<numba.core.ir.Assign object at 0x7ffedc958af0>,
                                    173)],
             '$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedc978b80>,
                                   0)],
             '$110load_global.4': [(<numba.core.ir.Assign object at 0x7ffedc95a800>,
                                    173)],
             '$112load_method.5': [(<numba.core.ir.Assign object at 0x7ffedc95dcf0>,
                                    173)],
             '$116call_method.7': [(<numba.core.ir.Assign object at 0x7ffedc95c4f0>,
                                    173)],
             '$118compare_op.8': [(<numba.core.ir.Assign object at 0x7ffedc95dc00>,
                                   173)],
             '$120return_value.9': [(<numba.core.ir.Assign object at 0x7ffedc95c400>,
                                     173)],
             '$12unary_negative.4': [(<numba.core.ir.Assign object at 0x7ffedc8d4d90>,
                                      90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedc9788e0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedc978760>,
                                   0)],
             '$20compare_op.7': [(<numba.core.ir.Assign object at 0x7ffedc8d4f70>,
                                  90)],
             '$22pred': [(<numba.core.ir.Assign object at 0x7ffedc8ddf60>, 90)],
             '$26compare_op.2': [(<numba.core.ir.Assign object at 0x7ffedc8ee3b0>,
                                  91)],
             '$28pred': [(<numba.core.ir.Assign object at 0x7ffedcaa07f0>, 91)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedc979060>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedc979180>,
                                      0)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedc979960>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedc979a80>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedc979cc0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedc979e40>,
                                      0)],
             '$50unary_negative.4': [(<numba.core.ir.Assign object at 0x7ffedc8f8430>,
                                      127)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedc97a320>,
                                        0)],
             '$58compare_op.7': [(<numba.core.ir.Assign object at 0x7ffedc8f8610>,
                                  127)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedc97a440>,
                                         0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7ffedc901600>,
                          127)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedc97a890>,
                                        0)],
             '$64compare_op.2': [(<numba.core.ir.Assign object at 0x7ffedc90d8d0>,
                                  131)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedc97a9e0>,
                                      0)],
             '$66pred': [(<numba.core.ir.Assign object at 0x7ffedc90f730>,
                          131)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedc97aec0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedc97b010>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedc97b1c0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedc97b2e0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedc97b3d0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedc97b4f0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedc97b610>,
                                  80)],
             '$80pred': [(<numba.core.ir.Assign object at 0x7ffedc92cf10>,
                          165)],
             '$82load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc9377c0>,
                                   169)],
             '$84load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc937a00>,
                                   169)],
             '$88call_method.3': [(<numba.core.ir.Assign object at 0x7ffedc9397b0>,
                                   169)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedc973070>,
                                    0)],
             '$90load_global.4': [(<numba.core.ir.Assign object at 0x7ffedc939990>,
                                   169)],
             '$92load_method.5': [(<numba.core.ir.Assign object at 0x7ffedc940eb0>,
                                   169)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedc97bf40>,
                                      194)],
             '$96call_method.7': [(<numba.core.ir.Assign object at 0x7ffedc942830>,
                                   169)],
             '$98compare_op.8': [(<numba.core.ir.Assign object at 0x7ffedc942a10>,
                                  169)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedc978160>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedc978d60>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedc978ee0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedc9793c0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc8d19c0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedc979660>,
                                0)],
             '$const42.1': [(<numba.core.ir.Assign object at 0x7ffedc8f65c0>,
                             127)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedc9797e0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedc979fc0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedc97a140>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedc97a6e0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedc97ab60>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedc97ace0>,
                                0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7ffedc8df8e0>,
                           90)],
             '$phi62.0': [(<numba.core.ir.Assign object at 0x7ffedc902f80>,
                           127)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedc973490>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedc97a560>,
                             80)],
             'bool22': [(<numba.core.ir.Assign object at 0x7ffedc8d6a10>, 90)],
             'bool28': [(<numba.core.ir.Assign object at 0x7ffedc8c40d0>, 91)],
             'bool60': [(<numba.core.ir.Assign object at 0x7ffedc8fa0b0>, 127)],
             'bool66': [(<numba.core.ir.Assign object at 0x7ffedc90da50>, 131)],
             'bool80': [(<numba.core.ir.Assign object at 0x7ffedc92cc40>, 165)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedc9733a0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedc97b8e0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedc9782e0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedc8d1810>,
                                90),
                               (<numba.core.ir.Assign object at 0x7ffedc966710>,
                                127)],
             'threshold': [(<numba.core.ir.Assign object at 0x7ffedc9738e0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc973a00>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7ffedc9272e0>, 90),
                    (<numba.core.ir.Assign object at 0x7ffedc8f2f80>, 121)],
             'x1': [(<numba.core.ir.Assign object at 0x7ffedc972e30>, 127),
                    (<numba.core.ir.Assign object at 0x7ffedc925600>, 159)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7ffedc9737c0>,
                           0)]})
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc983c70>
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var stencil_index
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,887 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,888 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: stencil_index
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,889 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const42.1 + index00
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,890 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,891 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc983130>
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x7ffedc983e20>],
             127: [<numba.core.ir.Assign object at 0x7ffedc983340>]})
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,892 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,893 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,894 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,895 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,896 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,897 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,898 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983130>
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var x0
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,899 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,900 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,901 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: x0
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = const(int, 0)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x0.1 = const(int, 0)
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,902 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,903 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,904 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9839a0>
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x7ffedc982920>],
             121: [<numba.core.ir.Assign object at 0x7ffedc982f80>]})
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,905 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,906 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$phi24.0 = x0
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,907 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 91
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 90 from label 91
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 90
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.1 = const(int, 0)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,908 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,909 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 169
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 169
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 165
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 165
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 127
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 127
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 123
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 123
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 90 from label 123
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 90
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 121
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x0.1 = const(int, 0)
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 91
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 91
2025-07-08 12:48:54,910 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 90 from label 91
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 90
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x0' stmt=$108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 173
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 173
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 165
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 165
2025-07-08 12:48:54,911 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc983ca0>
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var x1
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,912 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,913 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,914 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.1 = const(int, 0)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[123, 121, 91])
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: x1
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,915 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = const(int, 0)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: x1.1 = const(int, 0)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,916 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc9835e0>
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {127: [<numba.core.ir.Assign object at 0x7ffedc982fb0>],
             159: [<numba.core.ir.Assign object at 0x7ffedc9920b0>]})
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,917 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: threshold = arg(1, name=threshold)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: zero_pos = arg(2, name=zero_pos)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, 0)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:54,918 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 0)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 194
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,919 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 194
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 90
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi24.0 = x0
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $22pred, 91, 123
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 91
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26compare_op.2 = x0 <= threshold
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool28 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $28pred, 115, 127
2025-07-08 12:48:54,920 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 115
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 121
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 123
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 121
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.1 = const(int, 0)
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 127
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 127
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[123, 121, 91])
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.1 = const(int, -1)
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const42.1 + index00
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$58compare_op.7 = $50unary_negative.4 <= x1
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.0 = x1
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$phi62.0 = x1
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60pred, 131, 161
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 131
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,921 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$64compare_op.2 = x1 <= threshold
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 131
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 131
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool66 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $66pred, 153, 165
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 153
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 159
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 159
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x1.1 = const(int, 0)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 165
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 165
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool80 = global(bool: <class 'bool'>)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80pred, 169, 173
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 169
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-07-08 12:48:54,922 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 169
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 169
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 165
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 165
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 161
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 161
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 161
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 131
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 131
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 127 from label 131
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 127
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 159
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def x1.1 = const(int, 0)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $96call_method.7 = call $92load_method.5(x1.2, func=$92load_method.5, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-07-08 12:48:54,923 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $100return_value.9
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 173
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='x1' stmt=$116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 173
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 165 from label 173
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 165
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $116call_method.7 = call $112load_method.5(x1.2, func=$112load_method.5, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $120return_value.9
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 193
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 193
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc9839a0>
2025-07-08 12:48:54,924 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	LOAD_FAST(arg=0, lineno=1026)
           4	LOAD_CONST(arg=1, lineno=1026)
           6	BINARY_SUBSCR(arg=None, lineno=1026)
           8	LOAD_FAST(arg=0, lineno=1026)
          10	LOAD_CONST(arg=2, lineno=1026)
          12	BINARY_SUBSCR(arg=None, lineno=1026)
          14	COMPARE_OP(arg=4, lineno=1026)
          16	LOAD_FAST(arg=0, lineno=1026)
          18	LOAD_CONST(arg=1, lineno=1026)
          20	BINARY_SUBSCR(arg=None, lineno=1026)
          22	LOAD_FAST(arg=0, lineno=1026)
          24	LOAD_CONST(arg=3, lineno=1026)
          26	BINARY_SUBSCR(arg=None, lineno=1026)
          28	COMPARE_OP(arg=5, lineno=1026)
          30	BINARY_AND(arg=None, lineno=1026)
          32	RETURN_VALUE(arg=None, lineno=1026)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1026)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1026)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1026)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1026)
2025-07-08 12:48:55,459 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$x8.3']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$x16.7']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$28compare_op.13']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30binary_and.14']
2025-07-08 12:48:55,460 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:55,461 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:55,461 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	LOAD_FAST(arg=0, lineno=1032)
           4	LOAD_CONST(arg=1, lineno=1032)
           6	BINARY_SUBSCR(arg=None, lineno=1032)
           8	LOAD_FAST(arg=0, lineno=1032)
          10	LOAD_CONST(arg=2, lineno=1032)
          12	BINARY_SUBSCR(arg=None, lineno=1032)
          14	COMPARE_OP(arg=0, lineno=1032)
          16	LOAD_FAST(arg=0, lineno=1032)
          18	LOAD_CONST(arg=1, lineno=1032)
          20	BINARY_SUBSCR(arg=None, lineno=1032)
          22	LOAD_FAST(arg=0, lineno=1032)
          24	LOAD_CONST(arg=3, lineno=1032)
          26	BINARY_SUBSCR(arg=None, lineno=1032)
          28	COMPARE_OP(arg=1, lineno=1032)
          30	BINARY_AND(arg=None, lineno=1032)
          32	RETURN_VALUE(arg=None, lineno=1032)
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1032)
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1032)
2025-07-08 12:48:55,462 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$x8.3']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$x16.7']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1032)
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14compare_op.6', '$28compare_op.13']
2025-07-08 12:48:55,463 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30binary_and.14']
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:55,464 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:55,464 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	LOAD_GLOBAL(arg=0, lineno=1049)
           4	LOAD_FAST(arg=0, lineno=1049)
           6	CALL_FUNCTION(arg=1, lineno=1049)
           8	LOAD_FAST(arg=1, lineno=1049)
          10	LOAD_CONST(arg=1, lineno=1049)
          12	LOAD_CONST(arg=1, lineno=1049)
          14	BUILD_SLICE(arg=2, lineno=1049)
          16	STORE_SUBSCR(arg=None, lineno=1049)
          18	LOAD_CONST(arg=1, lineno=1049)
          20	RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1035)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1049)
2025-07-08 12:48:55,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:55,469 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:55,469 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc5f1ab0>
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffedc5f0640>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffedc5f0520>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffedc5f03d0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc5f3850>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc5f3b50>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc5f3d90>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffedc5f3f10>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc5f0220>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc5f2d10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedc5f2410>, 0)]})
2025-07-08 12:48:55,474 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc5f1ab0>
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:55,487 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:55,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:55,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:55,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:55,491 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:55,492 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,492 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,492 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,492 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,492 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:55,493 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:55,493 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:55,493 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:55,493 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:55,493 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:55,493 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:55,494 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc69bbb0>
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,502 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:55,503 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc69bbb0>
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc69bbb0>
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc69bbb0>
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:55,504 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc69bbb0>
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc69bbb0>
2025-07-08 12:48:55,505 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:55,506 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedc712500>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffedc7119f0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffedc61b640>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedc7133a0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedc713190>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffedc711e40>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc711c00>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffedc6523b0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffedc652d10>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedc712c20>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedc710e80>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffedc653160>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedc72ad10>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedc72ae30>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedc72bb50>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedc7280d0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedc637940>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedc637a60>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedc6345e0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedc634460>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc6522c0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedc634790>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedc6348e0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedc634a90>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedc634bb0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedc634ca0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedc634dc0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedc634ee0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedc713160>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedc635810>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc618a30>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc61b610>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc61a9b0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedc712230>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedc711930>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedc712410>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedc713d60>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc5fe140>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedc728130>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedc72ac50>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedc636530>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedc636b60>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedc637d00>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedc6342e0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedc634160>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedc713880>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedc637b80>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedc713a00>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedc6351b0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedc712590>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedc650fd0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffedc7119c0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffedc711f00>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffedc711cc0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc713490>, 0)]})
2025-07-08 12:48:55,507 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc6374f0>
2025-07-08 12:48:55,829 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	LOAD_GLOBAL(arg=0, lineno=1049)
           4	LOAD_FAST(arg=0, lineno=1049)
           6	CALL_FUNCTION(arg=1, lineno=1049)
           8	LOAD_FAST(arg=1, lineno=1049)
          10	LOAD_CONST(arg=1, lineno=1049)
          12	LOAD_CONST(arg=1, lineno=1049)
          14	BUILD_SLICE(arg=2, lineno=1049)
          16	STORE_SUBSCR(arg=None, lineno=1049)
          18	LOAD_CONST(arg=1, lineno=1049)
          20	RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1035)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,830 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:55,831 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:55,831 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc88f130>
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:55,835 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffedc88ed10>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffedc88eb60>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffedc88dc60>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc88f7f0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc88fbe0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc88e590>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffedc88f0d0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc88ff70>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc88f8e0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedc88ddb0>, 0)]})
2025-07-08 12:48:55,836 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc88f130>
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:55,848 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:55,849 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:55,850 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:55,851 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,852 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:55,853 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:55,854 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8e7910>
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:55,863 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8e7910>
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:55,864 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8e7910>
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8e7910>
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8e7910>
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-07-08 12:48:55,865 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:55,866 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:55,866 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:55,866 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:55,866 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:55,866 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8e7910>
2025-07-08 12:48:55,866 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:55,867 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedc8ed5a0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffedc8efd60>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffedc5da140>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedc8ed930>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedc8edab0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffedc8ec610>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc8ec3d0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffedc5c99f0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffedc5cb4c0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedc9257e0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedc9274c0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffedc5c8df0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedc926bf0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedc926ad0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedc926890>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedc926710>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedc926230>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedc926110>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedc925d20>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedc925b70>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc8effa0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedc927d90>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedc927be0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedc927a90>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedc927970>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedc927820>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedc927700>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedc9275e0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedc8ed420>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedc924df0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc8d6ad0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc5da530>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc5c83d0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedc8ec8e0>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedc8ec370>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedc925930>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedc925720>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc5d8550>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedc926ef0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedc926d70>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedc926590>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedc926410>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedc925e70>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedc9258a0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedc927f70>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedc8ed030>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedc925ff0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedc8ed180>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedc925450>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedc8ee0e0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedc8eee00>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffedc8efe20>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffedc8ec6d0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffedc8ec490>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc8ecee0>, 0)]})
2025-07-08 12:48:55,867 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc924c10>
2025-07-08 12:48:56,041 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	LOAD_GLOBAL(arg=0, lineno=1049)
           4	LOAD_FAST(arg=0, lineno=1049)
           6	CALL_FUNCTION(arg=1, lineno=1049)
           8	LOAD_FAST(arg=1, lineno=1049)
          10	LOAD_CONST(arg=1, lineno=1049)
          12	LOAD_CONST(arg=1, lineno=1049)
          14	BUILD_SLICE(arg=2, lineno=1049)
          16	STORE_SUBSCR(arg=None, lineno=1049)
          18	LOAD_CONST(arg=1, lineno=1049)
          20	RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:56,041 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:56,041 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,041 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1035)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:56,042 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:56,043 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:56,043 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc88e350>
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffedcd03760>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffedcd03640>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffedcd01360>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcd03fa0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffedcd03ca0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedcd03a60>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffedcd038e0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedcd03340>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedcd02020>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedcd022f0>, 0)]})
2025-07-08 12:48:56,047 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc88e350>
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:56,060 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:56,061 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:56,062 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,063 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,064 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:56,065 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:56,066 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedccbe740>
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,074 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedccbe740>
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedccbe740>
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedccbe740>
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedccbe740>
2025-07-08 12:48:56,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedccbe740>
2025-07-08 12:48:56,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:56,078 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedcbd5f00>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffedcea97e0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffedccbffa0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedcbd4a00>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedcbd4d90>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffedcea9ab0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedcea87f0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffedcce9c30>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffedcceb820>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedcbd4c40>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedcbd4e20>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffedceaa350>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedcb25930>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedcb25990>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedcb25ea0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedcb27c40>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedcb26ce0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedcb26e30>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedcb26d10>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedcb27a90>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedceab160>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedcb27340>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedcb27730>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedcb27ac0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedcb25d50>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedcb26380>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedcb24d60>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedcb24070>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedcbd6b00>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedcb24c70>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedccbdb40>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedcd03160>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedcce88e0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedcbd4730>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedcbd5210>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedcbd5540>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedcb27a30>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedcccc9a0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedcb26b30>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedcb27520>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedcb25b40>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedcb26770>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedcb26da0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedcb27970>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedcb27a60>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedcbd4490>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedcb268c0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedcd01900>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedcb25120>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedcbd45e0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedcea9270>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffedcea9960>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffedcea9b10>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffedcea9ba0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedccf2bf0>, 0)]})
2025-07-08 12:48:56,078 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedccbe740>
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	LOAD_GLOBAL(arg=0, lineno=1049)
           4	LOAD_FAST(arg=0, lineno=1049)
           6	CALL_FUNCTION(arg=1, lineno=1049)
           8	LOAD_FAST(arg=1, lineno=1049)
          10	LOAD_CONST(arg=1, lineno=1049)
          12	LOAD_CONST(arg=1, lineno=1049)
          14	BUILD_SLICE(arg=2, lineno=1049)
          16	STORE_SUBSCR(arg=None, lineno=1049)
          18	LOAD_CONST(arg=1, lineno=1049)
          20	RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1035)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1049)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1049)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1049)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1049)
2025-07-08 12:48:56,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1049)
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1049)
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:56,245 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:56,246 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd02140>
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>)
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:56,249 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffedc3bd5d0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffedc3bd6f0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffedc3bdab0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc3bcd90>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc3bd090>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc3bd2d0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffedc3bd450>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc3bd930>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc3bc520>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedc3bc2b0>, 0)]})
2025-07-08 12:48:56,250 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcd02140>
2025-07-08 12:48:56,262 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:56,262 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:56,262 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,262 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:56,262 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:56,262 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,263 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:56,264 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,265 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:56,266 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,267 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:56,268 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:56,269 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc4059f0>
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:56,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:56,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:56,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc4059f0>
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc4059f0>
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc4059f0>
2025-07-08 12:48:56,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc4059f0>
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:56,280 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:56,281 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc4059f0>
2025-07-08 12:48:56,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:56,282 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedc3df190>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffedc3dea40>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffedc3cbdc0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedc3d1f00>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedc3ec0a0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffedc3dec80>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc3deec0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffedc3d32b0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffedc3d3490>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedc3ecc40>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedc3ecd60>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffedc3d3f40>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedc3ed540>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedc3ed660>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedc3ed8a0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedc3eda20>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedc3edf00>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee020>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee470>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee5c0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc3de800>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedc3eeaa0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedc3eebf0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedc3eeda0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedc3eeec0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedc3eefb0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedc3ef0d0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedc3ef1f0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedc3df310>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedc3efb20>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc3ca8c0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc3cbfa0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc3d1db0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedc3ec6a0>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedc3ec940>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedc3ecac0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedc3ecfa0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc3beb00>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedc3ed240>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedc3ed3c0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedc3edba0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedc3edd20>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee2c0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee740>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee8c0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedc3df7f0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee140>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedc3df700>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedc3ef4c0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedc3ec520>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedc3dde10>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffedc3de980>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffedc3debc0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffedc3dee00>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc3df9a0>, 0)]})
2025-07-08 12:48:56,282 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc3f69b0>
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	LOAD_GLOBAL(arg=0, lineno=1049)
           4	LOAD_FAST(arg=0, lineno=1049)
           6	CALL_FUNCTION(arg=1, lineno=1049)
           8	LOAD_FAST(arg=1, lineno=1049)
          10	LOAD_CONST(arg=1, lineno=1049)
          12	LOAD_CONST(arg=1, lineno=1049)
          14	BUILD_SLICE(arg=2, lineno=1049)
          16	STORE_SUBSCR(arg=None, lineno=1049)
          18	LOAD_CONST(arg=1, lineno=1049)
          20	RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1035)
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1049)
2025-07-08 12:48:56,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1049)
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:56,450 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:56,451 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:56,451 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:56,451 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:56,451 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:56,451 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:56,451 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc3c8280>
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc6288e0>)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1049), Var($const12.5, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffedc2fde70>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffedc2fc190>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffedc2fe260>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc2fdf30>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc2fe2f0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc2ff490>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffedc2fe920>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc2fd9c0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc2ff700>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffedc2ff7f0>, 0)]})
2025-07-08 12:48:56,455 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc3c8280>
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:56,468 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:56,469 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:56,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:56,471 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:56,472 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:56,473 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:56,474 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:56,474 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:56,474 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:56,475 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1e8c70>
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:56,482 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:56,483 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1e8c70>
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1e8c70>
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1e8c70>
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1e8c70>
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:56,484 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:56,485 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1e8c70>
2025-07-08 12:48:56,486 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:56,486 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffedc1c31c0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffedc1c1cc0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffedc1b3040>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffedc1c2dd0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffedc1c2c50>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffedc1c1f00>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc1c2140>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffedc1ba530>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffedc1ba710>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffedc1c3e80>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffedc1c3fa0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffedc1bb1c0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffedc1d07c0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffedc1d08e0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffedc1d0b20>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffedc1d0ca0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffedc1d1180>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffedc1d12a0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffedc1d16f0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffedc1d1840>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc1c1a80>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffedc1d1d20>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffedc1d1e70>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffedc1d2020>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffedc1d2140>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffedc1d2230>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffedc1d2350>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffedc1d2470>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffedc1c3340>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffedc1d2da0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffedc1b1b40>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffedc1b3220>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc1b9030>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffedc1c2500>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffedc1c21d0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffedc1c3d00>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffedc1d0220>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc2ffaf0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffedc1d04c0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffedc1d0640>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffedc1d0e20>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffedc1d0fa0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffedc1d1540>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffedc1d19c0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffedc1d1b40>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffedc1c36d0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffedc1d13c0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffedc1c35e0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffedc1d2740>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffedc1c2680>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffedc1c1090>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffedc1c1c00>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffedc1c1e40>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffedc1c2080>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc1c3880>, 0)]})
2025-07-08 12:48:56,487 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc1db640>
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	LOAD_GLOBAL(arg=0, lineno=1066)
           4	LOAD_FAST(arg=0, lineno=1066)
           6	CALL_FUNCTION(arg=1, lineno=1066)
           8	LOAD_FAST(arg=1, lineno=1066)
          10	LOAD_CONST(arg=1, lineno=1066)
          12	LOAD_CONST(arg=1, lineno=1066)
          14	BUILD_SLICE(arg=2, lineno=1066)
          16	STORE_SUBSCR(arg=None, lineno=1066)
          18	LOAD_CONST(arg=1, lineno=1066)
          20	RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1052)
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1066)
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1066)
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1066)
2025-07-08 12:48:57,008 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,009 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:57,010 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:57,010 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,010 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,010 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:57,014 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,014 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f9e4a0>
2025-07-08 12:48:57,014 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,014 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffed7fc70d0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffed7fc71f0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed7fc75b0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7fc6890>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7fc6b90>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7fc6dd0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffed7fc6f50>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7fc7430>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7fc5d50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffed7fc5720>, 0)]})
2025-07-08 12:48:57,015 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7f9e4a0>
2025-07-08 12:48:57,027 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,027 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,027 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,027 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:57,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:57,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:57,030 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:57,031 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,032 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:57,033 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:57,033 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,033 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:57,033 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:57,033 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:57,033 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,034 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f06260>
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:57,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:57,042 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f06260>
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f06260>
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f06260>
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f06260>
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,043 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f06260>
2025-07-08 12:48:57,044 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,045 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffed7f50160>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffed7f518a0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffed7fb4970>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffed7f50700>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffed7f508e0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed7f52230>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffed7f51030>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffed7f81300>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffed7f809d0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffed7f43f40>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffed7f43d00>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffed7f83730>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffed7f43af0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffed7f432b0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffed7f43010>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffed7f42f80>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffed7f42950>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffed7f420e0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffed7f42710>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffed7f42530>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffed7f518d0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffed7f41a80>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffed7f41e40>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffed7f42020>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffed7f41ae0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffed7f40370>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffed7f40190>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffed7f40460>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffed7f500d0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffed7f41000>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7fb5e70>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7fb4220>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffed7f825c0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffed7f51060>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffed7f82500>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffed7f40130>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffed7f43400>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7f9f550>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffed7f436d0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffed7f43430>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffed7f42d10>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffed7f43370>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffed7f407f0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffed7f424d0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffed7f42200>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffed7f52080>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffed7f42a70>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffed7f50a90>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffed7f407c0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffed7f51390>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffed7f527a0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffed7f51ab0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffed7f51600>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffed7f510c0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7f50fd0>, 0)]})
2025-07-08 12:48:57,045 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc1037c0>
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	LOAD_GLOBAL(arg=0, lineno=1066)
           4	LOAD_FAST(arg=0, lineno=1066)
           6	CALL_FUNCTION(arg=1, lineno=1066)
           8	LOAD_FAST(arg=1, lineno=1066)
          10	LOAD_CONST(arg=1, lineno=1066)
          12	LOAD_CONST(arg=1, lineno=1066)
          14	BUILD_SLICE(arg=2, lineno=1066)
          16	STORE_SUBSCR(arg=None, lineno=1066)
          18	LOAD_CONST(arg=1, lineno=1066)
          20	RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1052)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1066)
2025-07-08 12:48:57,210 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1066)
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,211 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,212 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f9cee0>
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:57,215 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:57,216 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffed7d2e260>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffed7d2e380>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed7d2e740>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7d2da20>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7d2dd20>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7d2df60>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffed7d2e0e0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7d2e5c0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7d2d1b0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffed7d2cf40>, 0)]})
2025-07-08 12:48:57,216 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7f9cee0>
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:57,228 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:57,229 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:57,230 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:57,231 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:57,232 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:57,233 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,234 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1cdc0>
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,242 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,243 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1cdc0>
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1cdc0>
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1cdc0>
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1cdc0>
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:57,244 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1cdc0>
2025-07-08 12:48:57,245 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,246 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffed7d60850>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffed7d53610>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffed7d489d0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffed7d60af0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffed7d60c70>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed7d53850>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffed7d53a90>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffed7d4be80>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffed7d500a0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffed7d61810>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffed7d61930>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffed7d50b50>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffed7d62110>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffed7d62230>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffed7d62470>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffed7d625f0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffed7d62ad0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffed7d62bf0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffed7d63040>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffed7d63190>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffed7d533d0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffed7d63670>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffed7d637c0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffed7d63970>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffed7d63a90>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffed7d63b80>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffed7d63ca0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffed7d63dc0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffed7d606d0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffed7d68730>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7d3f490>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7d48bb0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffed7d4a980>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffed7d61270>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffed7d61510>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffed7d61690>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffed7d61b70>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7d3e4a0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffed7d61e10>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffed7d61f90>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffed7d62770>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffed7d628f0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffed7d62e90>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffed7d63310>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffed7d63490>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffed7d60340>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffed7d62da0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffed7d60430>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffed7d680d0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffed7d610f0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffed7d529e0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffed7d53550>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffed7d53790>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffed7d539d0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7d60190>, 0)]})
2025-07-08 12:48:57,246 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7d3c6a0>
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	LOAD_GLOBAL(arg=0, lineno=1066)
           4	LOAD_FAST(arg=0, lineno=1066)
           6	CALL_FUNCTION(arg=1, lineno=1066)
           8	LOAD_FAST(arg=1, lineno=1066)
          10	LOAD_CONST(arg=1, lineno=1066)
          12	LOAD_CONST(arg=1, lineno=1066)
          14	BUILD_SLICE(arg=2, lineno=1066)
          16	STORE_SUBSCR(arg=None, lineno=1066)
          18	LOAD_CONST(arg=1, lineno=1066)
          20	RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1052)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1066)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1066)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1066)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1066)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,428 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1066)
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1066)
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,429 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,430 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d3d300>
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,433 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:57,434 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:57,434 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:57,434 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:57,434 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffed7c71150>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffed7c71450>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed7c72f80>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7c71a20>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7c70310>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7c70040>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffed7c70190>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7c73790>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7c712a0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffed7c70ca0>, 0)]})
2025-07-08 12:48:57,434 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7d3d300>
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,446 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:57,447 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:57,448 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,449 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:57,450 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:57,451 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,452 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:57,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,460 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:57,461 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,462 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,463 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffed7b225c0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffed7b210c0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffed7b12440>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffed7b221d0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffed7b22050>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed7b21300>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffed7b21540>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffed7b19930>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffed7b19b10>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffed7b23280>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffed7b233a0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffed7b1a5c0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffed7b23b80>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffed7b23ca0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffed7b23ee0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffed7b300a0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffed7b30580>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffed7b306a0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffed7b30af0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffed7b30c40>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffed7b20e80>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffed7b31120>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffed7b31270>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffed7b31420>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffed7b31540>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffed7b31630>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffed7b31750>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffed7b31870>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffed7b22740>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffed7b321a0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7b110f0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7b12620>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffed7b18430>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffed7b21900>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffed7b215d0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffed7b23100>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffed7b235e0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7b07ac0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffed7b23880>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffed7b23a00>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffed7b30220>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffed7b303a0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffed7b30940>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffed7b30dc0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffed7b30f40>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffed7b22ad0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffed7b307c0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffed7b229e0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffed7b31b40>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffed7b21a80>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffed7b20490>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffed7b21000>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffed7b21240>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffed7b21480>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7b22c80>, 0)]})
2025-07-08 12:48:57,463 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7b3b3a0>
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	LOAD_GLOBAL(arg=0, lineno=1066)
           4	LOAD_FAST(arg=0, lineno=1066)
           6	CALL_FUNCTION(arg=1, lineno=1066)
           8	LOAD_FAST(arg=1, lineno=1066)
          10	LOAD_CONST(arg=1, lineno=1066)
          12	LOAD_CONST(arg=1, lineno=1066)
          14	BUILD_SLICE(arg=2, lineno=1066)
          16	STORE_SUBSCR(arg=None, lineno=1066)
          18	LOAD_CONST(arg=1, lineno=1066)
          20	RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1052)
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1066)
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1066)
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1066)
2025-07-08 12:48:57,629 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,630 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,631 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f9c370>
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,634 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,635 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:57,635 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:57,635 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:57,635 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:57,635 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffed7a7dcc0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffed7a7d9f0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed7a7f1f0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7a7cd90>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7a7c460>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7a7c2e0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffed7a7c130>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7a7f970>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7a7d240>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffed7a7d330>, 0)]})
2025-07-08 12:48:57,635 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7f9c370>
2025-07-08 12:48:57,647 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,647 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,647 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:57,648 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:57,649 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:57,650 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:57,651 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,652 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:57,653 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,654 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a40580>
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:57,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:57,662 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a40580>
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a40580>
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a40580>
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a40580>
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:57,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a40580>
2025-07-08 12:48:57,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,665 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffed7a75900>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffed7a74400>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffed79217e0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffed7a75510>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffed7a75390>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed7a74640>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffed7a74880>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffed7a80cd0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffed7a80eb0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffed7a765c0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffed7a766e0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffed7a81960>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffed7a76ec0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffed7a76fe0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffed7a77220>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffed7a773a0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffed7a77880>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffed7a779a0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffed7a77df0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffed7a77f40>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffed7a741c0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffed7a57d30>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffed7a57be0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffed7a57970>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffed7a57880>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffed7a57850>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffed7a573d0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffed7a57700>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffed7a75a80>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffed7a56980>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7be7e50>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed79219c0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffed7923790>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffed7a74c40>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffed7a74910>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffed7a76440>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffed7a76920>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7a62500>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffed7a76bc0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffed7a76d40>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffed7a77520>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffed7a776a0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffed7a77c40>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffed7a577f0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffed7a57fa0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffed7a75e10>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffed7a77b50>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffed7a75d20>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffed7a56da0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffed7a74dc0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffed7a7e860>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffed7a74340>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffed7a74580>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffed7a747c0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7a75fc0>, 0)]})
2025-07-08 12:48:57,665 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7a551b0>
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	LOAD_GLOBAL(arg=0, lineno=1066)
           4	LOAD_FAST(arg=0, lineno=1066)
           6	CALL_FUNCTION(arg=1, lineno=1066)
           8	LOAD_FAST(arg=1, lineno=1066)
          10	LOAD_CONST(arg=1, lineno=1066)
          12	LOAD_CONST(arg=1, lineno=1066)
          14	BUILD_SLICE(arg=2, lineno=1066)
          16	STORE_SUBSCR(arg=None, lineno=1066)
          18	LOAD_CONST(arg=1, lineno=1066)
          20	RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1052)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$x4.1']
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3']
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,836 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1066)
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1066)
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1066)
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1066)
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const18.8']
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,837 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,838 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c72c50>
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y = arg(1, name=y)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7ffedc628b20>)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(NoneType, None)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const12.5 = const(NoneType, None)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1066), Var($const12.5, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(NoneType, None)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-07-08 12:48:57,841 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:48:57,842 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7ffed78db7c0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7ffed78db8e0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed78dbca0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed78daf80>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7ffed78db280>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed78db4c0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7ffed78db640>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed78dbb20>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed78da710>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7ffed78da4a0>, 0)]})
2025-07-08 12:48:57,842 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7c72c50>
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:57,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_global.2']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20call_function_kw.8']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-07-08 12:48:57,855 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$56call_function.25']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26']
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,856 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$76call_function.35']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-08 12:48:57,857 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$out090.0']
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$phi82.1']
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0', '$const84.2']
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi82.0']
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,858 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-07-08 12:48:57,859 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:57,861 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7715180>
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.9.1 = const(int, 0)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.11.1 = const(NoneType, None)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.12.1 = const(int, 1)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-07-08 12:48:57,868 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.15.1 = const(int, 0)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.17.1 = const(int, -1)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const42.18.1 = const(NoneType, None)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.23.1 = const(int, 0)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.24.1 = const(int, -1)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const62.28.1 = const(int, 0)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const68.31.1 = const(int, 0)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const70.32.1 = const(int, 1)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7715180>
2025-07-08 12:48:57,869 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $80for_iter.3.1, 82, 92
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7715180>
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: index00 = $phi82.1.1
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 90
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 92
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7715180>
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92return_value.1.1 = cast(value=out0)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $92return_value.1.1
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 90
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7715180>
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index = $const4.1 + index00
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(int, -1)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.1 = $const10.4 + index00
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const18.8 = const(int, 0)
2025-07-08 12:48:57,870 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.2 = $const18.8 + index00
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 1)
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: stencil_index.3 = $const24.11 + index00
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: out0[index00] = $32return_value.15
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 91
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 91
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7715180>
2025-07-08 12:48:57,871 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 80
2025-07-08 12:48:57,872 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7ffed77072e0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7ffed7706290>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7ffed78ec6d0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7ffed7707040>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7ffed7706ec0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed77064d0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffed7706710>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7ffed77028f0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7ffed7702fb0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7ffed78d9750>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7ffed78d9390>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7ffed7700d90>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7ffed78d8910>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7ffed78d8970>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7ffed78d8670>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7ffed78d8610>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7ffed78da170>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7ffed78d8130>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7ffed78d9a80>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7ffed78d8fa0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffed7704970>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7ffed78cac50>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7ffed78cbf10>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7ffed78cbc70>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7ffed78cbd60>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7ffed78cb6d0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7ffed78cb880>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7ffed78ca680>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7ffed77075b0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7ffed78cb2b0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed78ec700>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7ffed7701000>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffed7701750>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7ffed78d9c60>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7ffed78d9ab0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7ffed78d9870>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7ffed78d90f0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed78ed2d0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7ffed78d8b50>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7ffed78d8b80>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7ffed78d84c0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7ffed78d83a0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7ffed78d9e70>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7ffed78d8dc0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7ffed78c8700>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7ffed7a82500>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7ffed78cb790>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7ffed7707850>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7ffed78cad10>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7ffed7a82320>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7ffed7705180>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7ffed77061d0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7ffed7706410>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7ffed7706650>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7707af0>, 0)]})
2025-07-08 12:48:57,872 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed79dd510>
2025-07-08 12:48:58,487 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	LOAD_FAST(arg=0, lineno=1205)
           4	LOAD_CONST(arg=1, lineno=1205)
           6	BINARY_SUBSCR(arg=None, lineno=1205)
           8	LOAD_GLOBAL(arg=0, lineno=1205)
          10	LOAD_METHOD(arg=1, lineno=1205)
          12	LOAD_FAST(arg=0, lineno=1205)
          14	LOAD_CONST(arg=2, lineno=1205)
          16	LOAD_GLOBAL(arg=2, lineno=1205)
          18	LOAD_FAST(arg=2, lineno=1205)
          20	LOAD_FAST(arg=0, lineno=1205)
          22	LOAD_ATTR(arg=3, lineno=1205)
          24	LOAD_CONST(arg=1, lineno=1205)
          26	BINARY_SUBSCR(arg=None, lineno=1205)
          28	CALL_FUNCTION(arg=2, lineno=1205)
          30	BUILD_SLICE(arg=2, lineno=1205)
          32	BINARY_SUBSCR(arg=None, lineno=1205)
          34	CALL_METHOD(arg=1, lineno=1205)
          36	COMPARE_OP(arg=5, lineno=1205)
          38	LOAD_FAST(arg=7, lineno=1205)
          40	LOAD_CONST(arg=1, lineno=1205)
          42	STORE_SUBSCR(arg=None, lineno=1205)
          44	LOAD_FAST(arg=7, lineno=1206)
          46	LOAD_CONST(arg=1, lineno=1206)
          48	DUP_TOP_TWO(arg=None, lineno=1206)
          50	BINARY_SUBSCR(arg=None, lineno=1206)
          52	LOAD_FAST(arg=0, lineno=1206)
          54	LOAD_CONST(arg=1, lineno=1206)
          56	BINARY_SUBSCR(arg=None, lineno=1206)
          58	LOAD_GLOBAL(arg=0, lineno=1206)
          60	LOAD_METHOD(arg=4, lineno=1206)
          62	LOAD_FAST(arg=0, lineno=1206)
          64	LOAD_CONST(arg=2, lineno=1206)
          66	LOAD_GLOBAL(arg=2, lineno=1206)
          68	LOAD_FAST(arg=4, lineno=1206)
          70	LOAD_FAST(arg=0, lineno=1206)
          72	LOAD_ATTR(arg=3, lineno=1206)
          74	LOAD_CONST(arg=1, lineno=1206)
          76	BINARY_SUBSCR(arg=None, lineno=1206)
          78	CALL_FUNCTION(arg=2, lineno=1206)
          80	BUILD_SLICE(arg=2, lineno=1206)
          82	BINARY_SUBSCR(arg=None, lineno=1206)
          84	CALL_METHOD(arg=1, lineno=1206)
          86	LOAD_FAST(arg=5, lineno=1206)
          88	BINARY_ADD(arg=None, lineno=1206)
          90	COMPARE_OP(arg=5, lineno=1206)
          92	INPLACE_AND(arg=None, lineno=1206)
          94	ROT_THREE(arg=None, lineno=1206)
          96	STORE_SUBSCR(arg=None, lineno=1206)
          98	LOAD_FAST(arg=7, lineno=1208)
         100	LOAD_CONST(arg=1, lineno=1208)
         102	BINARY_SUBSCR(arg=None, lineno=1208)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1208)
         106	LOAD_FAST(arg=6, lineno=1209)
         108	LOAD_CONST(arg=3, lineno=1209)
         110	BINARY_ADD(arg=None, lineno=1209)
         112	STORE_FAST(arg=8, lineno=1209)
         114	JUMP_FORWARD(arg=2, lineno=1209)
>        116	LOAD_CONST(arg=3, lineno=1211)
         118	STORE_FAST(arg=8, lineno=1211)
>        120	LOAD_FAST(arg=8, lineno=1213)
         122	LOAD_FAST(arg=0, lineno=1213)
         124	LOAD_ATTR(arg=3, lineno=1213)
         126	LOAD_CONST(arg=1, lineno=1213)
         128	BINARY_SUBSCR(arg=None, lineno=1213)
         130	COMPARE_OP(arg=0, lineno=1213)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1213)
>        134	LOAD_GLOBAL(arg=0, lineno=1214)
         136	LOAD_METHOD(arg=1, lineno=1214)
         138	LOAD_FAST(arg=0, lineno=1214)
         140	LOAD_GLOBAL(arg=1, lineno=1214)
         142	LOAD_CONST(arg=1, lineno=1214)
         144	LOAD_FAST(arg=8, lineno=1214)
         146	LOAD_FAST(arg=1, lineno=1214)
         148	BINARY_SUBTRACT(arg=None, lineno=1214)
         150	CALL_FUNCTION(arg=2, lineno=1214)
         152	LOAD_GLOBAL(arg=2, lineno=1214)
         154	LOAD_FAST(arg=8, lineno=1214)
         156	LOAD_FAST(arg=2, lineno=1214)
         158	BINARY_ADD(arg=None, lineno=1214)
         160	LOAD_FAST(arg=0, lineno=1214)
         162	LOAD_ATTR(arg=3, lineno=1214)
         164	LOAD_CONST(arg=1, lineno=1214)
         166	BINARY_SUBSCR(arg=None, lineno=1214)
         168	CALL_FUNCTION(arg=2, lineno=1214)
         170	BUILD_SLICE(arg=2, lineno=1214)
         172	BINARY_SUBSCR(arg=None, lineno=1214)
         174	CALL_METHOD(arg=1, lineno=1214)
         176	STORE_FAST(arg=9, lineno=1214)
         178	LOAD_FAST(arg=0, lineno=1217)
         180	LOAD_FAST(arg=8, lineno=1217)
         182	BINARY_SUBSCR(arg=None, lineno=1217)
         184	LOAD_FAST(arg=9, lineno=1217)
         186	COMPARE_OP(arg=2, lineno=1217)
         188	LOAD_FAST(arg=7, lineno=1217)
         190	LOAD_FAST(arg=8, lineno=1217)
         192	STORE_SUBSCR(arg=None, lineno=1217)
         194	LOAD_FAST(arg=7, lineno=1219)
         196	LOAD_FAST(arg=8, lineno=1219)
         198	BINARY_SUBSCR(arg=None, lineno=1219)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1219)
         202	LOAD_FAST(arg=8, lineno=1220)
         204	LOAD_CONST(arg=3, lineno=1220)
         206	INPLACE_ADD(arg=None, lineno=1220)
         208	STORE_FAST(arg=8, lineno=1220)
         210	JUMP_ABSOLUTE(arg=61, lineno=1221)
>        212	LOAD_GLOBAL(arg=0, lineno=1223)
         214	LOAD_METHOD(arg=4, lineno=1223)
         216	LOAD_FAST(arg=0, lineno=1223)
         218	LOAD_GLOBAL(arg=1, lineno=1223)
         220	LOAD_CONST(arg=1, lineno=1223)
         222	LOAD_FAST(arg=8, lineno=1223)
         224	LOAD_FAST(arg=3, lineno=1223)
         226	BINARY_SUBTRACT(arg=None, lineno=1223)
         228	CALL_FUNCTION(arg=2, lineno=1223)
         230	LOAD_GLOBAL(arg=2, lineno=1223)
         232	LOAD_FAST(arg=8, lineno=1223)
         234	LOAD_FAST(arg=4, lineno=1223)
         236	BINARY_ADD(arg=None, lineno=1223)
         238	LOAD_FAST(arg=0, lineno=1223)
         240	LOAD_ATTR(arg=3, lineno=1223)
         242	LOAD_CONST(arg=1, lineno=1223)
         244	BINARY_SUBSCR(arg=None, lineno=1223)
         246	CALL_FUNCTION(arg=2, lineno=1223)
         248	BUILD_SLICE(arg=2, lineno=1223)
         250	BINARY_SUBSCR(arg=None, lineno=1223)
         252	CALL_METHOD(arg=1, lineno=1223)
         254	STORE_FAST(arg=10, lineno=1223)
         256	LOAD_FAST(arg=7, lineno=1224)
         258	LOAD_FAST(arg=8, lineno=1224)
         260	DUP_TOP_TWO(arg=None, lineno=1224)
         262	BINARY_SUBSCR(arg=None, lineno=1224)
         264	LOAD_FAST(arg=0, lineno=1224)
         266	LOAD_FAST(arg=8, lineno=1224)
         268	BINARY_SUBSCR(arg=None, lineno=1224)
         270	LOAD_FAST(arg=10, lineno=1224)
         272	LOAD_FAST(arg=5, lineno=1224)
         274	BINARY_ADD(arg=None, lineno=1224)
         276	COMPARE_OP(arg=5, lineno=1224)
         278	INPLACE_AND(arg=None, lineno=1224)
         280	ROT_THREE(arg=None, lineno=1224)
         282	STORE_SUBSCR(arg=None, lineno=1224)
         284	LOAD_FAST(arg=7, lineno=1226)
         286	LOAD_FAST(arg=8, lineno=1226)
         288	BINARY_SUBSCR(arg=None, lineno=1226)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1226)
         292	LOAD_FAST(arg=8, lineno=1227)
         294	LOAD_CONST(arg=3, lineno=1227)
         296	INPLACE_ADD(arg=None, lineno=1227)
         298	STORE_FAST(arg=8, lineno=1227)
         300	JUMP_ABSOLUTE(arg=61, lineno=1228)
>        302	LOAD_FAST(arg=8, lineno=1231)
         304	LOAD_FAST(arg=6, lineno=1231)
         306	LOAD_CONST(arg=3, lineno=1231)
         308	BINARY_ADD(arg=None, lineno=1231)
         310	INPLACE_ADD(arg=None, lineno=1231)
         312	STORE_FAST(arg=8, lineno=1231)
         314	LOAD_FAST(arg=8, lineno=1213)
         316	LOAD_FAST(arg=0, lineno=1213)
         318	LOAD_ATTR(arg=3, lineno=1213)
         320	LOAD_CONST(arg=1, lineno=1213)
         322	BINARY_SUBSCR(arg=None, lineno=1213)
         324	COMPARE_OP(arg=0, lineno=1213)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1213)
         328	LOAD_CONST(arg=2, lineno=1213)
         330	RETURN_VALUE(arg=None, lineno=1213)
>        332	LOAD_CONST(arg=2, lineno=1213)
         334	RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:58,487 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,487 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,487 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1193)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$8load_global.3']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:58,488 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$34call_method.17']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1206)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1206)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22']
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:58,489 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:58,490 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1208)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1208)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1208)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48', '$const100.49']
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1208)
2025-07-08 12:48:58,491 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$102binary_subscr.50']
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1209)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1209)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0']
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1209)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0', '$const108.1']
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1209)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110binary_add.2']
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1209)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1211)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1211)
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const116.0']
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,492 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=120 nstack_initial=0)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$x122.1']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2', '$const126.3']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$128binary_subscr.4']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1213)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$130compare_op.5']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1214)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1214)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$134load_global.0']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1']
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1214)
2025-07-08 12:48:58,493 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:48:58,494 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1214)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1214)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$172binary_subscr.20']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1214)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$174call_method.21']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22', '$n180.23']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24', '$maxn184.25']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1219)
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,495 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1219)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29']
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1219)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29', '$n196.30']
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1219)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$198binary_subscr.31']
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=332 nstack_initial=0)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const332.0']
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1220)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1220)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0']
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1220)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0', '$const204.1']
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1220)
2025-07-08 12:48:58,496 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$206inplace_add.2']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1221)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=212 nstack_initial=0)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$212load_global.0']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1223)
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
2025-07-08 12:48:58,497 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$250binary_subscr.20']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1223)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$252call_method.21']
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1224)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:48:58,498 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1226)
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,499 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1226)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35']
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1226)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35', '$n286.36']
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1226)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$288binary_subscr.37']
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1227)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1227)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0']
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1227)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0', '$const294.1']
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1227)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$296inplace_add.2']
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1228)
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,500 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1231)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1231)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1231)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1231)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1', '$const306.2']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1231)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$308binary_add.3']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1231)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$310inplace_add.4']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$x316.6']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7', '$const320.8']
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:48:58,501 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$322binary_subscr.9']
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1213)
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$324compare_op.10']
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const328.0']
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,502 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,503 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,506 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:58,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 106
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 116
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 120
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 134
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 202
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 212
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 292
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 302
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 328
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 332
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 333
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7a406a0>
2025-07-08 12:48:58,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,527 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x7ffed7956230>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7ffed771ab00>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x7ffed7957d00>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x7ffed78499f0>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffed7897100>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x7ffed784ab00>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7ffed784ba30>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7ffed784b3a0>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x7ffed784afb0>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x7ffed784a3e0>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffed7848100>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x7ffed784a410>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x7ffed7848df0>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x7ffed78497b0>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x7ffed78496c0>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffed7895600>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x7ffed7849180>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x7ffed78eca00>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x7ffed78485b0>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x7ffed7849900>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffed78487c0>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x7ffed784a080>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x7ffed7849660>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x7ffed7849c30>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7ffed7849a50>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffed7848340>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x7ffed784b340>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x7ffed784bb50>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x7ffed7763280>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffed77606d0>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x7ffed77639d0>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x7ffed78ed540>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x7ffed7762a40>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x7ffed77628f0>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x7ffed7762320>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffed7750a90>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x7ffed7762020>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x7ffed7761e70>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x7ffed7760040>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffed7760340>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x7ffed7760d00>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x7ffed7761000>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffed7750fa0>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x7ffed7761750>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x7ffed77617e0>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x7ffed7761930>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x7ffed7762fe0>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x7ffed78ec220>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7ffed7763070>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffed77612a0>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x7ffed7762ec0>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x7ffed78c96f0>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x7ffed771b5e0>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x7ffed7761db0>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x7ffed78da800>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed7957fd0>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x7ffed7752230>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x7ffed7750070>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffed771b3a0>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x7ffed77502b0>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x7ffed7752b60>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x7ffed7719b10>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x7ffed7719ae0>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x7ffed7753a60>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x7ffed7751e70>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x7ffed7718d60>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x7ffed7718fd0>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x7ffed77182e0>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffed7752920>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x7ffed7719f00>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x7ffed79579a0>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x7ffed7718190>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x7ffed7718cd0>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x7ffed7718d30>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x7ffed7718700>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x7ffed77186a0>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x7ffed77187f0>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x7ffed78ec8e0>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x7ffed771a620>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x7ffed7718a60>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x7ffed771b730>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7ffed7718d90>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x7ffed784ab30>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffed7957760>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x7ffed7849360>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x7ffed7848670>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x7ffed7848280>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x7ffed7763a30>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffed78ed4b0>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x7ffed7762500>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x7ffed7760130>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x7ffed7763400>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x7ffed7752ef0>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x7ffed7750130>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x7ffed77506a0>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed78ed000>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x7ffed771a350>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x7ffed771afb0>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x7ffed771aad0>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x7ffed771a950>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x7ffed7719540>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7ffed7760550>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x7ffed771bca0>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x7ffed784afe0>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x7ffed7849b40>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x7ffed77630a0>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x7ffed7752170>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x7ffed7957e20>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7ffed78483a0>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x7ffed7718580>, 106),
                   (<numba.core.ir.Assign object at 0x7ffed771bd60>, 116),
                   (<numba.core.ir.Assign object at 0x7ffed784a140>, 202),
                   (<numba.core.ir.Assign object at 0x7ffed7760d60>, 292),
                   (<numba.core.ir.Assign object at 0x7ffed7761c60>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x7ffed79578e0>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7ffed7956fb0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7ffed7957550>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7ffed79573d0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7ffed79571f0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7ffed7957df0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7955ab0>, 0)]})
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed79570d0>
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var n
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:58,528 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,529 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: n
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n = wait + $const108.1
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.1 = const(int, 1)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,530 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:58,531 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.2 = $206inplace_add.2
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:58,532 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.3 = $296inplace_add.2
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.4 = $310inplace_add.4
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,533 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7763df0>
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x7ffed78943a0>],
             116: [<numba.core.ir.Assign object at 0x7ffed7895f00>],
             202: [<numba.core.ir.Assign object at 0x7ffed7895270>],
             292: [<numba.core.ir.Assign object at 0x7ffed7894310>],
             302: [<numba.core.ir.Assign object at 0x7ffed7894a30>]})
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:58,534 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,535 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,536 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.1 = const(int, 1)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 120
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:48:58,537 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n = wait + $const108.1
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 116
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.1 = const(int, 1)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 333
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 333
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 202
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.2 = $206inplace_add.2
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 292
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.3 = $296inplace_add.2
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[202, 292])
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 134
2025-07-08 12:48:58,538 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 120
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[106, 116, 333])
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 302
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.4 = $310inplace_add.4
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $148binary_subtract.7 = n.7 - pre_max
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$158binary_add.12 = n + post_max
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $158binary_add.12 = n.7 + post_max
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,539 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $186compare_op.26
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $186compare_op.26
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 202
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 202
2025-07-08 12:48:58,540 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.2 = $206inplace_add.2
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $226binary_subtract.7 = n.7 - pre_avg
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$236binary_add.12 = n + post_avg
2025-07-08 12:48:58,541 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $236binary_add.12 = n.7 + post_avg
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,542 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $278inplace_and.34
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $278inplace_and.34
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:48:58,543 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 292
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 292
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.3 = $296inplace_add.2
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 302
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 302
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.4 = $310inplace_add.4
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:58,544 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7763df0>
2025-07-08 12:48:58,545 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1', '$const6.2']
2025-07-08 12:48:58,553 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8compare_op.3']
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=12 nstack_initial=0)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0']
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0', '$const14.1']
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$16call_function.2']
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=20 nstack_initial=0)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20load_global.0']
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1']
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
2025-07-08 12:48:58,554 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1', '$a24.2']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$26call_method.3']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4', '$it32.5']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$34call_function.6']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7', '$const38.8']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.9']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10', '$max_value46.11']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48call_function.12']
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-08 12:48:58,555 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value52.0']
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$it56.0']
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi60.0']
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=1)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi60.0']
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=104 nstack_initial=0)
2025-07-08 12:48:58,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value104.0']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi62.0', '$phi62.1']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=62 nstack_initial=2)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$phi62.1']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$view64.2']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$66load_method.3']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$68call_method.4']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
2025-07-08 12:48:58,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$76call_function.7']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0', '$v80.1']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1', '$phi80.0']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi88.0']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=88 nstack_initial=1)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$94call_function.4']
2025-07-08 12:48:58,558 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi98.0']
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=98 nstack_initial=1)
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0']
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0', '$v98.1']
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi102.0']
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=102 nstack_initial=1)
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi102.0']
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:58,559 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,560 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
2025-07-08 12:48:58,560 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
2025-07-08 12:48:58,560 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
2025-07-08 12:48:58,560 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:58,560 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:58,560 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
2025-07-08 12:48:58,561 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,563 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 12
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,573 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 20
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 52
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,574 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 56
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 60
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 62
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:58,575 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 88
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 98
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 102
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 104
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed798dbd0>
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,576 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:58,577 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x7ffed798e9e0>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x7ffed7a42f50>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7a43d60>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7954d00>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7954ac0>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x7ffed79542e0>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x7ffed7955870>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x7ffed7956530>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x7ffed7956680>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x7ffed7956290>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x7ffed7955690>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7ffed7a42ad0>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7ffed7954fd0>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x7ffed7954cd0>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x7ffed7954430>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x7ffed798ff40>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x7ffed798c430>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x7ffed798ded0>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x7ffed798f2e0>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x7ffed798f9a0>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x7ffed798f6a0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x7ffed798f190>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x7ffed798dc00>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x7ffed798f3d0>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x7ffed7a43bb0>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x7ffed7a42140>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7ffed7a40b20>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x7ffed7895810>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x7ffed79557e0>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7ffed7a429e0>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x7ffed7954e20>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x7ffed798c730>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed7a41780>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x7ffed7a412a0>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x7ffed7955660>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x7ffed798e7a0>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x7ffed7a418d0>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x7ffed7955ba0>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x7ffed79559f0>,
                            20),
                           (<numba.core.ir.Assign object at 0x7ffed798e290>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x7ffed798f9d0>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x7ffed798f6d0>, 62)]})
2025-07-08 12:48:58,577 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed798dbd0>
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var max_value
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,578 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: max_value
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:58,579 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:58,580 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value.1 = v
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed798cfd0>
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x7ffed798c040>],
             98: [<numba.core.ir.Assign object at 0x7ffed798e380>]})
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,581 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,582 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 52
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 52
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,583 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 60
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 56
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 56
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 56
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 102
2025-07-08 12:48:58,584 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 102
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 88
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.1 = v
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:48:58,585 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value.1 = v
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed798cfd0>
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 104
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 104
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $106return_value.1 = cast(value=max_value.2)
2025-07-08 12:48:58,586 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:58,591 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:48:58,591 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,591 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,591 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,591 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$a4.1']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$10binary_subtract.4']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12compare_op.5']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=0)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$a18.1']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$20load_attr.2']
2025-07-08 12:48:58,592 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$22unary_negative.3']
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$24compare_op.4']
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0']
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0', '$const30.1']
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$32call_function.2']
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:58,593 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a36.0']
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$38load_method.1']
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2']
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2', '$indices42.3']
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44binary_subscr.4']
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,594 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
2025-07-08 12:48:58,595 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
2025-07-08 12:48:58,595 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,595 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,595 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

2025-07-08 12:48:58,600 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,600 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7933a90>
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: indices = arg(1, name=indices)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const8.3 = const(int, 1)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool14 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $14pred, 28, 16
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7933a90>
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24compare_op.4 = indices < $22unary_negative.3
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool26 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,601 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $26pred, 28, 36
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 28
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7933a90>
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.1 = const(str, Index out of bounds)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 36
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7933a90>
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
2025-07-08 12:48:58,602 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $46return_value.5
2025-07-08 12:48:58,603 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x7ffed7933370>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7ffed7933940>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x7ffed7931e70>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x7ffed7932020>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x7ffed7932110>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x7ffed7931ab0>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7ffed7932470>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7ffed79317e0>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x7ffed786a0e0>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x7ffed786a920>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x7ffed786aa40>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffed786a860>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x7ffed786a6e0>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7ffed7932e30>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x7ffed7931960>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x7ffed79330d0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed7932c50>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x7ffed7931780>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x7ffed79325c0>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x7ffed7932fe0>, 0)]})
2025-07-08 12:48:58,603 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7933a90>
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$ary2.0']
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$ary6.2']
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$8load_attr.3']
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_method.4']
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:58,618 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,619 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,619 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:58,619 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:58,619 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,619 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,619 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-07-08 12:48:58,622 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,622 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7869240>
2025-07-08 12:48:58,622 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ary = arg(0, name=ary)
2025-07-08 12:48:58,622 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
2025-07-08 12:48:58,622 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
2025-07-08 12:48:58,623 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,623 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-07-08 12:48:58,623 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $12return_value.5
2025-07-08 12:48:58,623 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7ffed7a7ee90>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7ffed7a7ef50>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffed7a7d510>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x7ffed7a7e050>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7ffed7a7d8a0>, 0)]})
2025-07-08 12:48:58,623 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7869240>
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2046)
           2	LOAD_CONST(arg=1, lineno=2047)
           4	STORE_FAST(arg=2, lineno=2047)
           6	LOAD_CONST(arg=2, lineno=2048)
           8	STORE_FAST(arg=3, lineno=2048)
          10	LOAD_GLOBAL(arg=0, lineno=2049)
          12	LOAD_FAST(arg=1, lineno=2049)
          14	CALL_FUNCTION(arg=1, lineno=2049)
          16	GET_ITER(arg=None, lineno=2049)
>         18	FOR_ITER(arg=19, lineno=2049)
          20	UNPACK_SEQUENCE(arg=2, lineno=2049)
          22	STORE_FAST(arg=4, lineno=2049)
          24	STORE_FAST(arg=5, lineno=2049)
          26	LOAD_FAST(arg=5, lineno=2050)
          28	LOAD_CONST(arg=1, lineno=2050)
          30	COMPARE_OP(arg=0, lineno=2050)
          32	POP_JUMP_IF_FALSE(arg=25, lineno=2050)
          34	LOAD_FAST(arg=2, lineno=2051)
          36	LOAD_CONST(arg=2, lineno=2051)
          38	INPLACE_ADD(arg=None, lineno=2051)
          40	STORE_FAST(arg=2, lineno=2051)
          42	LOAD_FAST(arg=4, lineno=2052)
          44	STORE_FAST(arg=6, lineno=2052)
          46	JUMP_ABSOLUTE(arg=10, lineno=2052)
>         48	LOAD_FAST(arg=3, lineno=2054)
          50	LOAD_FAST(arg=5, lineno=2054)
          52	INPLACE_MULTIPLY(arg=None, lineno=2054)
          54	STORE_FAST(arg=3, lineno=2054)
          56	JUMP_ABSOLUTE(arg=10, lineno=2054)
>         58	LOAD_FAST(arg=2, lineno=2056)
          60	LOAD_CONST(arg=1, lineno=2056)
          62	COMPARE_OP(arg=2, lineno=2056)
          64	POP_JUMP_IF_FALSE(arg=44, lineno=2056)
          66	LOAD_FAST(arg=0, lineno=2057)
          68	LOAD_FAST(arg=3, lineno=2057)
          70	COMPARE_OP(arg=3, lineno=2057)
          72	POP_JUMP_IF_FALSE(arg=42, lineno=2057)
          74	LOAD_GLOBAL(arg=1, lineno=2058)
          76	LOAD_CONST(arg=3, lineno=2058)
          78	CALL_FUNCTION(arg=1, lineno=2058)
          80	RAISE_VARARGS(arg=1, lineno=2058)
>         82	LOAD_CONST(arg=0, lineno=2057)
          84	RETURN_VALUE(arg=None, lineno=2057)
>         86	LOAD_FAST(arg=2, lineno=2060)
          88	LOAD_CONST(arg=2, lineno=2060)
          90	COMPARE_OP(arg=2, lineno=2060)
          92	POP_JUMP_IF_FALSE(arg=81, lineno=2060)
          94	LOAD_FAST(arg=3, lineno=2062)
          96	LOAD_CONST(arg=1, lineno=2062)
          98	COMPARE_OP(arg=2, lineno=2062)
         100	POP_JUMP_IF_FALSE(arg=59, lineno=2062)
         102	LOAD_CONST(arg=1, lineno=2063)
         104	STORE_FAST(arg=7, lineno=2063)
         106	LOAD_FAST(arg=0, lineno=2064)
         108	LOAD_CONST(arg=1, lineno=2064)
         110	COMPARE_OP(arg=2, lineno=2064)
         112	STORE_FAST(arg=8, lineno=2064)
         114	JUMP_FORWARD(arg=10, lineno=2064)
>        116	LOAD_FAST(arg=0, lineno=2066)
         118	LOAD_FAST(arg=3, lineno=2066)
         120	BINARY_FLOOR_DIVIDE(arg=None, lineno=2066)
         122	STORE_FAST(arg=7, lineno=2066)
         124	LOAD_FAST(arg=0, lineno=2067)
         126	LOAD_FAST(arg=3, lineno=2067)
         128	BINARY_MODULO(arg=None, lineno=2067)
         130	LOAD_CONST(arg=1, lineno=2067)
         132	COMPARE_OP(arg=2, lineno=2067)
         134	STORE_FAST(arg=8, lineno=2067)
>        136	LOAD_FAST(arg=8, lineno=2068)
         138	POP_JUMP_IF_TRUE(arg=75, lineno=2068)
         140	LOAD_GLOBAL(arg=1, lineno=2069)
         142	LOAD_CONST(arg=3, lineno=2069)
         144	CALL_FUNCTION(arg=1, lineno=2069)
         146	RAISE_VARARGS(arg=1, lineno=2069)
>        148	LOAD_FAST(arg=7, lineno=2070)
         150	LOAD_FAST(arg=1, lineno=2070)
         152	LOAD_FAST(arg=6, lineno=2070)
         154	STORE_SUBSCR(arg=None, lineno=2070)
         156	LOAD_CONST(arg=0, lineno=2070)
         158	RETURN_VALUE(arg=None, lineno=2070)
>        160	LOAD_GLOBAL(arg=1, lineno=2073)
         162	LOAD_CONST(arg=4, lineno=2073)
         164	CALL_FUNCTION(arg=1, lineno=2073)
         166	RAISE_VARARGS(arg=1, lineno=2073)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2046)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=2047)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=STORE_FAST(arg=2, lineno=2047)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const2.0']
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=2, lineno=2048)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=2048)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const6.1']
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=2049)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=2049)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_global.2']
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=2049)
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_global.2', '$shape12.3']
2025-07-08 12:48:58,630 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=GET_ITER(arg=None, lineno=2049)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14call_function.4']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=18, stack=('$16get_iter.5',), blockstack=(), npush=0)]
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi18.0']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=18 nstack_initial=1)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=FOR_ITER(arg=19, lineno=2049)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=2056)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=2056)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$num_neg_value58.0']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=2056)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$num_neg_value58.0', '$const60.1']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=44, lineno=2056)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$62compare_op.2']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=20 nstack_initial=2), State(pc_initial=66 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi20.0', '$phi20.1']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=20 nstack_initial=2)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=UNPACK_SEQUENCE(arg=2, lineno=2049)
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$phi20.1']
2025-07-08 12:48:58,631 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=STORE_FAST(arg=4, lineno=2049)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$20unpack_sequence.3', '$20unpack_sequence.2']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=STORE_FAST(arg=5, lineno=2049)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$20unpack_sequence.3']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=2050)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=2050)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$s26.5']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=2050)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$s26.5', '$const28.6']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=25, lineno=2050)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$30compare_op.7']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=34, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi20.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=86 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=66 nstack_initial=0)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2057)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=2057)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize66.0']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=2057)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize66.0', '$known_size68.1']
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=42, lineno=2057)
2025-07-08 12:48:58,632 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$70compare_op.2']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_FAST(arg=2, lineno=2060)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=2060)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$num_neg_value86.0']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=COMPARE_OP(arg=2, lineno=2060)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$num_neg_value86.0', '$const88.1']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=81, lineno=2060)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$90compare_op.2']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=160, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0)])
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi34.0']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=34 nstack_initial=1)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=2051)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=2051)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0', '$num_neg_value34.1']
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=INPLACE_ADD(arg=None, lineno=2051)
2025-07-08 12:48:58,633 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0', '$num_neg_value34.1', '$const36.2']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=STORE_FAST(arg=2, lineno=2051)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0', '$38inplace_add.3']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=2052)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=STORE_FAST(arg=6, lineno=2052)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0', '$ax42.4']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=JUMP_ABSOLUTE(arg=10, lineno=2052)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi34.0']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=18, stack=('$phi34.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi48.0']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=48 nstack_initial=1)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=2054)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi48.0']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=2054)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi48.0', '$known_size48.1']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=INPLACE_MULTIPLY(arg=None, lineno=2054)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi48.0', '$known_size48.1', '$s50.2']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=STORE_FAST(arg=3, lineno=2054)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi48.0', '$52inplace_multiply.3']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=JUMP_ABSOLUTE(arg=10, lineno=2054)
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi48.0']
2025-07-08 12:48:58,634 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=18, stack=('$phi48.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_GLOBAL(arg=1, lineno=2058)
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=2058)
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$74load_global.0']
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=2058)
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$74load_global.0', '$const76.1']
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=2058)
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$78call_function.2']
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,635 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=LOAD_CONST(arg=0, lineno=2057)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=2057)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const82.0']
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=2062)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=2062)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$known_size94.0']
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=COMPARE_OP(arg=2, lineno=2062)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$known_size94.0', '$const96.1']
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=POP_JUMP_IF_FALSE(arg=59, lineno=2062)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$98compare_op.2']
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=160 nstack_initial=0)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=LOAD_GLOBAL(arg=1, lineno=2073)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_CONST(arg=4, lineno=2073)
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$160load_global.0']
2025-07-08 12:48:58,636 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=CALL_FUNCTION(arg=1, lineno=2073)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$160load_global.0', '$const162.1']
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=RAISE_VARARGS(arg=1, lineno=2073)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$164call_function.2']
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=2063)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=STORE_FAST(arg=7, lineno=2063)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const102.0']
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=0, lineno=2064)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=2064)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize106.1']
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=COMPARE_OP(arg=2, lineno=2064)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize106.1', '$const108.2']
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=2064)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110compare_op.3']
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=JUMP_FORWARD(arg=10, lineno=2064)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=136 nstack_initial=0)])
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-07-08 12:48:58,637 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_FAST(arg=0, lineno=2066)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=2066)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize116.0']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=2066)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize116.0', '$known_size118.1']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=STORE_FAST(arg=7, lineno=2066)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$120binary_floor_divide.2']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=2067)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=2067)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize124.3']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=BINARY_MODULO(arg=None, lineno=2067)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$origsize124.3', '$known_size126.4']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=2067)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$128binary_modulo.5']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=COMPARE_OP(arg=2, lineno=2067)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$128binary_modulo.5', '$const130.6']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=STORE_FAST(arg=8, lineno=2067)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$132compare_op.7']
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=136 nstack_initial=0)])
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=136 nstack_initial=0)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=2068)
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,638 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=POP_JUMP_IF_TRUE(arg=75, lineno=2068)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$ok136.0']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0), Edge(pc=148, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=148 nstack_initial=0)])
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=148 nstack_initial=0)])
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=140 nstack_initial=0)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=2069)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=LOAD_CONST(arg=3, lineno=2069)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$140load_global.0']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=CALL_FUNCTION(arg=1, lineno=2069)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$140load_global.0', '$const142.1']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=RAISE_VARARGS(arg=1, lineno=2069)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$144call_function.2']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=148 nstack_initial=0)])
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=148 nstack_initial=0)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=LOAD_FAST(arg=7, lineno=2070)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=2070)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$inferred148.0']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=LOAD_FAST(arg=6, lineno=2070)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$inferred148.0', '$shape150.1']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=STORE_SUBSCR(arg=None, lineno=2070)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$inferred148.0', '$shape150.1', '$neg_ax152.2']
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_CONST(arg=0, lineno=2070)
2025-07-08 12:48:58,639 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=RETURN_VALUE(arg=None, lineno=2070)
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const156.3']
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=34 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=136 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=160 nstack_initial=0): set()})
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=1)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi48.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
2025-07-08 12:48:58,640 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi18.0': {('$16get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.5'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$const6.1'}), (8, {'value': '$const6.1'}), (10, {'res': '$10load_global.2'}), (12, {'res': '$shape12.3'}), (14, {'func': '$10load_global.2', 'args': ['$shape12.3'], 'res': '$14call_function.4'}), (16, {'value': '$14call_function.4', 'res': '$16get_iter.5'})), outgoing_phis={'$phi18.0': '$16get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.5',)})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 20: ('$phi18.0', '$18for_iter.2')})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'iterable': '$phi20.1', 'stores': ['$20unpack_sequence.2', '$20unpack_sequence.3'], 'tupleobj': '$20unpack_sequence.4'}), (22, {'value': '$20unpack_sequence.2'}), (24, {'value': '$20unpack_sequence.3'}), (26, {'res': '$s26.5'}), (28, {'res': '$const28.6'}), (30, {'lhs': '$s26.5', 'rhs': '$const28.6', 'res': '$30compare_op.7'}), (32, {'pred': '$30compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi20.0',), 48: ('$phi20.0',)})
2025-07-08 12:48:58,641 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'res': '$num_neg_value34.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$num_neg_value34.1', 'rhs': '$const36.2', 'res': '$38inplace_add.3'}), (40, {'value': '$38inplace_add.3'}), (42, {'res': '$ax42.4'}), (44, {'value': '$ax42.4'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi34.0',)})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'res': '$known_size48.1'}), (50, {'res': '$s50.2'}), (52, {'lhs': '$known_size48.1', 'rhs': '$s50.2', 'res': '$52inplace_multiply.3'}), (54, {'value': '$52inplace_multiply.3'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi48.0',)})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$num_neg_value58.0'}), (60, {'res': '$const60.1'}), (62, {'lhs': '$num_neg_value58.0', 'rhs': '$const60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 86: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$origsize66.0'}), (68, {'res': '$known_size68.1'}), (70, {'lhs': '$origsize66.0', 'rhs': '$known_size68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 82: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_global.0'}), (76, {'res': '$const76.1'}), (78, {'func': '$74load_global.0', 'args': ['$const76.1'], 'res': '$78call_function.2'}), (80, {'exc': '$78call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$const82.0'}), (84, {'retval': '$const82.0', 'castval': '$84return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$num_neg_value86.0'}), (88, {'res': '$const88.1'}), (90, {'lhs': '$num_neg_value86.0', 'rhs': '$const88.1', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 160: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$known_size94.0'}), (96, {'res': '$const96.1'}), (98, {'lhs': '$known_size94.0', 'rhs': '$const96.1', 'res': '$98compare_op.2'}), (100, {'pred': '$98compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 116: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$const102.0'}), (104, {'value': '$const102.0'}), (106, {'res': '$origsize106.1'}), (108, {'res': '$const108.2'}), (110, {'lhs': '$origsize106.1', 'rhs': '$const108.2', 'res': '$110compare_op.3'}), (112, {'value': '$110compare_op.3'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$origsize116.0'}), (118, {'res': '$known_size118.1'}), (120, {'lhs': '$origsize116.0', 'rhs': '$known_size118.1', 'res': '$120binary_floor_divide.2'}), (122, {'value': '$120binary_floor_divide.2'}), (124, {'res': '$origsize124.3'}), (126, {'res': '$known_size126.4'}), (128, {'lhs': '$origsize124.3', 'rhs': '$known_size126.4', 'res': '$128binary_modulo.5'}), (130, {'res': '$const130.6'}), (132, {'lhs': '$128binary_modulo.5', 'rhs': '$const130.6', 'res': '$132compare_op.7'}), (134, {'value': '$132compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=136 nstack_initial=0):
AdaptBlockInfo(insts=((136, {'res': '$ok136.0'}), (138, {'pred': '$ok136.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: (), 148: ()})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$140load_global.0'}), (142, {'res': '$const142.1'}), (144, {'func': '$140load_global.0', 'args': ['$const142.1'], 'res': '$144call_function.2'}), (146, {'exc': '$144call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$inferred148.0'}), (150, {'res': '$shape150.1'}), (152, {'res': '$neg_ax152.2'}), (154, {'target': '$shape150.1', 'index': '$neg_ax152.2', 'value': '$inferred148.0'}), (156, {'res': '$const156.3'}), (158, {'retval': '$const156.3', 'castval': '$158return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,642 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=160 nstack_initial=0):
AdaptBlockInfo(insts=((160, {'res': '$160load_global.0'}), (162, {'res': '$const162.1'}), (164, {'func': '$160load_global.0', 'args': ['$const162.1'], 'res': '$164call_function.2'}), (166, {'exc': '$164call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,644 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
label 20:
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    $const28.6 = const(int, 0)               ['$const28.6']
    $30compare_op.7 = s < $const28.6         ['$30compare_op.7', '$const28.6', 's']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    branch $32pred, 34, 48                   ['$32pred']
label 34:
    $const36.2 = const(int, 1)               ['$const36.2']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 18                                  []
label 48:
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    jump 18                                  []
label 58:
    $const60.1 = const(int, 0)               ['$const60.1']
    $62compare_op.2 = num_neg_value == $const60.1 ['$62compare_op.2', '$const60.1', 'num_neg_value']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 86                   ['$64pred']
label 66:
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 82                   ['$72pred']
label 74:
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $const76.1 = const(str, total size of new array must be unchanged) ['$const76.1']
    $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1']
    raise $78call_function.2                 ['$78call_function.2']
label 82:
    $const82.0 = const(NoneType, None)       ['$const82.0']
    $84return_value.1 = cast(value=$const82.0) ['$84return_value.1', '$const82.0']
    return $84return_value.1                 ['$84return_value.1']
label 86:
    $const88.1 = const(int, 1)               ['$const88.1']
    $90compare_op.2 = num_neg_value == $const88.1 ['$90compare_op.2', '$const88.1', 'num_neg_value']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 160                  ['$92pred']
label 94:
    $const96.1 = const(int, 0)               ['$const96.1']
    $98compare_op.2 = known_size == $const96.1 ['$98compare_op.2', '$const96.1', 'known_size']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    branch $100pred, 102, 116                ['$100pred']
label 102:
    inferred = const(int, 0)                 ['inferred']
    $const108.2 = const(int, 0)              ['$const108.2']
    ok = origsize == $const108.2             ['$const108.2', 'ok', 'origsize']
    jump 136                                 []
label 116:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $const130.6 = const(int, 0)              ['$const130.6']
    ok = $128binary_modulo.5 == $const130.6  ['$128binary_modulo.5', '$const130.6', 'ok']
    jump 136                                 []
label 136:
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    branch $138pred, 148, 140                ['$138pred']
label 140:
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $const142.1 = const(str, total size of new array must be unchanged) ['$const142.1']
    $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1']
    raise $144call_function.2                ['$144call_function.2']
label 148:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const156.3 = const(NoneType, None)      ['$const156.3']
    $158return_value.4 = cast(value=$const156.3) ['$158return_value.4', '$const156.3']
    return $158return_value.4                ['$158return_value.4']
label 160:
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $const162.1 = const(str, multiple negative shape values) ['$const162.1']
    $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1']
    raise $164call_function.2                ['$164call_function.2']

2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 18
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,654 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 20
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 34
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = $38inplace_add.3
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 48
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,655 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = $52inplace_multiply.3
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 58
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value == $const60.1
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 66
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 74
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 82
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 86
2025-07-08 12:48:58,656 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value == $const88.1
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 94
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size == $const96.1
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 102
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 116
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = origsize // known_size
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,657 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 136
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 140
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 148
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 160
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 161
2025-07-08 12:48:58,658 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c71240>
2025-07-08 12:48:58,659 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7ffed7be71c0>,
                           94)],
             '$10load_global.2': [(<numba.core.ir.Assign object at 0x7ffed7c73ca0>,
                                   0)],
             '$128binary_modulo.5': [(<numba.core.ir.Assign object at 0x7ffed7be4d90>,
                                      116)],
             '$138pred': [(<numba.core.ir.Assign object at 0x7ffed7be5480>,
                           136)],
             '$140load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7be5750>,
                                    140)],
             '$144call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7be5a50>,
                                      140)],
             '$14call_function.4': [(<numba.core.ir.Assign object at 0x7ffed7c719f0>,
                                     0)],
             '$158return_value.4': [(<numba.core.ir.Assign object at 0x7ffed7be61d0>,
                                     148)],
             '$160load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7be4370>,
                                    160)],
             '$164call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7bba9e0>,
                                      160)],
             '$16get_iter.5': [(<numba.core.ir.Assign object at 0x7ffed7c71480>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x7ffed7b86ec0>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x7ffed7b87be0>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x7ffed7b87cd0>,
                                18)],
             '$20unpack_sequence.2': [(<numba.core.ir.Assign object at 0x7ffed7b87ac0>,
                                       20)],
             '$20unpack_sequence.3': [(<numba.core.ir.Assign object at 0x7ffed7b87910>,
                                       20)],
             '$20unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7ffed7b879a0>,
                                       20)],
             '$30compare_op.7': [(<numba.core.ir.Assign object at 0x7ffed7b84970>,
                                  20)],
             '$32pred': [(<numba.core.ir.Assign object at 0x7ffed7b84910>, 20)],
             '$38inplace_add.3': [(<numba.core.ir.Assign object at 0x7ffed7b84580>,
                                   34)],
             '$52inplace_multiply.3': [(<numba.core.ir.Assign object at 0x7ffed7b850f0>,
                                        48)],
             '$62compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7b856c0>,
                                  58)],
             '$64pred': [(<numba.core.ir.Assign object at 0x7ffed7b85900>, 58)],
             '$70compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7b85db0>,
                                  66)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7ffed7b86020>, 66)],
             '$74load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7b862f0>,
                                   74)],
             '$78call_function.2': [(<numba.core.ir.Assign object at 0x7ffed7b86a70>,
                                     74)],
             '$84return_value.1': [(<numba.core.ir.Assign object at 0x7ffed7b87010>,
                                    82)],
             '$90compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7b87550>,
                                  86)],
             '$92pred': [(<numba.core.ir.Assign object at 0x7ffed7b86680>, 86)],
             '$98compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7be7c10>,
                                  94)],
             '$const108.2': [(<numba.core.ir.Assign object at 0x7ffed7be6830>,
                              102)],
             '$const130.6': [(<numba.core.ir.Assign object at 0x7ffed7be4f70>,
                              116)],
             '$const142.1': [(<numba.core.ir.Assign object at 0x7ffed7be5840>,
                              140)],
             '$const156.3': [(<numba.core.ir.Assign object at 0x7ffed7be60e0>,
                              148)],
             '$const162.1': [(<numba.core.ir.Assign object at 0x7ffed7be5240>,
                              160)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7ffed7b84f10>,
                             20)],
             '$const36.2': [(<numba.core.ir.Assign object at 0x7ffed7b84700>,
                             34)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x7ffed7b855d0>,
                             58)],
             '$const76.1': [(<numba.core.ir.Assign object at 0x7ffed7b86860>,
                             74)],
             '$const82.0': [(<numba.core.ir.Assign object at 0x7ffed7b86ce0>,
                             82)],
             '$const88.1': [(<numba.core.ir.Assign object at 0x7ffed7b873d0>,
                             86)],
             '$const96.1': [(<numba.core.ir.Assign object at 0x7ffed7be72b0>,
                             94)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x7ffed7c72ef0>, 0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x7ffed7c71e40>,
                           18)],
             'ax': [(<numba.core.ir.Assign object at 0x7ffed7b86d10>, 20)],
             'bool100': [(<numba.core.ir.Assign object at 0x7ffed7be7dc0>, 94)],
             'bool138': [(<numba.core.ir.Assign object at 0x7ffed7be52a0>,
                          136)],
             'bool32': [(<numba.core.ir.Assign object at 0x7ffed7b84bb0>, 20)],
             'bool64': [(<numba.core.ir.Assign object at 0x7ffed7b857b0>, 58)],
             'bool72': [(<numba.core.ir.Assign object at 0x7ffed7b85ea0>, 66)],
             'bool92': [(<numba.core.ir.Assign object at 0x7ffed7b86290>, 86)],
             'inferred': [(<numba.core.ir.Assign object at 0x7ffed7be6470>,
                           102),
                          (<numba.core.ir.Assign object at 0x7ffed7be4820>,
                           116)],
             'known_size': [(<numba.core.ir.Assign object at 0x7ffed7c72e30>,
                             0),
                            (<numba.core.ir.Assign object at 0x7ffed7b85030>,
                             48)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x7ffed7b842e0>, 34)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x7ffed7c73bb0>,
                                0),
                               (<numba.core.ir.Assign object at 0x7ffed7b844c0>,
                                34)],
             'ok': [(<numba.core.ir.Assign object at 0x7ffed7be6a10>, 102),
                    (<numba.core.ir.Assign object at 0x7ffed7be4a00>, 116)],
             'origsize': [(<numba.core.ir.Assign object at 0x7ffed7c725c0>, 0)],
             's': [(<numba.core.ir.Assign object at 0x7ffed7b86e90>, 20)],
             'shape': [(<numba.core.ir.Assign object at 0x7ffed7c73370>, 0)]})
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7920430>
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var num_neg_value
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: num_neg_value
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: num_neg_value = const(int, 0)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,660 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = $38inplace_add.3
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,661 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = $52inplace_multiply.3
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value == $const60.1
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,662 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value == $const88.1
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size == $const96.1
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = origsize // known_size
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,663 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b852a0>
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed79301c0>],
             34: [<numba.core.ir.Assign object at 0x7ffed79334c0>]})
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,664 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,665 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='num_neg_value' stmt=$38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 34
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 34
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 20
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 20
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def num_neg_value = const(int, 0)
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 161
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 161
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 161
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 48
2025-07-08 12:48:58,666 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 20
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 20
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047)], incoming_blocks=[0])
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 34
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = $52inplace_multiply.3
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value == $const60.1
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='num_neg_value' stmt=$62compare_op.2 = num_neg_value == $const60.1
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,667 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,668 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value == $const88.1
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='num_neg_value' stmt=$90compare_op.2 = num_neg_value == $const88.1
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 86
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 58 from label 86
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 58
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,669 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size == $const96.1
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = origsize // known_size
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,670 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,671 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b852a0>
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var known_size
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: known_size
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: known_size = const(int, 1)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,672 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = $52inplace_multiply.3
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,673 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,674 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size == $const96.1
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = origsize // known_size
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,675 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a638b0>
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,676 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7a7d810>],
             48: [<numba.core.ir.Assign object at 0x7ffed78684c0>]})
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,677 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='known_size' stmt=$52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 48
2025-07-08 12:48:58,678 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 20
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 20
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def known_size = const(int, 1)
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 161
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 161
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 161
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 34
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 34
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 34
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 20
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 20
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048)], incoming_blocks=[0])
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,679 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='known_size' stmt=$70compare_op.2 = origsize != known_size
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 66
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 58 from label 66
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 58
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,680 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size == $const96.1
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='known_size' stmt=$98compare_op.2 = known_size == $const96.1
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 94
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 86 from label 94
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 86
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 86
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 58 from label 86
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 58
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,681 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = origsize // known_size
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='known_size' stmt=inferred = origsize // known_size
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 116
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 94 from label 116
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 94
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 94
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 86 from label 94
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 86
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 86
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 58 from label 86
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 58
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,682 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: inferred = origsize // known_size.2
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='known_size' stmt=$128binary_modulo.5 = origsize % known_size
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 116
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 94 from label 116
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 94
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 94
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 86 from label 94
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 86
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 86
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 58 from label 86
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 58
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,683 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c72da0>
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,684 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var inferred
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,685 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,686 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,687 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: inferred
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: inferred = const(int, 0)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = origsize // known_size.2
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,688 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7b848b0>
2025-07-08 12:48:58,689 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {102: [<numba.core.ir.Assign object at 0x7ffed7a7e980>],
             116: [<numba.core.ir.Assign object at 0x7ffed7bb9ae0>]})
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,690 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,691 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,692 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,693 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='inferred' stmt=shape[neg_ax] = inferred
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 148
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 136 from label 148
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 136
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 136
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 136
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 116
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 102
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def inferred = const(int, 0)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: shape[neg_ax] = inferred.2
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,694 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7a63a60>
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var ok
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,695 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,696 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,697 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: ok
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: ok = origsize == $const108.2
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,698 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: ok.1 = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,699 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred.2
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a7ead0>
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {102: [<numba.core.ir.Assign object at 0x7ffed7a63a60>],
             116: [<numba.core.ir.Assign object at 0x7ffed7bb8e80>]})
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,700 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,701 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,703 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,704 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,704 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,704 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,704 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,704 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,705 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,706 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,707 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,708 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok.1 = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,709 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='ok' stmt=$138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 136
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 136
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 116
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def ok.1 = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 102
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def ok = origsize == $const108.2
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,710 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,711 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,711 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,711 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,711 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,713 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred.2
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,716 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var neg_ax
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,717 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: neg_ax
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: neg_ax = ax
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,718 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,719 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok.1 = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[116, 102])
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,720 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred.2
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7a608e0>
2025-07-08 12:48:58,721 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7ffed798d660>]})
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: origsize = arg(0, name=origsize)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(1, name=shape)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value = const(int, 0)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size = const(int, 1)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
2025-07-08 12:48:58,722 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.5
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,723 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 58
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ax = $20unpack_sequence.2
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: s = $20unpack_sequence.3
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const28.6 = const(int, 0)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30compare_op.7 = s < $const28.6
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool32 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $32pred, 34, 48
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const36.2 = const(int, 1)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.1 = $38inplace_add.3
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: neg_ax = ax
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,724 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.1 = $52inplace_multiply.3
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 161
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 58
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.1 = const(int, 0)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool64 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $64pred, 66, 86
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 66
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $70compare_op.2 = origsize != known_size.2
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool72 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $72pred, 74, 82
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 74
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,725 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 82
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const82.0 = const(NoneType, None)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84return_value.1 = cast(value=$const82.0)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $84return_value.1
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 86
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const88.1 = const(int, 1)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool92 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $92pred, 94, 160
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 94
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const96.1 = const(int, 0)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $98compare_op.2 = known_size.2 == $const96.1
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool100 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,726 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $100pred, 102, 116
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred = const(int, 0)
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.2 = const(int, 0)
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok = origsize == $const108.2
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.1 = origsize // known_size.2
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_modulo.5 = origsize % known_size.2
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const130.6 = const(int, 0)
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok.1 = $128binary_modulo.5 == $const130.6
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 136
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 136
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[116, 102])
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool138 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $138pred, 148, 140
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 140
2025-07-08 12:48:58,727 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 148
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape[neg_ax] = inferred.2
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 148
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 136 from label 148
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 136
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 136
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 94 from label 136
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 94
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 94
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 86 from label 94
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 86
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 86
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 58 from label 86
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 58
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 58
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 58
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 18
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 0
2025-07-08 12:48:58,728 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 161
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 161
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 161
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 48
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 20
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 18 from label 20
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 34
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def neg_ax = ax
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax.1, arrayobj.py:2070), Var(neg_ax, arrayobj.py:2052)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: shape[neg_ax.1] = inferred.2
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.3 = const(NoneType, None)
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158return_value.4 = cast(value=$const156.3)
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $158return_value.4
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 160
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const162.1 = const(str, multiple negative shape values)
2025-07-08 12:48:58,729 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,730 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2025-07-08 12:48:58,730 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 161
2025-07-08 12:48:58,730 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7b848b0>
2025-07-08 12:48:58,730 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,730 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
2025-07-08 12:48:58,730 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
2025-07-08 12:48:58,880 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0', '$min_val4.1']
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6compare_op.2']
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,881 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,881 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2025-07-08 12:48:58,884 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,884 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d1ffd0>
2025-07-08 12:48:58,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:58,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: min_val = arg(1, name=min_val)
2025-07-08 12:48:58,884 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6compare_op.2 = a > min_val
2025-07-08 12:48:58,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
2025-07-08 12:48:58,885 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $8return_value.3
2025-07-08 12:48:58,885 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7d2d510>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7ffed7d2d450>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed7d1c5e0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7ffed7d1d780>, 0)]})
2025-07-08 12:48:58,885 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7d1ffd0>
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	LOAD_GLOBAL(arg=0, lineno=3536)
           4	LOAD_FAST(arg=0, lineno=3536)
           6	CALL_FUNCTION(arg=1, lineno=3536)
           8	STORE_FAST(arg=2, lineno=3536)
          10	LOAD_GLOBAL(arg=1, lineno=3537)
          12	LOAD_FAST(arg=2, lineno=3537)
          14	CALL_FUNCTION(arg=1, lineno=3537)
          16	GET_ITER(arg=None, lineno=3537)
>         18	FOR_ITER(arg=20, lineno=3537)
          20	STORE_FAST(arg=3, lineno=3537)
          22	LOAD_FAST(arg=0, lineno=3538)
          24	LOAD_FAST(arg=3, lineno=3538)
          26	BINARY_SUBSCR(arg=None, lineno=3538)
          28	LOAD_FAST(arg=1, lineno=3538)
          30	LOAD_GLOBAL(arg=0, lineno=3538)
          32	LOAD_FAST(arg=1, lineno=3538)
          34	CALL_FUNCTION(arg=1, lineno=3538)
          36	LOAD_FAST(arg=2, lineno=3538)
          38	BINARY_SUBTRACT(arg=None, lineno=3538)
          40	LOAD_FAST(arg=3, lineno=3538)
          42	BINARY_ADD(arg=None, lineno=3538)
          44	BINARY_SUBSCR(arg=None, lineno=3538)
          46	COMPARE_OP(arg=3, lineno=3538)
          48	POP_JUMP_IF_FALSE(arg=30, lineno=3538)
          50	LOAD_GLOBAL(arg=2, lineno=3539)
          52	LOAD_CONST(arg=1, lineno=3539)
          54	CALL_FUNCTION(arg=1, lineno=3539)
          56	RAISE_VARARGS(arg=1, lineno=3539)
>         58	JUMP_ABSOLUTE(arg=10, lineno=3538)
>         60	LOAD_CONST(arg=0, lineno=3537)
          62	RETURN_VALUE(arg=None, lineno=3537)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=3535)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3536)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3536)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=3536)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0', '$shape4.1']
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=3536)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=3537)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=3537)
2025-07-08 12:48:58,915 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_global.3']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=3537)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_global.3', '$n12.4']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=GET_ITER(arg=None, lineno=3537)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14call_function.5']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi18.0']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=18 nstack_initial=1)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=FOR_ITER(arg=20, lineno=3537)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=0)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=3537)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=3537)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const60.0']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=20 nstack_initial=2)])
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi20.0', '$phi20.1']
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=20 nstack_initial=2)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=STORE_FAST(arg=3, lineno=3537)
2025-07-08 12:48:58,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$phi20.1']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$shape22.2']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$shape22.2', '$i24.3']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=3538)
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
2025-07-08 12:48:58,917 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=30, lineno=3538)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi20.0', '$46compare_op.14']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=58, stack=('$phi20.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=58 nstack_initial=1)])
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi50.0']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=3539)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi50.0']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=3539)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi50.0', '$50load_global.1']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=3539)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi50.0', '$50load_global.1', '$const52.2']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=3539)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi50.0', '$54call_function.3']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=58 nstack_initial=1)])
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi58.0']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=58 nstack_initial=1)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=JUMP_ABSOLUTE(arg=10, lineno=3538)
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi58.0']
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=18, stack=('$phi58.0',), blockstack=(), npush=0)]
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=1)])
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
2025-07-08 12:48:58,918 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi58.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
2025-07-08 12:48:58,919 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 58: ('$phi20.0',)})
2025-07-08 12:48:58,920 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,920 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=58 nstack_initial=1):
AdaptBlockInfo(insts=((58, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi58.0',)})
2025-07-08 12:48:58,920 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0'}), (62, {'retval': '$const60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:58,920 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 58                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2']
    raise $54call_function.3                 ['$54call_function.3']
label 58:
    jump 18                                  []
label 60:
    $const60.0 = const(NoneType, None)       ['$const60.0']
    $62return_value.1 = cast(value=$const60.0) ['$62return_value.1', '$const60.0']
    return $62return_value.1                 ['$62return_value.1']

2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7fba050>
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: shape = arg(0, name=shape)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: main_shape = arg(1, name=main_shape)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_global.3 = global(range: <class 'range'>)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.0 = $16get_iter.6
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 18
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7fba050>
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi20.1 = $18for_iter.2
2025-07-08 12:48:58,927 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $18for_iter.3, 20, 60
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 20
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7fba050>
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: i = $phi20.1
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.6 = global(len: <built-in function len>)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.8 = const(int, 1)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38binary_subtract.10 = $34call_function.8 - n
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42binary_add.12 = $38binary_subtract.10 + i
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool48 = global(bool: <class 'bool'>)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $48pred, 50, 58
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 50
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7fba050>
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 58
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7fba050>
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 18
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 60
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7fba050>
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const60.0 = const(NoneType, None)
2025-07-08 12:48:58,928 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $62return_value.1 = cast(value=$const60.0)
2025-07-08 12:48:58,929 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $62return_value.1
2025-07-08 12:48:58,929 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x7ffed7f57580>,
                                   0)],
             '$14call_function.5': [(<numba.core.ir.Assign object at 0x7ffed7f56b90>,
                                     0)],
             '$16get_iter.6': [(<numba.core.ir.Assign object at 0x7ffed7f56aa0>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x7ffed7f56680>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x7ffed7f564a0>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x7ffed7f55900>,
                                18)],
             '$26binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffed7f54e50>,
                                     20)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7f57790>,
                                  0)],
             '$30load_global.6': [(<numba.core.ir.Assign object at 0x7ffed7f57430>,
                                   20)],
             '$34call_function.8': [(<numba.core.ir.Assign object at 0x7ffed7f555a0>,
                                     20)],
             '$38binary_subtract.10': [(<numba.core.ir.Assign object at 0x7ffed7f55b40>,
                                        20)],
             '$42binary_add.12': [(<numba.core.ir.Assign object at 0x7ffed7f55d50>,
                                   20)],
             '$44binary_subscr.13': [(<numba.core.ir.Assign object at 0x7ffed7f55d80>,
                                      20)],
             '$46compare_op.14': [(<numba.core.ir.Assign object at 0x7ffed7f57100>,
                                   20)],
             '$48pred': [(<numba.core.ir.Assign object at 0x7ffed7f549d0>, 20)],
             '$50load_global.1': [(<numba.core.ir.Assign object at 0x7ffed7f55ba0>,
                                   50)],
             '$54call_function.3': [(<numba.core.ir.Assign object at 0x7ffed7f540d0>,
                                     50)],
             '$62return_value.1': [(<numba.core.ir.Assign object at 0x7ffed7f546a0>,
                                    60)],
             '$const52.2': [(<numba.core.ir.Assign object at 0x7ffed7f54bb0>,
                             50)],
             '$const60.0': [(<numba.core.ir.Assign object at 0x7ffed7f54550>,
                             60)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x7ffed7f574c0>, 0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x7ffed7f56980>,
                           18)],
             'bool48': [(<numba.core.ir.Assign object at 0x7ffed7f54c70>, 20)],
             'i': [(<numba.core.ir.Assign object at 0x7ffed7f54fd0>, 20)],
             'main_shape': [(<numba.core.ir.Assign object at 0x7ffed7f578e0>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x7ffed7f57c10>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7ffed7f57d00>, 0)]})
2025-07-08 12:48:58,929 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7fba050>
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0']
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6load_global.1']
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2']
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
2025-07-08 12:48:59,015 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2', '$a10.3']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12call_method.4']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi16.0']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=1)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi16.0']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=34 nstack_initial=0)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$a36.1']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$38load_attr.2']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40binary_true_divide.3']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi18.0', '$phi18.1']
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=18 nstack_initial=2)
2025-07-08 12:48:59,016 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$phi18.1']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$v22.3']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$24load_method.4']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$26call_method.5']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$28inplace_add.6']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
2025-07-08 12:48:59,017 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
2025-07-08 12:48:59,018 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,020 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f01ba0>
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f01ba0>
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:48:59,025 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 18
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f01ba0>
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 34
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7f01ba0>
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:48:59,026 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x7ffed7f03760>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7ffed7f009d0>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7ffed7f01bd0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x7ffed7f00640>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x7ffed7f03790>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x7ffedc185390>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x7ffedc1870a0>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x7ffedc187130>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x7ffed7fc7b50>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x7ffed7753a00>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x7ffed7a41630>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x7ffed7f013c0>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x7ffed7f011e0>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x7ffed7f03970>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x7ffed7f00190>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed7f031c0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7ffed7f03070>, 0),
                   (<numba.core.ir.Assign object at 0x7ffedc186b90>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x7ffed7f03f40>, 18)]})
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7f01ba0>
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var c
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7f00370>
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: c
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7f00370>
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7f00370>
2025-07-08 12:48:59,027 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c.1 = $28inplace_add.6
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7f00370>
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7f03910>],
             18: [<numba.core.ir.Assign object at 0x7ffed7f02830>]})
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7f00370>
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7f00370>
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:48:59,028 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7f00370>
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 18
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 16
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c.1 = $28inplace_add.6
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c.1 = $28inplace_add.6
2025-07-08 12:48:59,029 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7f00370>
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 34
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 34
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:48:59,030 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
2025-07-08 12:48:59,031 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:48:59,031 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	LOAD_FAST(arg=0, lineno=1205)
           4	LOAD_CONST(arg=1, lineno=1205)
           6	BINARY_SUBSCR(arg=None, lineno=1205)
           8	LOAD_GLOBAL(arg=0, lineno=1205)
          10	LOAD_METHOD(arg=1, lineno=1205)
          12	LOAD_FAST(arg=0, lineno=1205)
          14	LOAD_CONST(arg=2, lineno=1205)
          16	LOAD_GLOBAL(arg=2, lineno=1205)
          18	LOAD_FAST(arg=2, lineno=1205)
          20	LOAD_FAST(arg=0, lineno=1205)
          22	LOAD_ATTR(arg=3, lineno=1205)
          24	LOAD_CONST(arg=1, lineno=1205)
          26	BINARY_SUBSCR(arg=None, lineno=1205)
          28	CALL_FUNCTION(arg=2, lineno=1205)
          30	BUILD_SLICE(arg=2, lineno=1205)
          32	BINARY_SUBSCR(arg=None, lineno=1205)
          34	CALL_METHOD(arg=1, lineno=1205)
          36	COMPARE_OP(arg=5, lineno=1205)
          38	LOAD_FAST(arg=7, lineno=1205)
          40	LOAD_CONST(arg=1, lineno=1205)
          42	STORE_SUBSCR(arg=None, lineno=1205)
          44	LOAD_FAST(arg=7, lineno=1206)
          46	LOAD_CONST(arg=1, lineno=1206)
          48	DUP_TOP_TWO(arg=None, lineno=1206)
          50	BINARY_SUBSCR(arg=None, lineno=1206)
          52	LOAD_FAST(arg=0, lineno=1206)
          54	LOAD_CONST(arg=1, lineno=1206)
          56	BINARY_SUBSCR(arg=None, lineno=1206)
          58	LOAD_GLOBAL(arg=0, lineno=1206)
          60	LOAD_METHOD(arg=4, lineno=1206)
          62	LOAD_FAST(arg=0, lineno=1206)
          64	LOAD_CONST(arg=2, lineno=1206)
          66	LOAD_GLOBAL(arg=2, lineno=1206)
          68	LOAD_FAST(arg=4, lineno=1206)
          70	LOAD_FAST(arg=0, lineno=1206)
          72	LOAD_ATTR(arg=3, lineno=1206)
          74	LOAD_CONST(arg=1, lineno=1206)
          76	BINARY_SUBSCR(arg=None, lineno=1206)
          78	CALL_FUNCTION(arg=2, lineno=1206)
          80	BUILD_SLICE(arg=2, lineno=1206)
          82	BINARY_SUBSCR(arg=None, lineno=1206)
          84	CALL_METHOD(arg=1, lineno=1206)
          86	LOAD_FAST(arg=5, lineno=1206)
          88	BINARY_ADD(arg=None, lineno=1206)
          90	COMPARE_OP(arg=5, lineno=1206)
          92	INPLACE_AND(arg=None, lineno=1206)
          94	ROT_THREE(arg=None, lineno=1206)
          96	STORE_SUBSCR(arg=None, lineno=1206)
          98	LOAD_FAST(arg=7, lineno=1208)
         100	LOAD_CONST(arg=1, lineno=1208)
         102	BINARY_SUBSCR(arg=None, lineno=1208)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1208)
         106	LOAD_FAST(arg=6, lineno=1209)
         108	LOAD_CONST(arg=3, lineno=1209)
         110	BINARY_ADD(arg=None, lineno=1209)
         112	STORE_FAST(arg=8, lineno=1209)
         114	JUMP_FORWARD(arg=2, lineno=1209)
>        116	LOAD_CONST(arg=3, lineno=1211)
         118	STORE_FAST(arg=8, lineno=1211)
>        120	LOAD_FAST(arg=8, lineno=1213)
         122	LOAD_FAST(arg=0, lineno=1213)
         124	LOAD_ATTR(arg=3, lineno=1213)
         126	LOAD_CONST(arg=1, lineno=1213)
         128	BINARY_SUBSCR(arg=None, lineno=1213)
         130	COMPARE_OP(arg=0, lineno=1213)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1213)
>        134	LOAD_GLOBAL(arg=0, lineno=1214)
         136	LOAD_METHOD(arg=1, lineno=1214)
         138	LOAD_FAST(arg=0, lineno=1214)
         140	LOAD_GLOBAL(arg=1, lineno=1214)
         142	LOAD_CONST(arg=1, lineno=1214)
         144	LOAD_FAST(arg=8, lineno=1214)
         146	LOAD_FAST(arg=1, lineno=1214)
         148	BINARY_SUBTRACT(arg=None, lineno=1214)
         150	CALL_FUNCTION(arg=2, lineno=1214)
         152	LOAD_GLOBAL(arg=2, lineno=1214)
         154	LOAD_FAST(arg=8, lineno=1214)
         156	LOAD_FAST(arg=2, lineno=1214)
         158	BINARY_ADD(arg=None, lineno=1214)
         160	LOAD_FAST(arg=0, lineno=1214)
         162	LOAD_ATTR(arg=3, lineno=1214)
         164	LOAD_CONST(arg=1, lineno=1214)
         166	BINARY_SUBSCR(arg=None, lineno=1214)
         168	CALL_FUNCTION(arg=2, lineno=1214)
         170	BUILD_SLICE(arg=2, lineno=1214)
         172	BINARY_SUBSCR(arg=None, lineno=1214)
         174	CALL_METHOD(arg=1, lineno=1214)
         176	STORE_FAST(arg=9, lineno=1214)
         178	LOAD_FAST(arg=0, lineno=1217)
         180	LOAD_FAST(arg=8, lineno=1217)
         182	BINARY_SUBSCR(arg=None, lineno=1217)
         184	LOAD_FAST(arg=9, lineno=1217)
         186	COMPARE_OP(arg=2, lineno=1217)
         188	LOAD_FAST(arg=7, lineno=1217)
         190	LOAD_FAST(arg=8, lineno=1217)
         192	STORE_SUBSCR(arg=None, lineno=1217)
         194	LOAD_FAST(arg=7, lineno=1219)
         196	LOAD_FAST(arg=8, lineno=1219)
         198	BINARY_SUBSCR(arg=None, lineno=1219)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1219)
         202	LOAD_FAST(arg=8, lineno=1220)
         204	LOAD_CONST(arg=3, lineno=1220)
         206	INPLACE_ADD(arg=None, lineno=1220)
         208	STORE_FAST(arg=8, lineno=1220)
         210	JUMP_ABSOLUTE(arg=61, lineno=1221)
>        212	LOAD_GLOBAL(arg=0, lineno=1223)
         214	LOAD_METHOD(arg=4, lineno=1223)
         216	LOAD_FAST(arg=0, lineno=1223)
         218	LOAD_GLOBAL(arg=1, lineno=1223)
         220	LOAD_CONST(arg=1, lineno=1223)
         222	LOAD_FAST(arg=8, lineno=1223)
         224	LOAD_FAST(arg=3, lineno=1223)
         226	BINARY_SUBTRACT(arg=None, lineno=1223)
         228	CALL_FUNCTION(arg=2, lineno=1223)
         230	LOAD_GLOBAL(arg=2, lineno=1223)
         232	LOAD_FAST(arg=8, lineno=1223)
         234	LOAD_FAST(arg=4, lineno=1223)
         236	BINARY_ADD(arg=None, lineno=1223)
         238	LOAD_FAST(arg=0, lineno=1223)
         240	LOAD_ATTR(arg=3, lineno=1223)
         242	LOAD_CONST(arg=1, lineno=1223)
         244	BINARY_SUBSCR(arg=None, lineno=1223)
         246	CALL_FUNCTION(arg=2, lineno=1223)
         248	BUILD_SLICE(arg=2, lineno=1223)
         250	BINARY_SUBSCR(arg=None, lineno=1223)
         252	CALL_METHOD(arg=1, lineno=1223)
         254	STORE_FAST(arg=10, lineno=1223)
         256	LOAD_FAST(arg=7, lineno=1224)
         258	LOAD_FAST(arg=8, lineno=1224)
         260	DUP_TOP_TWO(arg=None, lineno=1224)
         262	BINARY_SUBSCR(arg=None, lineno=1224)
         264	LOAD_FAST(arg=0, lineno=1224)
         266	LOAD_FAST(arg=8, lineno=1224)
         268	BINARY_SUBSCR(arg=None, lineno=1224)
         270	LOAD_FAST(arg=10, lineno=1224)
         272	LOAD_FAST(arg=5, lineno=1224)
         274	BINARY_ADD(arg=None, lineno=1224)
         276	COMPARE_OP(arg=5, lineno=1224)
         278	INPLACE_AND(arg=None, lineno=1224)
         280	ROT_THREE(arg=None, lineno=1224)
         282	STORE_SUBSCR(arg=None, lineno=1224)
         284	LOAD_FAST(arg=7, lineno=1226)
         286	LOAD_FAST(arg=8, lineno=1226)
         288	BINARY_SUBSCR(arg=None, lineno=1226)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1226)
         292	LOAD_FAST(arg=8, lineno=1227)
         294	LOAD_CONST(arg=3, lineno=1227)
         296	INPLACE_ADD(arg=None, lineno=1227)
         298	STORE_FAST(arg=8, lineno=1227)
         300	JUMP_ABSOLUTE(arg=61, lineno=1228)
>        302	LOAD_FAST(arg=8, lineno=1231)
         304	LOAD_FAST(arg=6, lineno=1231)
         306	LOAD_CONST(arg=3, lineno=1231)
         308	BINARY_ADD(arg=None, lineno=1231)
         310	INPLACE_ADD(arg=None, lineno=1231)
         312	STORE_FAST(arg=8, lineno=1231)
         314	LOAD_FAST(arg=8, lineno=1213)
         316	LOAD_FAST(arg=0, lineno=1213)
         318	LOAD_ATTR(arg=3, lineno=1213)
         320	LOAD_CONST(arg=1, lineno=1213)
         322	BINARY_SUBSCR(arg=None, lineno=1213)
         324	COMPARE_OP(arg=0, lineno=1213)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1213)
         328	LOAD_CONST(arg=2, lineno=1213)
         330	RETURN_VALUE(arg=None, lineno=1213)
>        332	LOAD_CONST(arg=2, lineno=1213)
         334	RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1193)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1205)
2025-07-08 12:48:59,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$8load_global.3']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1205)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1205)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$34call_method.17']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1205)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1206)
2025-07-08 12:48:59,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1206)
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
2025-07-08 12:48:59,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1206)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1206)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1206)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1206)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1206)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1208)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1208)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1208)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48', '$const100.49']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1208)
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$102binary_subscr.50']
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,239 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1209)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1209)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0']
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1209)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0', '$const108.1']
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1209)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110binary_add.2']
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1209)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1211)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1211)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const116.0']
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=120 nstack_initial=0)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0']
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:48:59,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$x122.1']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2', '$const126.3']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$128binary_subscr.4']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1213)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$130compare_op.5']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$134load_global.0']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1214)
2025-07-08 12:48:59,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1214)
2025-07-08 12:48:59,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1214)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$172binary_subscr.20']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1214)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$174call_method.21']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22', '$n180.23']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24', '$maxn184.25']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1219)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1219)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29']
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1219)
2025-07-08 12:48:59,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29', '$n196.30']
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1219)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$198binary_subscr.31']
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=332 nstack_initial=0)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const332.0']
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1220)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1220)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0']
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1220)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0', '$const204.1']
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1220)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$206inplace_add.2']
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1221)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=212 nstack_initial=0)
2025-07-08 12:48:59,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$212load_global.0']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1223)
2025-07-08 12:48:59,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$250binary_subscr.20']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1223)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$252call_method.21']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
2025-07-08 12:48:59,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1226)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1226)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1226)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35', '$n286.36']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1226)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$288binary_subscr.37']
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1227)
2025-07-08 12:48:59,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1227)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1227)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0', '$const294.1']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1227)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$296inplace_add.2']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1228)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1231)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1231)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1231)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1231)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1', '$const306.2']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1231)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$308binary_add.3']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1231)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$310inplace_add.4']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5']
2025-07-08 12:48:59,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$x316.6']
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7']
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7', '$const320.8']
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$322binary_subscr.9']
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$324compare_op.10']
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const328.0']
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,249 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,250 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
2025-07-08 12:48:59,251 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,251 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,253 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:59,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 106
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,269 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 116
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 120
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 134
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 202
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 212
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 292
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 302
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 328
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:59,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 332
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 333
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc48b700>
2025-07-08 12:48:59,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x7ffedc3beb60>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7ffedc7cd420>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x7ffed784bc70>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc7ce9e0>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffedc39ce50>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x7ffedc7cd4e0>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7ffedc7cf850>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc7cc640>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc7ceda0>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc7ce140>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffedc7ce1d0>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x7ffedc7cf940>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x7ffedc7cdb70>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x7ffedc7cf190>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x7ffedc7cdc30>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc39d450>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x7ffedc7cfd00>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x7ffedc1e9630>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x7ffedc7ced10>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x7ffedc7cde40>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffedc7cdfc0>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x7ffedc7ccfa0>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x7ffedc7cf280>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x7ffedc3eeaa0>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7ffedc3ed870>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffedc3ee6b0>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc3ee740>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc3ee350>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc3ef280>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffedc3ed2d0>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x7ffedc3ecac0>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x7ffedc1336d0>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x7ffedc3ef8b0>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x7ffedc343850>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x7ffedc343370>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc39e350>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x7ffedc340250>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x7ffedc3423b0>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x7ffedc340790>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffedc340b80>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x7ffedc340c40>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x7ffedc3419f0>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc3be5c0>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x7ffedc3417e0>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x7ffedc3413c0>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x7ffedc341d50>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x7ffedc342d10>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x7ffedc27f220>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7ffedc341f90>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffedc341360>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x7ffedc343430>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x7ffedc27e920>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x7ffedc220670>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x7ffedc343ac0>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x7ffedc342b30>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed77536a0>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x7ffedc342710>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x7ffedc342920>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc2205e0>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc342dd0>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc3d0c70>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x7ffedc2230d0>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x7ffedc0decb0>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x7ffedc3be0b0>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x7ffedc3bf160>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x7ffedc3f7b20>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x7ffedc3f7400>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x7ffedc3f6800>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc3bf7f0>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x7ffedc3f7f10>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x7ffedc3bc1c0>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x7ffedc3f6980>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x7ffedc3f6f20>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x7ffedc3f7820>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x7ffedc3f69b0>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x7ffedc3f73a0>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x7ffedc3f7cd0>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x7ffed784b670>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x7ffedc3f6a10>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x7ffedc3f7760>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x7ffedc7cc3a0>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7ffedc3f63e0>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x7ffedc7cee60>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffed784b940>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x7ffedc7cc0a0>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x7ffedc7cd960>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x7ffedc7cd120>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x7ffedc3ef760>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc258d60>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x7ffedc3430a0>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x7ffedc3411e0>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x7ffedc343970>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x7ffedc343520>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x7ffedc342a40>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x7ffedc3d0040>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7f54eb0>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x7ffedc0dd600>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x7ffed7897970>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x7ffedc3f61a0>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x7ffedc3f7790>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x7ffedc3f6e60>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7ffedc341150>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x7ffedc7cd180>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x7ffedc7ce3e0>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x7ffedc3edd20>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x7ffedc342e00>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x7ffedc342770>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x7ffed7955c30>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7ffedc7cf490>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x7ffed7762830>, 106),
                   (<numba.core.ir.Assign object at 0x7ffedc7cf790>, 116),
                   (<numba.core.ir.Assign object at 0x7ffedc3ed9f0>, 202),
                   (<numba.core.ir.Assign object at 0x7ffedc3416c0>, 292),
                   (<numba.core.ir.Assign object at 0x7ffedc342410>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x7ffed7957970>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7ffed7956f20>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7ffed771a170>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7ffed77197b0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7ffed7760670>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7ffed7955c60>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7761db0>, 0)]})
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc3408e0>
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var n
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:59,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:59,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:59,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: n
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n = wait + $const108.1
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.1 = const(int, 1)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.2 = $206inplace_add.2
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:48:59,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.3 = $296inplace_add.2
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.4 = $310inplace_add.4
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:59,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7753400>
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x7ffed7752a40>],
             116: [<numba.core.ir.Assign object at 0x7ffed7761f90>],
             202: [<numba.core.ir.Assign object at 0x7ffedc3f6080>],
             292: [<numba.core.ir.Assign object at 0x7ffedc3f5fc0>],
             302: [<numba.core.ir.Assign object at 0x7ffedc3f6110>]})
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.1 = const(int, 1)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:59,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 120
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n = wait + $const108.1
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 116
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.1 = const(int, 1)
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 333
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 333
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 202
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.2 = $206inplace_add.2
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 292
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.3 = $296inplace_add.2
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[202, 292])
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:48:59,286 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 134
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 120
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[106, 116, 333])
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 302
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.4 = $310inplace_add.4
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $148binary_subtract.7 = n.7 - pre_max
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$158binary_add.12 = n + post_max
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $158binary_add.12 = n.7 + post_max
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:59,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $186compare_op.26
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $186compare_op.26
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,288 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 202
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 202
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.2 = $206inplace_add.2
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $226binary_subtract.7 = n.7 - pre_avg
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$236binary_add.12 = n + post_avg
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,289 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $236binary_add.12 = n.7 + post_avg
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:59,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $278inplace_and.34
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 292
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 292
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:48:59,291 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.3 = $296inplace_add.2
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 302
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 302
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.4 = $310inplace_add.4
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:59,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7753400>
2025-07-08 12:48:59,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,300 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1', '$const6.2']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8compare_op.3']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=12 nstack_initial=0)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0', '$const14.1']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$16call_function.2']
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:48:59,301 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=20 nstack_initial=0)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20load_global.0']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1', '$a24.2']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$26call_method.3']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4', '$it32.5']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$34call_function.6']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7', '$const38.8']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.9']
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,302 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10']
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10', '$max_value46.11']
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48call_function.12']
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value52.0']
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$it56.0']
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi60.0']
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=1)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
2025-07-08 12:48:59,303 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi60.0']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=104 nstack_initial=0)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value104.0']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi62.0', '$phi62.1']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=62 nstack_initial=2)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$phi62.1']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$view64.2']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$66load_method.3']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$68call_method.4']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5']
2025-07-08 12:48:59,304 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$76call_function.7']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0', '$v80.1']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1', '$phi80.0']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi88.0']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=88 nstack_initial=1)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0']
2025-07-08 12:48:59,305 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$94call_function.4']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi98.0']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=98 nstack_initial=1)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0', '$v98.1']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi102.0']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=102 nstack_initial=1)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi102.0']
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:59,306 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,307 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
2025-07-08 12:48:59,307 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
2025-07-08 12:48:59,307 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
2025-07-08 12:48:59,307 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:59,307 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:59,307 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
2025-07-08 12:48:59,308 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,310 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 12
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 20
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:59,318 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 52
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 56
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:59,319 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 60
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 62
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 88
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:59,320 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 98
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 102
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 104
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcd602b0>
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,321 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc39c0d0>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x7ffedc489f90>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc488c70>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc48bcd0>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc498970>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc498130>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x7ffedc453160>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x7ffedc2fd4e0>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x7ffedc1592a0>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x7ffedc39ca60>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x7ffedc39d420>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7ffedc48bbb0>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7ffedc39d5d0>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc39d690>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x7ffedc39e7d0>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x7ffedc39ff40>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x7ffedc39fdf0>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x7ffedc39f820>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x7ffedc39f730>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x7ffedc39f400>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x7ffedc39d9f0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x7ffedc39ef80>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x7ffedc39e3b0>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x7ffedc39e230>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x7ffedc489210>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x7ffedc39d0c0>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7ffedc39c9a0>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x7ffedc48acb0>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x7ffedc1b1ba0>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7ffedc48a650>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x7ffedc39ed70>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x7ffedc39f5e0>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc48bbe0>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x7ffedc48ace0>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x7ffedc39d300>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x7ffedc39eda0>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x7ffedc39d120>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x7ffedc451a20>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x7ffedc1337c0>,
                            20),
                           (<numba.core.ir.Assign object at 0x7ffedc39c100>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x7ffedc39e680>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x7ffedc39faf0>, 62)]})
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7fff8a913790>
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var max_value
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,322 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: max_value
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,323 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:48:59,324 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value.1 = v
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7fff8a913520>
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x7ffedc3c9780>],
             98: [<numba.core.ir.Assign object at 0x7ffedc3c8040>]})
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:59,325 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:59,326 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 52
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 52
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 60
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 56
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 56
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 56
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 102
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 102
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 88
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:48:59,328 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.1 = v
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value.1 = v
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7fff8a913520>
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,329 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 104
2025-07-08 12:48:59,330 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 104
2025-07-08 12:48:59,330 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:59,330 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $106return_value.1 = cast(value=max_value.2)
2025-07-08 12:48:59,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:59,334 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:48:59,334 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,334 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0']
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$a4.1']
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2']
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$10binary_subtract.4']
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12compare_op.5']
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,335 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=0)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$a18.1']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$20load_attr.2']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$22unary_negative.3']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$24compare_op.4']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0', '$const30.1']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$32call_function.2']
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:59,336 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a36.0']
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$38load_method.1']
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2']
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2', '$indices42.3']
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44binary_subscr.4']
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,337 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,338 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

2025-07-08 12:48:59,343 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc3c9b70>
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: indices = arg(1, name=indices)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const8.3 = const(int, 1)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool14 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $14pred, 28, 16
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc3c9b70>
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24compare_op.4 = indices < $22unary_negative.3
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool26 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $26pred, 28, 36
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 28
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc3c9b70>
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.1 = const(str, Index out of bounds)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,344 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 36
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc3c9b70>
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $46return_value.5
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x7ffedcd60070>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7ffedcd624d0>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x7ffedcc9e590>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedcc9fe80>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x7ffedcc9fa30>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x7ffedcc9f520>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7ffedcc9d870>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7ffedcc9d3c0>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x7ffedcc9ca30>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x7ffedcc9d240>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x7ffedcc9da50>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffedcc9e080>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x7ffedcc9dc60>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedcd62f50>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x7ffedcc9d930>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x7ffedcd60be0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc3c98d0>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x7ffedcd623e0>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x7ffedcc9e1a0>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x7ffedc3c9c60>, 0)]})
2025-07-08 12:48:59,345 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc3c9b70>
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$ary2.0']
2025-07-08 12:48:59,360 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$ary6.2']
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$8load_attr.3']
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_method.4']
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,361 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,362 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedca7ea70>
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ary = arg(0, name=ary)
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $12return_value.5
2025-07-08 12:48:59,365 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7ffedca4a380>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7ffedca48370>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffedca4ace0>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x7ffedca495a0>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7ffedca4af80>, 0)]})
2025-07-08 12:48:59,366 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedca7ea70>
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0', '$min_val4.1']
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6compare_op.2']
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,426 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,427 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,427 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,427 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,427 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,427 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,427 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc578550>
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: min_val = arg(1, name=min_val)
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6compare_op.2 = a > min_val
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $8return_value.3
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x7ffedc86b760>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7ffedc869930>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc8693f0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7ffedc8689d0>, 0)]})
2025-07-08 12:48:59,430 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc578550>
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,510 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6load_global.1']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2', '$a10.3']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12call_method.4']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi16.0']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=1)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi16.0']
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=34 nstack_initial=0)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,511 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$a36.1']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$38load_attr.2']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40binary_true_divide.3']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi18.0', '$phi18.1']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=18 nstack_initial=2)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$phi18.1']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$v22.3']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$24load_method.4']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$26call_method.5']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$28inplace_add.6']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,512 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
2025-07-08 12:48:59,513 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
2025-07-08 12:48:59,514 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,514 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
2025-07-08 12:48:59,514 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
2025-07-08 12:48:59,514 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
2025-07-08 12:48:59,514 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,515 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcb7d270>
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcb7d270>
2025-07-08 12:48:59,519 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 18
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcb7d270>
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 34
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedcb7d270>
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:48:59,520 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x7ffedcb7cd60>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7ffedcb7c880>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7ffedcb7dd20>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x7ffedcb7ef50>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x7ffedcb7e800>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x7ffedcb7e110>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x7ffedcb7cc40>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x7ffedcb7f670>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedcb7e080>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x7ffedcb7e980>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x7ffedcb7f940>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x7ffedcb7c280>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x7ffedcb7e260>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x7ffedcb7d0f0>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x7ffedcb7ed40>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedcb7d1b0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7ffedcb7d6c0>, 0),
                   (<numba.core.ir.Assign object at 0x7ffedcb7fe20>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x7ffedcb7f250>, 18)]})
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedcb7d270>
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var c
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcb7d870>
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: c
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcb7d870>
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:48:59,521 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcb7d870>
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c.1 = $28inplace_add.6
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedcb7d870>
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffedcb7c190>],
             18: [<numba.core.ir.Assign object at 0x7ffedcd2c580>]})
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcb7d870>
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,522 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcb7d870>
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcb7d870>
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,523 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 18
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 16
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c = freevar(acc_init: 0.0)
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c.1 = $28inplace_add.6
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c.1 = $28inplace_add.6
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedcb7d870>
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 34
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 34
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
2025-07-08 12:48:59,524 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:48:59,525 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	LOAD_FAST(arg=0, lineno=1205)
           4	LOAD_CONST(arg=1, lineno=1205)
           6	BINARY_SUBSCR(arg=None, lineno=1205)
           8	LOAD_GLOBAL(arg=0, lineno=1205)
          10	LOAD_METHOD(arg=1, lineno=1205)
          12	LOAD_FAST(arg=0, lineno=1205)
          14	LOAD_CONST(arg=2, lineno=1205)
          16	LOAD_GLOBAL(arg=2, lineno=1205)
          18	LOAD_FAST(arg=2, lineno=1205)
          20	LOAD_FAST(arg=0, lineno=1205)
          22	LOAD_ATTR(arg=3, lineno=1205)
          24	LOAD_CONST(arg=1, lineno=1205)
          26	BINARY_SUBSCR(arg=None, lineno=1205)
          28	CALL_FUNCTION(arg=2, lineno=1205)
          30	BUILD_SLICE(arg=2, lineno=1205)
          32	BINARY_SUBSCR(arg=None, lineno=1205)
          34	CALL_METHOD(arg=1, lineno=1205)
          36	COMPARE_OP(arg=5, lineno=1205)
          38	LOAD_FAST(arg=7, lineno=1205)
          40	LOAD_CONST(arg=1, lineno=1205)
          42	STORE_SUBSCR(arg=None, lineno=1205)
          44	LOAD_FAST(arg=7, lineno=1206)
          46	LOAD_CONST(arg=1, lineno=1206)
          48	DUP_TOP_TWO(arg=None, lineno=1206)
          50	BINARY_SUBSCR(arg=None, lineno=1206)
          52	LOAD_FAST(arg=0, lineno=1206)
          54	LOAD_CONST(arg=1, lineno=1206)
          56	BINARY_SUBSCR(arg=None, lineno=1206)
          58	LOAD_GLOBAL(arg=0, lineno=1206)
          60	LOAD_METHOD(arg=4, lineno=1206)
          62	LOAD_FAST(arg=0, lineno=1206)
          64	LOAD_CONST(arg=2, lineno=1206)
          66	LOAD_GLOBAL(arg=2, lineno=1206)
          68	LOAD_FAST(arg=4, lineno=1206)
          70	LOAD_FAST(arg=0, lineno=1206)
          72	LOAD_ATTR(arg=3, lineno=1206)
          74	LOAD_CONST(arg=1, lineno=1206)
          76	BINARY_SUBSCR(arg=None, lineno=1206)
          78	CALL_FUNCTION(arg=2, lineno=1206)
          80	BUILD_SLICE(arg=2, lineno=1206)
          82	BINARY_SUBSCR(arg=None, lineno=1206)
          84	CALL_METHOD(arg=1, lineno=1206)
          86	LOAD_FAST(arg=5, lineno=1206)
          88	BINARY_ADD(arg=None, lineno=1206)
          90	COMPARE_OP(arg=5, lineno=1206)
          92	INPLACE_AND(arg=None, lineno=1206)
          94	ROT_THREE(arg=None, lineno=1206)
          96	STORE_SUBSCR(arg=None, lineno=1206)
          98	LOAD_FAST(arg=7, lineno=1208)
         100	LOAD_CONST(arg=1, lineno=1208)
         102	BINARY_SUBSCR(arg=None, lineno=1208)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1208)
         106	LOAD_FAST(arg=6, lineno=1209)
         108	LOAD_CONST(arg=3, lineno=1209)
         110	BINARY_ADD(arg=None, lineno=1209)
         112	STORE_FAST(arg=8, lineno=1209)
         114	JUMP_FORWARD(arg=2, lineno=1209)
>        116	LOAD_CONST(arg=3, lineno=1211)
         118	STORE_FAST(arg=8, lineno=1211)
>        120	LOAD_FAST(arg=8, lineno=1213)
         122	LOAD_FAST(arg=0, lineno=1213)
         124	LOAD_ATTR(arg=3, lineno=1213)
         126	LOAD_CONST(arg=1, lineno=1213)
         128	BINARY_SUBSCR(arg=None, lineno=1213)
         130	COMPARE_OP(arg=0, lineno=1213)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1213)
>        134	LOAD_GLOBAL(arg=0, lineno=1214)
         136	LOAD_METHOD(arg=1, lineno=1214)
         138	LOAD_FAST(arg=0, lineno=1214)
         140	LOAD_GLOBAL(arg=1, lineno=1214)
         142	LOAD_CONST(arg=1, lineno=1214)
         144	LOAD_FAST(arg=8, lineno=1214)
         146	LOAD_FAST(arg=1, lineno=1214)
         148	BINARY_SUBTRACT(arg=None, lineno=1214)
         150	CALL_FUNCTION(arg=2, lineno=1214)
         152	LOAD_GLOBAL(arg=2, lineno=1214)
         154	LOAD_FAST(arg=8, lineno=1214)
         156	LOAD_FAST(arg=2, lineno=1214)
         158	BINARY_ADD(arg=None, lineno=1214)
         160	LOAD_FAST(arg=0, lineno=1214)
         162	LOAD_ATTR(arg=3, lineno=1214)
         164	LOAD_CONST(arg=1, lineno=1214)
         166	BINARY_SUBSCR(arg=None, lineno=1214)
         168	CALL_FUNCTION(arg=2, lineno=1214)
         170	BUILD_SLICE(arg=2, lineno=1214)
         172	BINARY_SUBSCR(arg=None, lineno=1214)
         174	CALL_METHOD(arg=1, lineno=1214)
         176	STORE_FAST(arg=9, lineno=1214)
         178	LOAD_FAST(arg=0, lineno=1217)
         180	LOAD_FAST(arg=8, lineno=1217)
         182	BINARY_SUBSCR(arg=None, lineno=1217)
         184	LOAD_FAST(arg=9, lineno=1217)
         186	COMPARE_OP(arg=2, lineno=1217)
         188	LOAD_FAST(arg=7, lineno=1217)
         190	LOAD_FAST(arg=8, lineno=1217)
         192	STORE_SUBSCR(arg=None, lineno=1217)
         194	LOAD_FAST(arg=7, lineno=1219)
         196	LOAD_FAST(arg=8, lineno=1219)
         198	BINARY_SUBSCR(arg=None, lineno=1219)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1219)
         202	LOAD_FAST(arg=8, lineno=1220)
         204	LOAD_CONST(arg=3, lineno=1220)
         206	INPLACE_ADD(arg=None, lineno=1220)
         208	STORE_FAST(arg=8, lineno=1220)
         210	JUMP_ABSOLUTE(arg=61, lineno=1221)
>        212	LOAD_GLOBAL(arg=0, lineno=1223)
         214	LOAD_METHOD(arg=4, lineno=1223)
         216	LOAD_FAST(arg=0, lineno=1223)
         218	LOAD_GLOBAL(arg=1, lineno=1223)
         220	LOAD_CONST(arg=1, lineno=1223)
         222	LOAD_FAST(arg=8, lineno=1223)
         224	LOAD_FAST(arg=3, lineno=1223)
         226	BINARY_SUBTRACT(arg=None, lineno=1223)
         228	CALL_FUNCTION(arg=2, lineno=1223)
         230	LOAD_GLOBAL(arg=2, lineno=1223)
         232	LOAD_FAST(arg=8, lineno=1223)
         234	LOAD_FAST(arg=4, lineno=1223)
         236	BINARY_ADD(arg=None, lineno=1223)
         238	LOAD_FAST(arg=0, lineno=1223)
         240	LOAD_ATTR(arg=3, lineno=1223)
         242	LOAD_CONST(arg=1, lineno=1223)
         244	BINARY_SUBSCR(arg=None, lineno=1223)
         246	CALL_FUNCTION(arg=2, lineno=1223)
         248	BUILD_SLICE(arg=2, lineno=1223)
         250	BINARY_SUBSCR(arg=None, lineno=1223)
         252	CALL_METHOD(arg=1, lineno=1223)
         254	STORE_FAST(arg=10, lineno=1223)
         256	LOAD_FAST(arg=7, lineno=1224)
         258	LOAD_FAST(arg=8, lineno=1224)
         260	DUP_TOP_TWO(arg=None, lineno=1224)
         262	BINARY_SUBSCR(arg=None, lineno=1224)
         264	LOAD_FAST(arg=0, lineno=1224)
         266	LOAD_FAST(arg=8, lineno=1224)
         268	BINARY_SUBSCR(arg=None, lineno=1224)
         270	LOAD_FAST(arg=10, lineno=1224)
         272	LOAD_FAST(arg=5, lineno=1224)
         274	BINARY_ADD(arg=None, lineno=1224)
         276	COMPARE_OP(arg=5, lineno=1224)
         278	INPLACE_AND(arg=None, lineno=1224)
         280	ROT_THREE(arg=None, lineno=1224)
         282	STORE_SUBSCR(arg=None, lineno=1224)
         284	LOAD_FAST(arg=7, lineno=1226)
         286	LOAD_FAST(arg=8, lineno=1226)
         288	BINARY_SUBSCR(arg=None, lineno=1226)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1226)
         292	LOAD_FAST(arg=8, lineno=1227)
         294	LOAD_CONST(arg=3, lineno=1227)
         296	INPLACE_ADD(arg=None, lineno=1227)
         298	STORE_FAST(arg=8, lineno=1227)
         300	JUMP_ABSOLUTE(arg=61, lineno=1228)
>        302	LOAD_FAST(arg=8, lineno=1231)
         304	LOAD_FAST(arg=6, lineno=1231)
         306	LOAD_CONST(arg=3, lineno=1231)
         308	BINARY_ADD(arg=None, lineno=1231)
         310	INPLACE_ADD(arg=None, lineno=1231)
         312	STORE_FAST(arg=8, lineno=1231)
         314	LOAD_FAST(arg=8, lineno=1213)
         316	LOAD_FAST(arg=0, lineno=1213)
         318	LOAD_ATTR(arg=3, lineno=1213)
         320	LOAD_CONST(arg=1, lineno=1213)
         322	BINARY_SUBSCR(arg=None, lineno=1213)
         324	COMPARE_OP(arg=0, lineno=1213)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1213)
         328	LOAD_CONST(arg=2, lineno=1213)
         330	RETURN_VALUE(arg=None, lineno=1213)
>        332	LOAD_CONST(arg=2, lineno=1213)
         334	RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1193)
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:48:59,720 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$8load_global.3']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1205)
2025-07-08 12:48:59,721 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$34call_method.17']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1206)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1206)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:59,722 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,723 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1208)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1208)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1208)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48', '$const100.49']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1208)
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$102binary_subscr.50']
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,724 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1209)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1209)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0']
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1209)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0', '$const108.1']
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1209)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110binary_add.2']
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1209)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1211)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1211)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const116.0']
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=120 nstack_initial=0)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0']
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:48:59,725 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$x122.1']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2', '$const126.3']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$128binary_subscr.4']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1213)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$130compare_op.5']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1214)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1214)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$134load_global.0']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1214)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
2025-07-08 12:48:59,726 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1214)
2025-07-08 12:48:59,727 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1214)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$172binary_subscr.20']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1214)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$174call_method.21']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22', '$n180.23']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24', '$maxn184.25']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1219)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1219)
2025-07-08 12:48:59,728 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1219)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29', '$n196.30']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1219)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$198binary_subscr.31']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=332 nstack_initial=0)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const332.0']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1220)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1220)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1220)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0', '$const204.1']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1220)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$206inplace_add.2']
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1221)
2025-07-08 12:48:59,729 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=212 nstack_initial=0)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$212load_global.0']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
2025-07-08 12:48:59,730 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$250binary_subscr.20']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1223)
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$252call_method.21']
2025-07-08 12:48:59,731 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
2025-07-08 12:48:59,732 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1226)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1226)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35']
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1226)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35', '$n286.36']
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1226)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$288binary_subscr.37']
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1227)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1227)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0']
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1227)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0', '$const294.1']
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1227)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$296inplace_add.2']
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1228)
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,733 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1231)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1231)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1231)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1231)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1', '$const306.2']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1231)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$308binary_add.3']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1231)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$310inplace_add.4']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$x316.6']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7']
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:48:59,734 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7', '$const320.8']
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$322binary_subscr.9']
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1213)
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$324compare_op.10']
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const328.0']
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,735 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,736 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,739 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

2025-07-08 12:48:59,752 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:59,753 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:59,754 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 106
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:59,755 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 116
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 120
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 134
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:59,756 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:59,757 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 202
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 212
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,758 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,759 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 292
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 302
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 328
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,760 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 332
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 333
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc8d2ad0>
2025-07-08 12:48:59,761 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x7ffedc500550>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7ffedc7b0190>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x7ffedc7ce8f0>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc7b28f0>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffedc5037f0>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x7ffedc7b1360>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7ffedc6af430>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc6acd00>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc6aeec0>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc6aee60>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffedc6ae6b0>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x7ffedc6ae8f0>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x7ffedc6aea10>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x7ffedc6ae440>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x7ffedc6ae2c0>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc500070>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x7ffedc6ada50>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x7ffedc3ee6b0>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x7ffedc6ad4e0>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x7ffedc6ad480>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffedc6ad720>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x7ffedc6acee0>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x7ffedc6ac100>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x7ffedc6af880>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7ffedc6afb50>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffedc6ac610>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc6afe50>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc6affa0>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc6adf90>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffedc6af520>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x7ffedc4c7be0>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x7ffedc979780>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x7ffedc4c7f70>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x7ffedc4c57e0>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x7ffedc4c5570>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc5008b0>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x7ffedc4c4d60>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x7ffedc4c50f0>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x7ffedc4c5030>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffedc4c4b20>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x7ffedc4c4070>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x7ffedc4c5b10>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc500b80>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x7ffedc4c5f00>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x7ffedc4c6050>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x7ffedc4c61a0>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x7ffedc4c6650>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x7ffedcb93fa0>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7ffedc4c6890>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffedc4c5960>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x7ffedc4c7250>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x7ffedcfa5f30>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x7ffedc8e7fd0>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x7ffedc4c7460>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x7ffedc4c7a30>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffed77617b0>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x7ffedc4c45e0>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x7ffedc4c6f20>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedcac22f0>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc5032b0>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc502e90>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x7ffedcb61e70>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x7ffedcb61060>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x7ffedc503c40>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x7ffedc500a90>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x7ffedc7b2fb0>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x7ffedc7b1c90>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x7ffedc7b3490>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc5007f0>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x7ffedc7b3c10>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x7ffedc501180>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x7ffedc7b3700>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x7ffedc7b2590>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x7ffedc7b0f70>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x7ffedc7b38e0>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x7ffedc7b1090>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x7ffedc7b08b0>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc7cfd60>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x7ffedc7b1420>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x7ffedc7b0610>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x7ffedc7b0fd0>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7ffedc3df0a0>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x7ffedc7b16c0>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffedc3ecf40>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x7ffedc6aedd0>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x7ffedc6adba0>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x7ffedc6ad300>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x7ffedc6adf30>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc39e410>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x7ffedc4c52a0>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x7ffedc4c48b0>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x7ffedc4c6bf0>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x7ffedc4c7e50>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x7ffedc4c7d90>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x7ffedc502d70>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc7cfe80>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x7ffedcb610c0>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x7ffed7752f80>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x7ffedc5f2e90>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x7ffedc7b2b00>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x7ffedc7b3b20>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7ffedc4c46d0>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x7ffedc7b01f0>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x7ffedc6ac9a0>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x7ffedc6af9d0>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x7ffedc4c67a0>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x7ffedc4c6860>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x7ffedc343b80>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7ffedc6ace20>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x7ffedc7b1660>, 106),
                   (<numba.core.ir.Assign object at 0x7ffedc7b0970>, 116),
                   (<numba.core.ir.Assign object at 0x7ffedc6afa90>, 202),
                   (<numba.core.ir.Assign object at 0x7ffedc4c5d80>, 292),
                   (<numba.core.ir.Assign object at 0x7ffedc4c76a0>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x7ffedc343310>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7ffedc343820>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7ffedc341d20>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7ffedc342bf0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7ffedc341360>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7ffedc343ac0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc3400d0>, 0)]})
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7718580>
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var n
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:59,763 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,764 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,765 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: n
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n = wait + $const108.1
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.1 = const(int, 1)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,766 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,767 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.2 = $206inplace_add.2
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,768 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.3 = $296inplace_add.2
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,769 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.4 = $310inplace_add.4
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed78ed990>
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x7ffed77621a0>],
             116: [<numba.core.ir.Assign object at 0x7ffedc501c30>],
             202: [<numba.core.ir.Assign object at 0x7ffedc501570>],
             292: [<numba.core.ir.Assign object at 0x7ffedc503c10>],
             302: [<numba.core.ir.Assign object at 0x7ffedc503d90>]})
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,770 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,771 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,772 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:48:59,773 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.1 = const(int, 1)
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 120
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n = wait + $const108.1
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 116
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.1 = const(int, 1)
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 333
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 333
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 202
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.2 = $206inplace_add.2
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 292
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.3 = $296inplace_add.2
2025-07-08 12:48:59,774 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[202, 292])
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 134
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 120
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[106, 116, 333])
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 302
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.4 = $310inplace_add.4
2025-07-08 12:48:59,775 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $148binary_subtract.7 = n.7 - pre_max
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$158binary_add.12 = n + post_max
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $158binary_add.12 = n.7 + post_max
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $186compare_op.26
2025-07-08 12:48:59,776 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $186compare_op.26
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 202
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 202
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.2 = $206inplace_add.2
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,777 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $226binary_subtract.7 = n.7 - pre_avg
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$236binary_add.12 = n + post_avg
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $236binary_add.12 = n.7 + post_avg
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,778 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $278inplace_and.34
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $278inplace_and.34
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,779 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 292
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 292
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.3 = $296inplace_add.2
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,780 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 302
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 302
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.4 = $310inplace_add.4
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,781 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed78ed990>
2025-07-08 12:48:59,782 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:48:59,789 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1', '$const6.2']
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8compare_op.3']
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=12 nstack_initial=0)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0']
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0', '$const14.1']
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$16call_function.2']
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=20 nstack_initial=0)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20load_global.0']
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
2025-07-08 12:48:59,790 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1', '$a24.2']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$26call_method.3']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4', '$it32.5']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$34call_function.6']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7', '$const38.8']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.9']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10']
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
2025-07-08 12:48:59,791 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10', '$max_value46.11']
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48call_function.12']
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value52.0']
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$it56.0']
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi60.0']
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=1)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
2025-07-08 12:48:59,792 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi60.0']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=104 nstack_initial=0)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value104.0']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi62.0', '$phi62.1']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=62 nstack_initial=2)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$phi62.1']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$view64.2']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$66load_method.3']
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
2025-07-08 12:48:59,793 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$68call_method.4']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$76call_function.7']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0', '$v80.1']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1', '$phi80.0']
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
2025-07-08 12:48:59,794 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi88.0']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=88 nstack_initial=1)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$94call_function.4']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi98.0']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=98 nstack_initial=1)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0']
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
2025-07-08 12:48:59,795 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0', '$v98.1']
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi102.0']
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=102 nstack_initial=1)
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi102.0']
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
2025-07-08 12:48:59,796 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
2025-07-08 12:48:59,797 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:59,797 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:59,797 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:48:59,797 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
2025-07-08 12:48:59,797 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
2025-07-08 12:48:59,797 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
2025-07-08 12:48:59,798 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,799 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:59,807 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 12
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 20
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:48:59,808 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 52
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 56
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 60
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 62
2025-07-08 12:48:59,809 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:48:59,810 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 88
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 98
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 102
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 104
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc72b130>
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,811 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:59,812 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc699510>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x7ffedc795f60>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc794610>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc794160>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc7955a0>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc7950f0>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x7ffedc796e00>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x7ffedc797af0>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x7ffedc797610>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x7ffedc7958a0>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x7ffedc795ab0>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7ffedc501ea0>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7ffedc795630>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc794250>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x7ffedc794a90>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x7ffedc796e60>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x7ffedc797100>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x7ffedc797790>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x7ffedc797880>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x7ffedc796140>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x7ffedc7969b0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x7ffedc6983d0>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x7ffedc69a8c0>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x7ffedc698be0>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x7ffedc795c30>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x7ffedc698880>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7ffedc6993f0>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x7ffedc794760>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x7ffedc795e40>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7ffedc794b50>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x7ffedc796e90>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x7ffedc796b30>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc501900>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x7ffedc7953f0>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x7ffedc795a80>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x7ffedc69b160>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x7ffedc698760>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x7ffedc797460>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x7ffedc7965f0>,
                            20),
                           (<numba.core.ir.Assign object at 0x7ffedc69b250>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x7ffedc795750>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x7ffedc7956f0>, 62)]})
2025-07-08 12:48:59,812 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc69a350>
2025-07-08 12:48:59,812 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var max_value
2025-07-08 12:48:59,812 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: max_value
2025-07-08 12:48:59,813 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,814 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value.1 = v
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc69a680>
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:59,815 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x7ffedc69a170>],
             98: [<numba.core.ir.Assign object at 0x7ffedc6988b0>]})
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:48:59,816 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 52
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 52
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:48:59,817 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,818 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 60
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 56
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 56
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 56
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 102
2025-07-08 12:48:59,819 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 102
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 88
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.1 = v
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value.1 = v
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,820 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc69a680>
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 104
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 104
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $106return_value.1 = cast(value=max_value.2)
2025-07-08 12:48:59,821 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,826 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0']
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$a4.1']
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2']
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$10binary_subtract.4']
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12compare_op.5']
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=0)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,827 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$a18.1']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$20load_attr.2']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$22unary_negative.3']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$24compare_op.4']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0', '$const30.1']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$32call_function.2']
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,828 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a36.0']
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$38load_method.1']
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2']
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2', '$indices42.3']
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44binary_subscr.4']
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,829 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,830 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,830 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc618640>
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: indices = arg(1, name=indices)
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const8.3 = const(int, 1)
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool14 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,836 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $14pred, 28, 16
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc618640>
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24compare_op.4 = indices < $22unary_negative.3
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool26 = global(bool: <class 'bool'>)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $26pred, 28, 36
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 28
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc618640>
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.1 = const(str, Index out of bounds)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 36
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc618640>
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
2025-07-08 12:48:59,837 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $46return_value.5
2025-07-08 12:48:59,838 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x7fff8a8cd360>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7ffedc5f2590>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x7ffedc5f3c10>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc5f3010>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x7ffedc5f24a0>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x7ffedc5f27a0>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7ffedc5ca680>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc5c8c10>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc5c8e20>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc5c98d0>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x7ffedc5cb0d0>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffedc5cad10>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x7ffedc6189d0>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc8d1ed0>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x7ffedc5ca440>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x7ffedc8d23b0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc8d0910>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x7ffedc5f31c0>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x7ffedc5f2dd0>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x7ffedc8d2d10>, 0)]})
2025-07-08 12:48:59,838 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc618640>
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$ary2.0']
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:48:59,853 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$ary6.2']
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$8load_attr.3']
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_method.4']
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,854 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,855 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc634b20>
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ary = arg(0, name=ary)
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $12return_value.5
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7ffedc728ca0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7ffedc72be80>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc728c40>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x7ffedc728b20>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7ffedc993550>, 0)]})
2025-07-08 12:48:59,858 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc634b20>
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	LOAD_CONST(arg=1, lineno=488)
           4	RETURN_VALUE(arg=None, lineno=488)
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=488)
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=RETURN_VALUE(arg=None, lineno=488)
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const2.0']
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,916 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,917 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,917 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'retval': '$const2.0', 'castval': '$4return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,917 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    $const2.0 = const(bool, False)           ['$const2.0']
    $4return_value.1 = cast(value=$const2.0) ['$4return_value.1', '$const2.0']
    return $4return_value.1                  ['$4return_value.1']

2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc92d0f0>
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const2.0 = const(bool, False)
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4return_value.1 = cast(value=$const2.0)
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $4return_value.1
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$4return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc5fca00>,
                                   0)],
             '$const2.0': [(<numba.core.ir.Assign object at 0x7ffedc5fda20>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc9924d0>, 0)]})
2025-07-08 12:48:59,920 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc92d0f0>
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0', '$min_val4.1']
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6compare_op.2']
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:48:59,937 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:48:59,938 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,938 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:48:59,938 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:48:59,938 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:48:59,938 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:48:59,938 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:48:59,938 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed77bf8b0>
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: min_val = arg(1, name=min_val)
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6compare_op.2 = a > min_val
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $8return_value.3
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed77bdc60>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7ffed77bdab0>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed77bd870>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7ffed77be710>, 0)]})
2025-07-08 12:48:59,941 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed77bf8b0>
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0']
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6load_global.1']
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2']
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2', '$a10.3']
2025-07-08 12:49:00,027 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12call_method.4']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi16.0']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=1)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi16.0']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=34 nstack_initial=0)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$a36.1']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$38load_attr.2']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40binary_true_divide.3']
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,028 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi18.0', '$phi18.1']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=18 nstack_initial=2)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$phi18.1']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$v22.3']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$24load_method.4']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$26call_method.5']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$28inplace_add.6']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,029 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
2025-07-08 12:49:00,030 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
2025-07-08 12:49:00,031 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
2025-07-08 12:49:00,031 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,031 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7bf08b0>
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7bf08b0>
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 18
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7bf08b0>
2025-07-08 12:49:00,036 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 34
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7bf08b0>
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x7ffed7715060>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7ffed77147c0>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7ffed7715ed0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x7ffed77148e0>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x7ffed7716770>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x7ffed7716500>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x7ffed7714790>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x7ffed7717eb0>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x7ffed7716410>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x7ffed77172e0>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x7ffed7714520>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x7ffed7716440>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x7ffed7716110>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x7ffed7717be0>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x7ffed7714190>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed77befe0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7ffed77bdb10>, 0),
                   (<numba.core.ir.Assign object at 0x7ffed7717e50>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x7ffed7716830>, 18)]})
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7bf08b0>
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var c
2025-07-08 12:49:00,037 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7bf0730>
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: c
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7bf0730>
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7bf0730>
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,038 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c.1 = $28inplace_add.6
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7bf0730>
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7bf06d0>],
             18: [<numba.core.ir.Assign object at 0x7ffed7bf0b80>]})
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7bf0730>
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:49:00,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7bf0730>
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7bf0730>
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 18
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 16
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c.1 = $28inplace_add.6
2025-07-08 12:49:00,040 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c.1 = $28inplace_add.6
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7bf0730>
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 34
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 34
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:49:00,041 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:49:00,237 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	LOAD_FAST(arg=0, lineno=1205)
           4	LOAD_CONST(arg=1, lineno=1205)
           6	BINARY_SUBSCR(arg=None, lineno=1205)
           8	LOAD_GLOBAL(arg=0, lineno=1205)
          10	LOAD_METHOD(arg=1, lineno=1205)
          12	LOAD_FAST(arg=0, lineno=1205)
          14	LOAD_CONST(arg=2, lineno=1205)
          16	LOAD_GLOBAL(arg=2, lineno=1205)
          18	LOAD_FAST(arg=2, lineno=1205)
          20	LOAD_FAST(arg=0, lineno=1205)
          22	LOAD_ATTR(arg=3, lineno=1205)
          24	LOAD_CONST(arg=1, lineno=1205)
          26	BINARY_SUBSCR(arg=None, lineno=1205)
          28	CALL_FUNCTION(arg=2, lineno=1205)
          30	BUILD_SLICE(arg=2, lineno=1205)
          32	BINARY_SUBSCR(arg=None, lineno=1205)
          34	CALL_METHOD(arg=1, lineno=1205)
          36	COMPARE_OP(arg=5, lineno=1205)
          38	LOAD_FAST(arg=7, lineno=1205)
          40	LOAD_CONST(arg=1, lineno=1205)
          42	STORE_SUBSCR(arg=None, lineno=1205)
          44	LOAD_FAST(arg=7, lineno=1206)
          46	LOAD_CONST(arg=1, lineno=1206)
          48	DUP_TOP_TWO(arg=None, lineno=1206)
          50	BINARY_SUBSCR(arg=None, lineno=1206)
          52	LOAD_FAST(arg=0, lineno=1206)
          54	LOAD_CONST(arg=1, lineno=1206)
          56	BINARY_SUBSCR(arg=None, lineno=1206)
          58	LOAD_GLOBAL(arg=0, lineno=1206)
          60	LOAD_METHOD(arg=4, lineno=1206)
          62	LOAD_FAST(arg=0, lineno=1206)
          64	LOAD_CONST(arg=2, lineno=1206)
          66	LOAD_GLOBAL(arg=2, lineno=1206)
          68	LOAD_FAST(arg=4, lineno=1206)
          70	LOAD_FAST(arg=0, lineno=1206)
          72	LOAD_ATTR(arg=3, lineno=1206)
          74	LOAD_CONST(arg=1, lineno=1206)
          76	BINARY_SUBSCR(arg=None, lineno=1206)
          78	CALL_FUNCTION(arg=2, lineno=1206)
          80	BUILD_SLICE(arg=2, lineno=1206)
          82	BINARY_SUBSCR(arg=None, lineno=1206)
          84	CALL_METHOD(arg=1, lineno=1206)
          86	LOAD_FAST(arg=5, lineno=1206)
          88	BINARY_ADD(arg=None, lineno=1206)
          90	COMPARE_OP(arg=5, lineno=1206)
          92	INPLACE_AND(arg=None, lineno=1206)
          94	ROT_THREE(arg=None, lineno=1206)
          96	STORE_SUBSCR(arg=None, lineno=1206)
          98	LOAD_FAST(arg=7, lineno=1208)
         100	LOAD_CONST(arg=1, lineno=1208)
         102	BINARY_SUBSCR(arg=None, lineno=1208)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1208)
         106	LOAD_FAST(arg=6, lineno=1209)
         108	LOAD_CONST(arg=3, lineno=1209)
         110	BINARY_ADD(arg=None, lineno=1209)
         112	STORE_FAST(arg=8, lineno=1209)
         114	JUMP_FORWARD(arg=2, lineno=1209)
>        116	LOAD_CONST(arg=3, lineno=1211)
         118	STORE_FAST(arg=8, lineno=1211)
>        120	LOAD_FAST(arg=8, lineno=1213)
         122	LOAD_FAST(arg=0, lineno=1213)
         124	LOAD_ATTR(arg=3, lineno=1213)
         126	LOAD_CONST(arg=1, lineno=1213)
         128	BINARY_SUBSCR(arg=None, lineno=1213)
         130	COMPARE_OP(arg=0, lineno=1213)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1213)
>        134	LOAD_GLOBAL(arg=0, lineno=1214)
         136	LOAD_METHOD(arg=1, lineno=1214)
         138	LOAD_FAST(arg=0, lineno=1214)
         140	LOAD_GLOBAL(arg=1, lineno=1214)
         142	LOAD_CONST(arg=1, lineno=1214)
         144	LOAD_FAST(arg=8, lineno=1214)
         146	LOAD_FAST(arg=1, lineno=1214)
         148	BINARY_SUBTRACT(arg=None, lineno=1214)
         150	CALL_FUNCTION(arg=2, lineno=1214)
         152	LOAD_GLOBAL(arg=2, lineno=1214)
         154	LOAD_FAST(arg=8, lineno=1214)
         156	LOAD_FAST(arg=2, lineno=1214)
         158	BINARY_ADD(arg=None, lineno=1214)
         160	LOAD_FAST(arg=0, lineno=1214)
         162	LOAD_ATTR(arg=3, lineno=1214)
         164	LOAD_CONST(arg=1, lineno=1214)
         166	BINARY_SUBSCR(arg=None, lineno=1214)
         168	CALL_FUNCTION(arg=2, lineno=1214)
         170	BUILD_SLICE(arg=2, lineno=1214)
         172	BINARY_SUBSCR(arg=None, lineno=1214)
         174	CALL_METHOD(arg=1, lineno=1214)
         176	STORE_FAST(arg=9, lineno=1214)
         178	LOAD_FAST(arg=0, lineno=1217)
         180	LOAD_FAST(arg=8, lineno=1217)
         182	BINARY_SUBSCR(arg=None, lineno=1217)
         184	LOAD_FAST(arg=9, lineno=1217)
         186	COMPARE_OP(arg=2, lineno=1217)
         188	LOAD_FAST(arg=7, lineno=1217)
         190	LOAD_FAST(arg=8, lineno=1217)
         192	STORE_SUBSCR(arg=None, lineno=1217)
         194	LOAD_FAST(arg=7, lineno=1219)
         196	LOAD_FAST(arg=8, lineno=1219)
         198	BINARY_SUBSCR(arg=None, lineno=1219)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1219)
         202	LOAD_FAST(arg=8, lineno=1220)
         204	LOAD_CONST(arg=3, lineno=1220)
         206	INPLACE_ADD(arg=None, lineno=1220)
         208	STORE_FAST(arg=8, lineno=1220)
         210	JUMP_ABSOLUTE(arg=61, lineno=1221)
>        212	LOAD_GLOBAL(arg=0, lineno=1223)
         214	LOAD_METHOD(arg=4, lineno=1223)
         216	LOAD_FAST(arg=0, lineno=1223)
         218	LOAD_GLOBAL(arg=1, lineno=1223)
         220	LOAD_CONST(arg=1, lineno=1223)
         222	LOAD_FAST(arg=8, lineno=1223)
         224	LOAD_FAST(arg=3, lineno=1223)
         226	BINARY_SUBTRACT(arg=None, lineno=1223)
         228	CALL_FUNCTION(arg=2, lineno=1223)
         230	LOAD_GLOBAL(arg=2, lineno=1223)
         232	LOAD_FAST(arg=8, lineno=1223)
         234	LOAD_FAST(arg=4, lineno=1223)
         236	BINARY_ADD(arg=None, lineno=1223)
         238	LOAD_FAST(arg=0, lineno=1223)
         240	LOAD_ATTR(arg=3, lineno=1223)
         242	LOAD_CONST(arg=1, lineno=1223)
         244	BINARY_SUBSCR(arg=None, lineno=1223)
         246	CALL_FUNCTION(arg=2, lineno=1223)
         248	BUILD_SLICE(arg=2, lineno=1223)
         250	BINARY_SUBSCR(arg=None, lineno=1223)
         252	CALL_METHOD(arg=1, lineno=1223)
         254	STORE_FAST(arg=10, lineno=1223)
         256	LOAD_FAST(arg=7, lineno=1224)
         258	LOAD_FAST(arg=8, lineno=1224)
         260	DUP_TOP_TWO(arg=None, lineno=1224)
         262	BINARY_SUBSCR(arg=None, lineno=1224)
         264	LOAD_FAST(arg=0, lineno=1224)
         266	LOAD_FAST(arg=8, lineno=1224)
         268	BINARY_SUBSCR(arg=None, lineno=1224)
         270	LOAD_FAST(arg=10, lineno=1224)
         272	LOAD_FAST(arg=5, lineno=1224)
         274	BINARY_ADD(arg=None, lineno=1224)
         276	COMPARE_OP(arg=5, lineno=1224)
         278	INPLACE_AND(arg=None, lineno=1224)
         280	ROT_THREE(arg=None, lineno=1224)
         282	STORE_SUBSCR(arg=None, lineno=1224)
         284	LOAD_FAST(arg=7, lineno=1226)
         286	LOAD_FAST(arg=8, lineno=1226)
         288	BINARY_SUBSCR(arg=None, lineno=1226)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1226)
         292	LOAD_FAST(arg=8, lineno=1227)
         294	LOAD_CONST(arg=3, lineno=1227)
         296	INPLACE_ADD(arg=None, lineno=1227)
         298	STORE_FAST(arg=8, lineno=1227)
         300	JUMP_ABSOLUTE(arg=61, lineno=1228)
>        302	LOAD_FAST(arg=8, lineno=1231)
         304	LOAD_FAST(arg=6, lineno=1231)
         306	LOAD_CONST(arg=3, lineno=1231)
         308	BINARY_ADD(arg=None, lineno=1231)
         310	INPLACE_ADD(arg=None, lineno=1231)
         312	STORE_FAST(arg=8, lineno=1231)
         314	LOAD_FAST(arg=8, lineno=1213)
         316	LOAD_FAST(arg=0, lineno=1213)
         318	LOAD_ATTR(arg=3, lineno=1213)
         320	LOAD_CONST(arg=1, lineno=1213)
         322	BINARY_SUBSCR(arg=None, lineno=1213)
         324	COMPARE_OP(arg=0, lineno=1213)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1213)
         328	LOAD_CONST(arg=2, lineno=1213)
         330	RETURN_VALUE(arg=None, lineno=1213)
>        332	LOAD_CONST(arg=2, lineno=1213)
         334	RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:49:00,237 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,237 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,237 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=1193)
2025-07-08 12:49:00,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0', '$const4.1']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$8load_global.3']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1205)
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
2025-07-08 12:49:00,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6binary_subscr.2', '$34call_method.17']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1205)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1206)
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1206)
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
2025-07-08 12:49:00,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1206)
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
2025-07-08 12:49:00,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1206)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1208)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1208)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1208)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks98.48', '$const100.49']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1208)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$102binary_subscr.50']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1209)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1209)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1209)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$wait106.0', '$const108.1']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1209)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110binary_add.2']
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1209)
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,242 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1211)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1211)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const116.0']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=120 nstack_initial=0)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$x122.1']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$124load_attr.2', '$const126.3']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n120.0', '$128binary_subscr.4']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1213)
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$130compare_op.5']
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,243 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$134load_global.0']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1214)
2025-07-08 12:49:00,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$136load_method.1', '$172binary_subscr.20']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1214)
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$174call_method.21']
2025-07-08 12:49:00,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x178.22', '$n180.23']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$182binary_subscr.24', '$maxn184.25']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1217)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1219)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1219)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1219)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks194.29', '$n196.30']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1219)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$198binary_subscr.31']
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=332 nstack_initial=0)
2025-07-08 12:49:00,246 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const332.0']
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1220)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1220)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0']
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1220)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n202.0', '$const204.1']
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1220)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$206inplace_add.2']
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1221)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=212 nstack_initial=0)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1223)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1223)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$212load_global.0']
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1']
2025-07-08 12:49:00,247 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1223)
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
2025-07-08 12:49:00,248 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$214load_method.1', '$250binary_subscr.20']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1223)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$252call_method.21']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1224)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1224)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1224)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1224)
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
2025-07-08 12:49:00,249 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1224)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1226)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1226)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1226)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$peaks284.35', '$n286.36']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1226)
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$288binary_subscr.37']
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,250 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1227)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1227)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1227)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n292.0', '$const294.1']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1227)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$296inplace_add.2']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1228)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1231)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1231)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1231)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1231)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$wait304.1', '$const306.2']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1231)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n302.0', '$308binary_add.3']
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1231)
2025-07-08 12:49:00,251 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$310inplace_add.4']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$x316.6']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$318load_attr.7', '$const320.8']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$n314.5', '$322binary_subscr.9']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$324compare_op.10']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1213)
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const328.0']
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,252 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=134 nstack_initial=0)])
2025-07-08 12:49:00,253 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,253 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
2025-07-08 12:49:00,253 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:00,253 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,253 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,253 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,254 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,257 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

2025-07-08 12:49:00,270 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,270 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 106
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 116
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 120
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 134
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:49:00,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 202
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:49:00,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 212
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 292
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 302
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:49:00,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 328
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 332
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 333
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc36fd30>
2025-07-08 12:49:00,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x7ffedc36d1e0>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7ffedc2faaa0>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x7ffedc7b33d0>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc2fae90>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffedc36ea40>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x7ffedc2f9ea0>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7ffedc2f90c0>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc2f91e0>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc2f9360>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc2f9600>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffedc2f9b70>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x7ffedc2f8fd0>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x7ffedc2fb700>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x7ffedc2e3520>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x7ffedc2e3280>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc36e5c0>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x7ffedc2e2d70>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x7ffedc4c5a80>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x7ffedc2e2c20>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x7ffedc2e25c0>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffedc2e0760>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x7ffedc2e24d0>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x7ffedc2e1d50>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x7ffedc2e1780>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7ffedc2e10c0>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffedc2e18a0>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc2e0f40>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc2e0eb0>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc2e08e0>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x7ffedc2e03d0>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x7ffedc2e0100>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x7ffedc4c5d80>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x7ffedc2e0130>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x7ffedc2e1960>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x7ffedc2e3760>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc36d810>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x7ffedc2e0b80>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x7ffedc2e3cd0>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x7ffedc2e3d60>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x7ffedc2e3f10>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x7ffedc380790>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x7ffedc380b50>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7ffedc36cb20>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x7ffedc380f10>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x7ffedc381090>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x7ffedc381210>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x7ffedc381690>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x7ffedc6ad000>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7ffedc381900>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x7ffedc3809a0>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x7ffedc381f30>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x7ffedc6af7f0>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x7ffedc6ac610>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x7ffedc3820b0>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x7ffedc382500>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x7ffedc503400>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x7ffedc3829b0>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x7ffedc382c20>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x7ffedc6ad840>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc382ec0>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc3832e0>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x7ffedc9a28c0>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x7ffedc4ab670>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x7ffedc36d450>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x7ffedc36d3f0>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x7ffed7b526b0>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x7ffed7b98550>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x7ffed7bf1810>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7ffedc36c340>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x7ffed7bdb880>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x7ffedc36d8d0>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x7ffedc2fbe80>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x7ffedc2f8e80>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x7ffedc2fbfd0>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x7ffedc2fbcd0>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x7ffedc2fadd0>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x7ffedc2fa710>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x7ffedc7b03d0>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x7ffedc2fb6a0>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x7ffedc2fb5b0>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x7ffedc2fa410>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7ffedc47fdc0>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x7ffedc2fa590>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffedc4c5540>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x7ffedc2f9780>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x7ffedc2e2e60>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x7ffedc2e2200>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x7ffedc2e1420>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7ffedc4c64a0>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x7ffedc2e3b80>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x7ffedc380370>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x7ffedc381d80>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x7ffedc382680>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x7ffedc382d40>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x7ffedc383160>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffedc7b17b0>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x7ffedc45df00>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x7ffedc43eef0>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x7ffed7be0550>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x7ffedc8d15a0>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x7ffed7bd9d80>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7ffedc380130>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x7ffedc2fa950>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x7ffedc2f9d20>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x7ffedc2e1540>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x7ffedc3817e0>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x7ffedc382b00>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x7ffedc405ff0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7ffedc2e2440>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x7ffedc2fb940>, 106),
                   (<numba.core.ir.Assign object at 0x7ffedc2fa200>, 116),
                   (<numba.core.ir.Assign object at 0x7ffedc2e12a0>, 202),
                   (<numba.core.ir.Assign object at 0x7ffedc380d60>, 292),
                   (<numba.core.ir.Assign object at 0x7ffedc382170>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x7ffedc458670>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7ffedc407c70>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7ffedc2da1a0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7ffedc407910>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7ffedc2dbe20>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7ffedc458cd0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffedc502b60>, 0)]})
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc2f9930>
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var n
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:49:00,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:49:00,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:49:00,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: n
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n = wait + $const108.1
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = const(int, 1)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.1 = const(int, 1)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:49:00,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $206inplace_add.2
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.2 = $206inplace_add.2
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $296inplace_add.2
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.3 = $296inplace_add.2
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = $310inplace_add.4
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: n.4 = $310inplace_add.4
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:49:00,287 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc3de770>
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x7ffedc186860>],
             116: [<numba.core.ir.Assign object at 0x7ffedc383790>],
             202: [<numba.core.ir.Assign object at 0x7ffedc383940>],
             292: [<numba.core.ir.Assign object at 0x7ffedc383fa0>],
             302: [<numba.core.ir.Assign object at 0x7ffedc383d00>]})
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_max = arg(1, name=pre_max)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_max = arg(2, name=post_max)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: pre_avg = arg(3, name=pre_avg)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: post_avg = arg(4, name=post_avg)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: delta = arg(5, name=delta)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: wait = arg(6, name=wait)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks = arg(7, name=peaks)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 0)
2025-07-08 12:49:00,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(NoneType, None)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16load_global.7 = global(min: <built-in function min>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const24.11 = const(int, 0)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const40.20 = const(int, 0)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $36compare_op.18
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const46.22 = const(int, 0)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const54.27 = const(int, 0)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const64.32 = const(NoneType, None)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_global.33 = global(min: <built-in function min>)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const74.37 = const(int, 0)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88binary_add.45 = $84call_method.43 + delta
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[0] = $92inplace_and.47
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const100.49 = const(int, 0)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $104pred, 106, 116
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 1)
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n = wait + $const108.1
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 116
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.1 = const(int, 1)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 120
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const126.3 = const(int, 0)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 120
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n = wait + $const108.1
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 116
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.1 = const(int, 1)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 333
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 333
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 202
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.2 = $206inplace_add.2
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 292
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.3 = $296inplace_add.2
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[202, 292])
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool132 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $132pred, 134, 332
2025-07-08 12:49:00,291 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 134
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $140load_global.3 = global(max: <built-in function max>)
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const142.4 = const(int, 0)
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $148binary_subtract.7 = n - pre_max
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 134
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 120
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[106, 116, 333])
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 302
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def n.4 = $310inplace_add.4
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $148binary_subtract.7 = n.7 - pre_max
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $152load_global.9 = global(min: <built-in function min>)
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158binary_add.12 = n + post_max
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$158binary_add.12 = n + post_max
2025-07-08 12:49:00,292 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $158binary_add.12 = n.7 + post_max
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const164.15 = const(int, 0)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $186compare_op.26
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $186compare_op.26
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $186compare_op.26
2025-07-08 12:49:00,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool200 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $200pred, 212, 202
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 202
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const204.1 = const(int, 1)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 202
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 202
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.2 = $206inplace_add.2
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 212
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $218load_global.3 = global(max: <built-in function max>)
2025-07-08 12:49:00,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const220.4 = const(int, 0)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $226binary_subtract.7 = n - pre_avg
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $226binary_subtract.7 = n.7 - pre_avg
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $230load_global.9 = global(min: <built-in function min>)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $236binary_add.12 = n + post_avg
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$236binary_add.12 = n + post_avg
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $236binary_add.12 = n.7 + post_avg
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const242.15 = const(int, 0)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $274binary_add.32 = avgn + delta
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: peaks[n] = $278inplace_and.34
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=peaks[n] = $278inplace_and.34
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: peaks[n.7] = $278inplace_and.34
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2025-07-08 12:49:00,296 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool290 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $290pred, 302, 292
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 292
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const294.1 = const(int, 1)
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 292
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 292
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,297 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.3 = $296inplace_add.2
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 333
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 302
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const306.2 = const(int, 1)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $308binary_add.3 = wait + $const306.2
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 302
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 212 from label 302
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 212
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 212
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 134 from label 212
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 134
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: n.4 = $310inplace_add.4
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const320.8 = const(int, 0)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:49:00,298 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool326 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $326pred, 134, 328
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 328
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const328.0 = const(NoneType, None)
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $330return_value.1 = cast(value=$const328.0)
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $330return_value.1
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 332
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const332.0 = const(NoneType, None)
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $334return_value.1 = cast(value=$const332.0)
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $334return_value.1
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 333
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc3de770>
2025-07-08 12:49:00,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 120
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
2025-07-08 12:49:00,306 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1', '$const6.2']
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8compare_op.3']
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=12 nstack_initial=0)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0']
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12load_global.0', '$const14.1']
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
2025-07-08 12:49:00,307 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$16call_function.2']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=20 nstack_initial=0)])
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=20 nstack_initial=0)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$20load_global.0']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22load_method.1', '$a24.2']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$26call_method.3']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$30load_global.4', '$it32.5']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$34call_function.6']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$36load_method.7', '$const38.8']
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
2025-07-08 12:49:00,308 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.9']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_deref.10', '$max_value46.11']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48call_function.12']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value52.0']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=56 nstack_initial=0)])
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$it56.0']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi60.0']
2025-07-08 12:49:00,309 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=1)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi60.0']
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=104 nstack_initial=0)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$max_value104.0']
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=62 nstack_initial=2)])
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi62.0', '$phi62.1']
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=62 nstack_initial=2)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$phi62.1']
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$view64.2']
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
2025-07-08 12:49:00,310 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$66load_method.3']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$68call_method.4']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi62.0', '$76call_function.7']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi80.0']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi80.0', '$v80.1']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1', '$phi80.0']
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
2025-07-08 12:49:00,311 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$v80.1']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=88 nstack_initial=1)])
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi88.0']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=88 nstack_initial=1)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi88.0', '$94call_function.4']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi98.0']
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=98 nstack_initial=1)
2025-07-08 12:49:00,312 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0']
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi98.0', '$v98.1']
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi102.0']
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=102 nstack_initial=1)
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi102.0']
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=1)])
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
2025-07-08 12:49:00,313 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
2025-07-08 12:49:00,314 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:49:00,314 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:49:00,314 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
2025-07-08 12:49:00,314 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
2025-07-08 12:49:00,314 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
2025-07-08 12:49:00,315 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,316 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,324 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 12
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 20
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,325 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 52
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 56
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 60
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 62
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,326 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 80
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 88
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 98
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 102
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 104
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc122410>
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,327 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc0db280>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x7ffedc369f30>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc36a590>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc369e40>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc369ff0>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc36b220>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x7ffedc36b760>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x7ffedc36ba60>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x7ffedc36bb80>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x7ffedc0d8160>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x7ffedc0d8460>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7ffedc36a7a0>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7ffedc0d86a0>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc0d8880>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x7ffedc0d8be0>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x7ffedc0d8f10>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x7ffedc0d9030>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x7ffedc0d9150>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x7ffedc0d96c0>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x7ffedc0d9ae0>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x7ffedc0d9de0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x7ffedc0da020>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x7ffedc0da2c0>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x7ffedc0da500>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x7ffedc36ae60>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x7ffedc0da920>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7ffedc0dab60>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x7ffedc36a410>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x7ffedc36bd00>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7ffedc36b010>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x7ffedc0d8a60>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x7ffedc0d8e50>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc36eb60>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x7ffedc36ad10>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x7ffedc0d8580>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x7ffedc0d9f00>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x7ffedc0daa40>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x7ffedc36b550>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x7ffedc36bf10>,
                            20),
                           (<numba.core.ir.Assign object at 0x7ffedc0dadd0>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x7ffedc0d98d0>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x7ffedc0d9420>, 62)]})
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc36a950>
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var max_value
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,328 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,329 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: max_value
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,330 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:00,331 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = v
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: max_value.1 = v
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x7ffedc36ac20>],
             98: [<numba.core.ir.Assign object at 0x7ffedc36f670>]})
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 0)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool10 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $10pred, 12, 20
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 12
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
2025-07-08 12:49:00,332 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 20
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $30load_global.4 = global(next: <built-in function next>)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.8 = const(int, 0)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $50pred, 52, 56
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 52
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,333 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $54return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 52
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 52
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $54return_value.1
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 56
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $58get_iter.1 = getiter(value=it)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi60.0 = $58get_iter.1
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 60
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi62.1 = $60for_iter.2
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $60for_iter.3, 62, 104
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 62
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: view = $phi62.1
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $66load_method.3 = getattr(value=view, attr=item)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,334 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7fffb32bd2d0>)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $78pred, 80, 88
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 80
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $86return_value.2 = cast(value=v)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $86return_value.2
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 88
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7fffb32bcdc0>)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 60
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 56
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 56
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 20 from label 56
2025-07-08 12:49:00,335 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 20
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 102
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 102
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 88
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 88
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 62 from label 88
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 62
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 62
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 62
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.1 = v
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool96 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $96pred, 98, 102
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: max_value.1 = v
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 102
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 102
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,336 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 60
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 104
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc36a2f0>
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $106return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 104
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 60 from label 104
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 60
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $106return_value.1 = cast(value=max_value.2)
2025-07-08 12:49:00,337 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $106return_value.1
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0']
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$a4.1']
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2']
2025-07-08 12:49:00,342 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices2.0', '$10binary_subtract.4']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12compare_op.5']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=0)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$a18.1']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$20load_attr.2']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$indices16.0', '$22unary_negative.3']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$24compare_op.4']
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:49:00,343 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$28load_global.0', '$const30.1']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$32call_function.2']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=36 nstack_initial=0)])
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a36.0']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$38load_method.1']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40call_method.2', '$indices42.3']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44binary_subscr.4']
2025-07-08 12:49:00,344 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,345 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,346 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1212d0>
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: indices = arg(1, name=indices)
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const8.3 = const(int, 1)
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool14 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,351 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $14pred, 28, 16
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1212d0>
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24compare_op.4 = indices < $22unary_negative.3
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool26 = global(bool: <class 'bool'>)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $26pred, 28, 36
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 28
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1212d0>
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const30.1 = const(str, Index out of bounds)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 36
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc1212d0>
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
2025-07-08 12:49:00,352 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $46return_value.5
2025-07-08 12:49:00,353 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x7ffedc123730>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7ffedc1238b0>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x7ffedc123b20>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc123f40>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x7ffedc15c100>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x7ffedc15c2b0>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7ffedc15c520>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7ffedc15c700>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x7ffedc15ca60>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc15ce20>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x7ffedc15d030>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x7ffedc15d270>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x7ffedc15d3c0>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7ffedc122710>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x7ffedc15c880>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x7ffedc123580>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc1205b0>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x7ffedc123a00>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x7ffedc15c400>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x7ffedc121d80>, 0)]})
2025-07-08 12:49:00,353 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc1212d0>
2025-07-08 12:49:00,368 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:49:00,368 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,368 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,368 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,368 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$ary2.0']
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$ary6.2']
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$8load_attr.3']
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10call_method.4']
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,369 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,370 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc18c340>
2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: ary = arg(0, name=ary)
2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,373 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-07-08 12:49:00,374 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $12return_value.5
2025-07-08 12:49:00,374 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7ffedc1a58d0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7ffedc1a57e0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffedc369990>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x7ffedc36ed70>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7ffedc15db70>, 0)]})
2025-07-08 12:49:00,374 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc18c340>
2025-07-08 12:49:00,449 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	LOAD_CONST(arg=1, lineno=488)
           4	RETURN_VALUE(arg=None, lineno=488)
2025-07-08 12:49:00,449 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=488)
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=RETURN_VALUE(arg=None, lineno=488)
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const2.0']
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,450 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'retval': '$const2.0', 'castval': '$4return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,451 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    $const2.0 = const(bool, False)           ['$const2.0']
    $4return_value.1 = cast(value=$const2.0) ['$4return_value.1', '$const2.0']
    return $4return_value.1                  ['$4return_value.1']

2025-07-08 12:49:00,453 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,453 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc15cca0>
2025-07-08 12:49:00,453 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,454 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const2.0 = const(bool, False)
2025-07-08 12:49:00,454 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4return_value.1 = cast(value=$const2.0)
2025-07-08 12:49:00,454 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $4return_value.1
2025-07-08 12:49:00,454 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$4return_value.1': [(<numba.core.ir.Assign object at 0x7ffedc0b9db0>,
                                   0)],
             '$const2.0': [(<numba.core.ir.Assign object at 0x7ffedc0b9c30>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc0b94e0>, 0)]})
2025-07-08 12:49:00,454 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc15cca0>
2025-07-08 12:49:00,469 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:49:00,469 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0']
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a2.0', '$min_val4.1']
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6compare_op.2']
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,470 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,471 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc2862f0>
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: min_val = arg(1, name=min_val)
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6compare_op.2 = a > min_val
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $8return_value.3
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x7ffedc286a40>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7ffedc286b90>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffedc285c90>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7ffedc285660>, 0)]})
2025-07-08 12:49:00,474 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc2862f0>
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0']
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6load_global.1']
2025-07-08 12:49:00,556 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8load_method.2', '$a10.3']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$12call_method.4']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi16.0']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=16 nstack_initial=1)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi16.0']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=34 nstack_initial=0)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$a36.1']
2025-07-08 12:49:00,557 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$c34.0', '$38load_attr.2']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40binary_true_divide.3']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=18 nstack_initial=2)])
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: ['$phi18.0', '$phi18.1']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=18 nstack_initial=2)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$phi18.1']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$v22.3']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$24load_method.4']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$c20.2', '$26call_method.5']
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
2025-07-08 12:49:00,558 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0', '$28inplace_add.6']
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$phi18.0']
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=16 nstack_initial=1)])
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,559 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
2025-07-08 12:49:00,560 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:00,561 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc29b400>
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 16
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc29b400>
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 18
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc29b400>
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:49:00,566 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 34
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffedc29b400>
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:49:00,567 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x7ffed77a5210>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7ffed77a5300>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7ffed77a55d0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x7ffed77a56f0>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x7ffed77a5810>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x7ffed77a5ea0>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x7ffed77a60b0>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x7ffed77a61d0>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x7ffed77a66e0>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x7ffed77a6890>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x7ffed77a69e0>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x7ffed77a4d60>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x7ffed77a4ee0>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x7ffed77a4be0>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x7ffed77a5510>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed77a49a0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7ffed77a4ac0>, 0),
                   (<numba.core.ir.Assign object at 0x7ffed77a6290>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x7ffed77a5ae0>, 18)]})
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffedc29b400>
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var c
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc29b790>
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: c
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc29b790>
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:49:00,568 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc29b790>
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = $28inplace_add.6
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: c.1 = $28inplace_add.6
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffedc29b790>
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffedc29b340>],
             18: [<numba.core.ir.Assign object at 0x7ffedc29b160>]})
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc29b790>
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi16.0 = $14get_iter.5
2025-07-08 12:49:00,569 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 16
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc29b790>
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $phi18.1 = $16for_iter.2
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $16for_iter.3, 18, 34
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 18
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc29b790>
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: v = $phi18.1
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24load_method.4 = getattr(value=v, attr=item)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 18
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 18
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 16
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
2025-07-08 12:49:00,570 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c = freevar(acc_init: 0.0)
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 18
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def c.1 = $28inplace_add.6
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: c.1 = $28inplace_add.6
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 16
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 34
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffedc29b790>
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 34
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 16 from label 34
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 16
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
2025-07-08 12:49:00,571 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $42return_value.4
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2436)
           2	LOAD_FAST(arg=0, lineno=2441)
           4	LOAD_ATTR(arg=0, lineno=2441)
           6	LOAD_CONST(arg=1, lineno=2441)
           8	BINARY_POWER(arg=None, lineno=2441)
          10	LOAD_FAST(arg=0, lineno=2441)
          12	LOAD_ATTR(arg=1, lineno=2441)
          14	LOAD_CONST(arg=1, lineno=2441)
          16	BINARY_POWER(arg=None, lineno=2441)
          18	BINARY_ADD(arg=None, lineno=2441)
          20	RETURN_VALUE(arg=None, lineno=2441)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2436)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2441)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2441)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2441)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=BINARY_POWER(arg=None, lineno=2441)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1', '$const6.2']
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2441)
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3']
2025-07-08 12:49:01,034 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=2441)
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$x10.4']
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=2441)
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$12load_attr.5']
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=BINARY_POWER(arg=None, lineno=2441)
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$12load_attr.5', '$const14.6']
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=BINARY_ADD(arg=None, lineno=2441)
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$16binary_power.7']
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=2441)
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$18binary_add.8']
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:01,035 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8binary_power.3'}), (10, {'res': '$x10.4'}), (12, {'item': '$x10.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12load_attr.5', 'rhs': '$const14.6', 'res': '$16binary_power.7'}), (18, {'lhs': '$8binary_power.3', 'rhs': '$16binary_power.7', 'res': '$18binary_add.8'}), (20, {'retval': '$18binary_add.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,036 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2 = const(int, 2)                ['$const6.2']
    $8binary_power.3 = $4load_attr.1 ** $const6.2 ['$4load_attr.1', '$8binary_power.3', '$const6.2']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6 = const(int, 2)               ['$const14.6']
    $16binary_power.7 = $12load_attr.5 ** $const14.6 ['$12load_attr.5', '$16binary_power.7', '$const14.6']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c99150>
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=x, attr=real)
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 2)
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8binary_power.3 = $4load_attr.1 ** $const6.2
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_attr.5 = getattr(value=x, attr=imag)
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(int, 2)
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16binary_power.7 = $12load_attr.5 ** $const14.6
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18binary_add.8 = $8binary_power.3 + $16binary_power.7
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$18binary_add.8)
2025-07-08 12:49:01,039 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:49:01,040 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [(<numba.core.ir.Assign object at 0x7ffed7c985b0>,
                                 0)],
             '$16binary_power.7': [(<numba.core.ir.Assign object at 0x7ffed7c9a3e0>,
                                    0)],
             '$18binary_add.8': [(<numba.core.ir.Assign object at 0x7ffed7c9a650>,
                                  0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed7c9a440>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7ffed7c996c0>,
                                0)],
             '$8binary_power.3': [(<numba.core.ir.Assign object at 0x7ffed7c98d90>,
                                   0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffed7c9a950>,
                             0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7ffed7c9a290>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7c98ca0>, 0)]})
2025-07-08 12:49:01,040 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7c99150>
2025-07-08 12:49:01,046 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
2025-07-08 12:49:01,046 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0', '$const4.1']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_deref.3']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_deref.3', '$a12.4']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14call_function.5']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b18.6']
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2025-07-08 12:49:01,047 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b18.6', '$const20.7']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22compare_op.8']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const26.0']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b30.1']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$32unary_negative.2']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp36.3']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp36.3', '$const38.4']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40compare_op.5']
2025-07-08 12:49:01,048 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const98.0']
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b102.1']
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_global.0']
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2025-07-08 12:49:01,049 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_deref.0']
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp106.0']
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp106.0', '$const108.1']
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110compare_op.2']
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a52.0']
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a52.0', '$const54.1']
2025-07-08 12:49:01,050 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$56compare_op.2']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$114load_global.0']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2025-07-08 12:49:01,051 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$126call_method.6']
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=130 nstack_initial=0)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp130.0']
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp130.0', '$const132.1']
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$134compare_op.2']
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=0)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$60load_deref.0']
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,052 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=76 nstack_initial=0)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a76.0']
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a76.0', '$const78.1']
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$80compare_op.2']
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=138 nstack_initial=0)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp138.0']
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp138.0', '$const140.1']
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$142binary_and.2']
2025-07-08 12:49:01,053 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=178 nstack_initial=0)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$invert178.0']
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$64load_deref.0']
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$68load_global.0']
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2025-07-08 12:49:01,054 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$68load_global.0', '$const70.1']
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$72call_function.2']
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a84.0']
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a84.0', '$const86.1']
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88compare_op.2']
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$r146.0']
2025-07-08 12:49:01,055 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$r146.0', '$a148.1']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$150inplace_multiply.2']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp154.0']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp154.0', '$const156.1']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$158inplace_rshift.2']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a162.3']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a162.3', '$a164.4']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$166inplace_multiply.5']
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,056 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp170.6']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp170.6', '$const172.7']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$174compare_op.8']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const182.0']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const182.0', '$r184.1']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186binary_true_divide.2']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$r190.0']
2025-07-08 12:49:01,057 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const92.0']
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-08 12:49:01,058 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-07-08 12:49:01,059 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,060 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,063 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

2025-07-08 12:49:01,074 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:01,074 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 26
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 44
2025-07-08 12:49:01,075 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 48
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 96
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 98
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 106
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,076 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 114
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 130
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,077 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 138
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 146
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = $150inplace_multiply.2
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 154
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,078 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 178
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 182
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 190
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9d390>
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r)
2025-07-08 12:49:01,079 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x7ffed7c9dd50>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7c430a0>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x7ffed7c43310>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7c43550>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x7ffed7c436d0>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x7ffed7c43970>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x7ffed7c52200>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x7ffed7c520b0>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x7ffed7c52530>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7c51570>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x7ffed7c51090>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x7ffed7c52a10>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x7ffed7c52bf0>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x7ffed7c53280>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x7ffed7c53760>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x7ffed7c53b20>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x7ffed7c51ae0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x7ffed7c51690>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x7ffed7c50fd0>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x7ffed7c50850>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x7ffed7c50910>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x7ffed7c501c0>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x7ffed7c9e560>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x7ffed7c9e7d0>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x7ffed7c9d870>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x7ffed7c9f220>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7ffed7c9f490>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7c9f5b0>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x7ffed7c9f8b0>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7ffed7c9fb50>, 48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7ffed7c42ef0>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x7ffed7c53f10>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x7ffed7c52440>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x7ffed7c53610>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x7ffed7c507f0>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x7ffed7c50d90>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x7ffed7c9e3b0>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x7ffed7c9f070>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7c9cdf0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed7c9cb20>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7ffed7c9e050>, 0),
                     (<numba.core.ir.Assign object at 0x7ffed7c51e70>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x7ffed7c9d930>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x7ffed7c431f0>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x7ffed7c51330>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x7ffed7c50f10>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x7ffed7c518d0>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x7ffed7c51210>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x7ffed7c9e6b0>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x7ffed7c9f370>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x7ffed7c9fa30>, 48)],
             'exp': [(<numba.core.ir.Assign object at 0x7ffed7c9ecb0>, 26),
                     (<numba.core.ir.Assign object at 0x7ffed7c42c80>, 98),
                     (<numba.core.ir.Assign object at 0x7ffed7c536a0>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x7ffed7c9e8f0>, 26),
                        (<numba.core.ir.Assign object at 0x7ffed7c429b0>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x7ffed7c9cfd0>, 0),
                   (<numba.core.ir.Assign object at 0x7ffed7c53310>, 146)]})
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7c9d390>
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var r
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,080 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: r
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,081 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,082 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,083 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = $150inplace_multiply.2
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,084 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c190>
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r)
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7c9d330>],
             146: [<numba.core.ir.Assign object at 0x7ffed7c6c3a0>]})
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,085 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,086 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,087 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,088 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 146
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 146
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 138
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 154
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 146
2025-07-08 12:49:01,089 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,090 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 182
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 178 from label 182
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 178
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 178
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r)
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='r' stmt=$192return_value.1 = cast(value=r)
2025-07-08 12:49:01,091 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 190
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 178 from label 190
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 178
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var a.1
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: a.1
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,092 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,093 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,094 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,095 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7c9c9a0>],
             154: [<numba.core.ir.Assign object at 0x7ffed7c6e200>]})
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,096 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,097 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 114
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 114
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,098 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,099 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 146
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 146
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 138
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,100 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 154
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 154
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,101 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c190>
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var invert
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,102 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: invert
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: invert = const(bool, True)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,103 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: invert.1 = const(bool, False)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,104 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,105 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9d360>
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ffed7c6d330>],
             98: [<numba.core.ir.Assign object at 0x7ffed7c6cc70>]})
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,106 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,107 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.1 = const(bool, False)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,108 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,109 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 178
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 130 from label 178
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,110 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 96
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 96
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 48 from label 96
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 26 from label 48
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 26
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def invert = const(bool, True)
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def invert.1 = const(bool, False)
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,111 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var exp
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: exp
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,112 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.1 = const(bool, False)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: exp.1 = b
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,113 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: exp.2 = $158inplace_rshift.2
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9cca0>
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,114 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ffed7c6d6f0>],
             98: [<numba.core.ir.Assign object at 0x7ffed7c6d420>],
             154: [<numba.core.ir.Assign object at 0x7ffed7c6d990>]})
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,115 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.1 = const(bool, False)
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp.1 = b
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,116 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 96
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 96
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 48 from label 96
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 26 from label 48
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 26
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp.1 = b
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $110compare_op.2 = exp.3 > $const108.1
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,117 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $134compare_op.2 = exp.3 != $const132.1
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,118 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 138
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp.2 = $158inplace_rshift.2
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $142binary_and.2 = exp.4 & $const140.1
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,119 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 154
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 154
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp.2 = $158inplace_rshift.2
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $174compare_op.8 = exp.2 != $const172.7
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,120 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9d360>
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,121 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,219 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2436)
           2	LOAD_FAST(arg=0, lineno=2441)
           4	LOAD_ATTR(arg=0, lineno=2441)
           6	LOAD_CONST(arg=1, lineno=2441)
           8	BINARY_POWER(arg=None, lineno=2441)
          10	LOAD_FAST(arg=0, lineno=2441)
          12	LOAD_ATTR(arg=1, lineno=2441)
          14	LOAD_CONST(arg=1, lineno=2441)
          16	BINARY_POWER(arg=None, lineno=2441)
          18	BINARY_ADD(arg=None, lineno=2441)
          20	RETURN_VALUE(arg=None, lineno=2441)
2025-07-08 12:49:01,219 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:01,219 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,219 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2436)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$x2.0']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=BINARY_POWER(arg=None, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_attr.1', '$const6.2']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$x10.4']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$12load_attr.5']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=BINARY_POWER(arg=None, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$12load_attr.5', '$const14.6']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=BINARY_ADD(arg=None, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8binary_power.3', '$16binary_power.7']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=2441)
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$18binary_add.8']
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:01,220 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:01,221 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,221 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,221 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:01,221 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:01,221 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:01,221 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8binary_power.3'}), (10, {'res': '$x10.4'}), (12, {'item': '$x10.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12load_attr.5', 'rhs': '$const14.6', 'res': '$16binary_power.7'}), (18, {'lhs': '$8binary_power.3', 'rhs': '$16binary_power.7', 'res': '$18binary_add.8'}), (20, {'retval': '$18binary_add.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,221 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2 = const(int, 2)                ['$const6.2']
    $8binary_power.3 = $4load_attr.1 ** $const6.2 ['$4load_attr.1', '$8binary_power.3', '$const6.2']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6 = const(int, 2)               ['$const14.6']
    $16binary_power.7 = $12load_attr.5 ** $const14.6 ['$12load_attr.5', '$16binary_power.7', '$const14.6']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']

2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7e5a830>
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_attr.1 = getattr(value=x, attr=real)
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const6.2 = const(int, 2)
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8binary_power.3 = $4load_attr.1 ** $const6.2
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_attr.5 = getattr(value=x, attr=imag)
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const14.6 = const(int, 2)
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $16binary_power.7 = $12load_attr.5 ** $const14.6
2025-07-08 12:49:01,224 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18binary_add.8 = $8binary_power.3 + $16binary_power.7
2025-07-08 12:49:01,225 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20return_value.9 = cast(value=$18binary_add.8)
2025-07-08 12:49:01,225 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $20return_value.9
2025-07-08 12:49:01,225 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [(<numba.core.ir.Assign object at 0x7ffed7e59ed0>,
                                 0)],
             '$16binary_power.7': [(<numba.core.ir.Assign object at 0x7ffed7e5a200>,
                                    0)],
             '$18binary_add.8': [(<numba.core.ir.Assign object at 0x7ffed7e5a380>,
                                  0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7ffed7e5a4d0>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7ffed7e59930>,
                                0)],
             '$8binary_power.3': [(<numba.core.ir.Assign object at 0x7ffed7e59c60>,
                                   0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7ffed7e5a050>,
                             0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7ffed7e59ab0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7e58df0>, 0)]})
2025-07-08 12:49:01,225 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7e5a830>
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0']
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_deref.0', '$const4.1']
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$6call_function.2']
2025-07-08 12:49:01,233 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_deref.3']
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$10load_deref.3', '$a12.4']
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$14call_function.5']
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b18.6']
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b18.6', '$const20.7']
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22compare_op.8']
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2025-07-08 12:49:01,234 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const26.0']
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b30.1']
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$32unary_negative.2']
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp36.3']
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp36.3', '$const38.4']
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$40compare_op.5']
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,235 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const98.0']
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$b102.1']
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$44load_global.0']
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
2025-07-08 12:49:01,236 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$48load_deref.0']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp106.0']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp106.0', '$const108.1']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$110compare_op.2']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a52.0']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a52.0', '$const54.1']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$56compare_op.2']
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-07-08 12:49:01,237 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$114load_global.0']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$126call_method.6']
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=130 nstack_initial=0)
2025-07-08 12:49:01,238 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp130.0']
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp130.0', '$const132.1']
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$134compare_op.2']
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=60 nstack_initial=0)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$60load_deref.0']
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=76 nstack_initial=0)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a76.0']
2025-07-08 12:49:01,239 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a76.0', '$const78.1']
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$80compare_op.2']
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=138 nstack_initial=0)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp138.0']
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp138.0', '$const140.1']
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$142binary_and.2']
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=178 nstack_initial=0)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$invert178.0']
2025-07-08 12:49:01,240 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$64load_deref.0']
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$68load_global.0']
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$68load_global.0', '$const70.1']
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$72call_function.2']
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-08 12:49:01,241 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a84.0']
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a84.0', '$const86.1']
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$88compare_op.2']
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$r146.0']
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$r146.0', '$a148.1']
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$150inplace_multiply.2']
2025-07-08 12:49:01,242 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp154.0']
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp154.0', '$const156.1']
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$158inplace_rshift.2']
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a162.3']
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$a162.3', '$a164.4']
2025-07-08 12:49:01,243 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$166inplace_multiply.5']
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp170.6']
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$exp170.6', '$const172.7']
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$174compare_op.8']
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const182.0']
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2025-07-08 12:49:01,244 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const182.0', '$r184.1']
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$186binary_true_divide.2']
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$r190.0']
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$const92.0']
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=138 nstack_initial=0)])
2025-07-08 12:49:01,245 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,246 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,247 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,249 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,259 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 26
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 44
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,260 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 48
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 96
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 98
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 106
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,261 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 114
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 130
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 138
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,262 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 146
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = $150inplace_multiply.2
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 154
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 178
2025-07-08 12:49:01,263 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 182
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 190
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7d769b0>
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r)
2025-07-08 12:49:01,264 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,265 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x7ffed7cd28f0>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7c89060>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x7ffed7c899c0>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7c89810>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x7ffed7c89360>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x7ffed7c88520>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x7ffed7c88a60>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x7ffed7c88f40>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x7ffed7c88d30>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x7ffed7c88340>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x7ffed7c89120>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x7ffed7c8ad10>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x7ffedc502fe0>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x7ffed7c43fd0>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x7ffed7c40850>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x7ffed7c40460>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x7ffed7c414b0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x7ffed7c40df0>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x7ffed7c42ce0>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x7ffed7c41360>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x7ffed7c42080>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x7ffed7d0ab00>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x7ffed7cd2290>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x7ffed7cd1a50>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x7ffed7cd2740>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x7ffed7cd1480>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7ffed7cd0ee0>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7cd1c60>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x7ffed7cd0bb0>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7ffed7cd07c0>, 48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7ffed7c89f30>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x7ffed7c88640>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x7ffed7c88dc0>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x7ffed7c43fa0>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x7ffed7c412d0>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x7ffed7c42a70>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x7ffed7cd23b0>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x7ffed7cd15d0>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7ffed7cd2e30>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7ffed7cd29b0>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7ffed7cd3460>, 0),
                     (<numba.core.ir.Assign object at 0x7ffed7c43b80>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x7ffed7cd2b00>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x7ffed7c89fc0>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x7ffed7c89000>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x7ffed7663f10>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x7ffed7c41f00>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x7ffed7c423b0>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x7ffed7cd1240>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x7ffed7cd1360>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x7ffed7cd0b50>, 48)],
             'exp': [(<numba.core.ir.Assign object at 0x7ffed7cd1ab0>, 26),
                     (<numba.core.ir.Assign object at 0x7ffed7c8bca0>, 98),
                     (<numba.core.ir.Assign object at 0x7ffed7c40790>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x7ffed7cd3f70>, 26),
                        (<numba.core.ir.Assign object at 0x7ffed7c88e20>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x7ffed7cd1c00>, 0),
                   (<numba.core.ir.Assign object at 0x7ffed7c40be0>, 146)]})
2025-07-08 12:49:01,265 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7d0a860>
2025-07-08 12:49:01,265 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var r
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: r
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,266 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,267 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,268 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = $150inplace_multiply.2
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,269 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7d0a3b0>],
             146: [<numba.core.ir.Assign object at 0x7ffed7d74250>]})
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,270 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,271 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,272 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 146
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 146
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 138
2025-07-08 12:49:01,273 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 154
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 146
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,274 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,275 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 182
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 178 from label 182
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 178
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 178
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r)
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='r' stmt=$192return_value.1 = cast(value=r)
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 190
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 178 from label 190
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 178
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,276 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var a.1
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: a.1
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,277 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,278 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,279 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = $166inplace_multiply.5
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,280 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c53700>
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ffed7d0aa70>],
             154: [<numba.core.ir.Assign object at 0x7ffed7d769b0>]})
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,281 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,282 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 114
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 114
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,283 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 146
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 146
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 138
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,284 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 0 from label 106
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 0
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 154
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 154
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,285 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7d0ad40>
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var invert
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,286 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: invert
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: invert = const(bool, True)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,287 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, False)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: invert.1 = const(bool, False)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,288 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,289 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,290 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ffed7c509a0>],
             98: [<numba.core.ir.Assign object at 0x7ffed7d0a410>]})
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,291 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,292 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.1 = const(bool, False)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,293 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,294 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 178
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 130 from label 178
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 96
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 96
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 48 from label 96
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:49:01,295 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 26 from label 48
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 26
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def invert = const(bool, True)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def invert.1 = const(bool, False)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7cd2ef0>
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:64 (_run_ssa)] - Fix SSA violator on var exp
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,296 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:302 (on_assign)] - first assign: exp
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,297 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.1 = const(bool, False)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = b
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: exp.1 = b
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,298 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,299 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = $158inplace_rshift.2
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: exp.2 = $158inplace_rshift.2
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,300 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FreshVarHandler object at 0x7ffed7d76590>
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:70 (_run_ssa)] - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ffed7d76020>],
             98: [<numba.core.ir.Assign object at 0x7ffed7d09ed0>],
             154: [<numba.core.ir.Assign object at 0x7ffed7e5ae60>]})
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 0
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a = arg(0, name=a)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: b = arg(1, name=b)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const4.1 = const(int, 1)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const20.7 = const(int, 0)
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22compare_op.8 = b < $const20.7
2025-07-08 12:49:01,301 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool24 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $24pred, 26, 98
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 26
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert = const(bool, True)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const38.4 = const(int, 0)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $42pred, 44, 48
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 44
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: <static> raise <class 'OverflowError'>
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 48
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool50 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 96
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 96
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 98
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,302 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.1 = const(bool, False)
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp.1 = b
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 106
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 106
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const108.1 = const(int, 65536)
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 106
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 96
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 96
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 48 from label 96
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 48
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 48
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 26 from label 48
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 26
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 98
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp.1 = b
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $110compare_op.2 = exp.3 > $const108.1
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool112 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $112pred, 114, 130
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 114
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,303 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $114load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $128return_value.7
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 130
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const132.1 = const(int, 0)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $134compare_op.2 = exp.3 != $const132.1
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool136 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $136pred, 138, 178
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 138
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,304 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const140.1 = const(int, 1)
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 138
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:434 (_find_def_from_top)] - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 130
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 130
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 106 from label 130
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 106
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 154
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:442 (_find_def_from_top)] - incoming_def exp.2 = $158inplace_rshift.2
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $142binary_and.2 = exp.4 & $const140.1
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool144 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $144pred, 146, 154
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 146
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.1 = $150inplace_multiply.2
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: jump 154
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 154
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const156.1 = const(int, 1)
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,305 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:417 (_find_def_from_top)] - find_def_from_top label 154
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:454 (_find_def_from_top)] - idom 138 from label 154
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:460 (_find_def_from_bottom)] - find_def_from_bottom label 138
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: exp.2 = $158inplace_rshift.2
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: a.1.1 = $166inplace_multiply.5
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const172.7 = const(int, 0)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:386 (_find_def)] - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:216 (_run_ssa_block_pass)] - replaced with: $174compare_op.8 = exp.2 != $const172.7
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool176 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $176pred, 138, 178
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 178
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: bool180 = global(bool: <class 'bool'>)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: branch $180pred, 182, 190
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 182
2025-07-08 12:49:01,306 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const182.0 = const(float, 1.0)
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $188return_value.3
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:187 (_run_block_rewrite)] - ==== SSA block rewrite pass on 190
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._FixSSAVars object at 0x7ffed7c9c1f0>
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $192return_value.1 = cast(value=r.4)
2025-07-08 12:49:01,307 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $192return_value.1
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2488)
           2	LOAD_GLOBAL(arg=0, lineno=2492)
           4	LOAD_METHOD(arg=1, lineno=2492)
           6	LOAD_FAST(arg=0, lineno=2492)
           8	CALL_METHOD(arg=1, lineno=2492)
          10	LOAD_CONST(arg=1, lineno=2492)
          12	LOAD_GLOBAL(arg=0, lineno=2492)
          14	LOAD_METHOD(arg=2, lineno=2492)
          16	LOAD_FAST(arg=0, lineno=2492)
          18	CALL_METHOD(arg=1, lineno=2492)
          20	BINARY_MULTIPLY(arg=None, lineno=2492)
          22	BINARY_ADD(arg=None, lineno=2492)
          24	RETURN_VALUE(arg=None, lineno=2492)
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2488)
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2492)
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,388 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$x6.2']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$12load_global.5']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$14load_method.6']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$14load_method.6', '$x16.7']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=BINARY_MULTIPLY(arg=None, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$18call_method.8']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=BINARY_ADD(arg=None, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$20binary_multiply.9']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=2492)
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22binary_add.10']
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:01,389 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:01,390 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$x6.2'}), (8, {'func': '$4load_method.1', 'args': ['$x6.2'], 'res': '$8call_method.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$x16.7'}), (18, {'func': '$14load_method.6', 'args': ['$x16.7'], 'res': '$18call_method.8'}), (20, {'lhs': '$const10.4', 'rhs': '$18call_method.8', 'res': '$20binary_multiply.9'}), (22, {'lhs': '$8call_method.3', 'rhs': '$20binary_multiply.9', 'res': '$22binary_add.10'}), (24, {'retval': '$22binary_add.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,390 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4 = const(complex, 1j)          ['$const10.4']
    $12load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7c9b7f0>
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=cos)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(complex, 1j)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sin)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_multiply.9 = $const10.4 * $18call_method.8
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22binary_add.10 = $8call_method.3 + $20binary_multiply.9
2025-07-08 12:49:01,394 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24return_value.11 = cast(value=$22binary_add.10)
2025-07-08 12:49:01,395 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $24return_value.11
2025-07-08 12:49:01,395 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12load_global.5': [(<numba.core.ir.Assign object at 0x7ffed7cec730>,
                                   0)],
             '$14load_method.6': [(<numba.core.ir.Assign object at 0x7ffed7cec850>,
                                   0)],
             '$18call_method.8': [(<numba.core.ir.Assign object at 0x7ffed7cedc60>,
                                   0)],
             '$20binary_multiply.9': [(<numba.core.ir.Assign object at 0x7ffed7cec2b0>,
                                       0)],
             '$22binary_add.10': [(<numba.core.ir.Assign object at 0x7ffed7cef6d0>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x7ffed7cedb10>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7d0af20>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffed7ced840>,
                                  0)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x7ffed7ced7b0>,
                                  0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7cee3e0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7ec0af0>, 0)]})
2025-07-08 12:49:01,395 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7c9b7f0>
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:90 (__init__)] - bytecode dump:
>          0	NOP(arg=None, lineno=2488)
           2	LOAD_GLOBAL(arg=0, lineno=2492)
           4	LOAD_METHOD(arg=1, lineno=2492)
           6	LOAD_FAST(arg=0, lineno=2492)
           8	CALL_METHOD(arg=1, lineno=2492)
          10	LOAD_CONST(arg=1, lineno=2492)
          12	LOAD_GLOBAL(arg=0, lineno=2492)
          14	LOAD_METHOD(arg=2, lineno=2492)
          16	LOAD_FAST(arg=0, lineno=2492)
          18	CALL_METHOD(arg=1, lineno=2492)
          20	BINARY_MULTIPLY(arg=None, lineno=2492)
          22	BINARY_ADD(arg=None, lineno=2492)
          24	RETURN_VALUE(arg=None, lineno=2492)
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:116 (run)] - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:119 (run)] - stack: []
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:120 (run)] - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=0, inst=NOP(arg=None, lineno=2488)
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2492)
2025-07-08 12:49:01,452 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack []
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$2load_global.0']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$4load_method.1', '$x6.2']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$12load_global.5']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$14load_method.6']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$14load_method.6', '$x16.7']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=20, inst=BINARY_MULTIPLY(arg=None, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$const10.4', '$18call_method.8']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=22, inst=BINARY_ADD(arg=None, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$8call_method.3', '$20binary_multiply.9']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:350 (dispatch)] - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=2492)
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:351 (dispatch)] - stack ['$22binary_add.10']
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:138 (run)] - end state. edges=[]
2025-07-08 12:49:01,453 - numba.core.byteflow - DEBUG - [byteflow.py:219 (_prune_phis)] - -------------------------Prune PHIs-------------------------
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:288 (_prune_phis)] - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:245 (find_use_defs)] - defmap: {}
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:246 (find_use_defs)] - phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:267 (propagate_phi_map)] - changing phismap: defaultdict(<class 'set'>, {})
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:276 (apply_changes)] - keep phismap: {}
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:282 (apply_changes)] - new_out: defaultdict(<class 'dict'>, {})
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:292 (_prune_phis)] - ----------------------DONE Prune PHIs-----------------------
2025-07-08 12:49:01,454 - numba.core.byteflow - DEBUG - [byteflow.py:150 (run)] - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$x6.2'}), (8, {'func': '$4load_method.1', 'args': ['$x6.2'], 'res': '$8call_method.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$x16.7'}), (18, {'func': '$14load_method.6', 'args': ['$x16.7'], 'res': '$18call_method.8'}), (20, {'lhs': '$const10.4', 'rhs': '$18call_method.8', 'res': '$20binary_multiply.9'}), (22, {'lhs': '$8call_method.3', 'rhs': '$20binary_multiply.9', 'res': '$22binary_add.10'}), (24, {'retval': '$22binary_add.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-08 12:49:01,454 - numba.core.interpreter - DEBUG - [interpreter.py:1416 (interpret)] - label 0:
    x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4 = const(complex, 1j)          ['$const10.4']
    $12load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:178 (_run_block_analysis)] - ==== SSA block analysis pass on 0
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:208 (_run_ssa_block_pass)] - Running <numba.core.ssa._GatherDefsHandler object at 0x7ffed7eb8d00>
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: x = arg(0, name=x)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=cos)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $const10.4 = const(complex, 1j)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $12load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sin)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $20binary_multiply.9 = $const10.4 * $18call_method.8
2025-07-08 12:49:01,458 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $22binary_add.10 = $8call_method.3 + $20binary_multiply.9
2025-07-08 12:49:01,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: $24return_value.11 = cast(value=$22binary_add.10)
2025-07-08 12:49:01,459 - numba.core.ssa - DEBUG - [ssa.py:210 (_run_ssa_block_pass)] - on stmt: return $24return_value.11
2025-07-08 12:49:01,459 - numba.core.ssa - DEBUG - [ssa.py:157 (_find_defs_violators)] - defs defaultdict(<class 'list'>,
            {'$12load_global.5': [(<numba.core.ir.Assign object at 0x7ffed7ea3040>,
                                   0)],
             '$14load_method.6': [(<numba.core.ir.Assign object at 0x7ffed7ea31c0>,
                                   0)],
             '$18call_method.8': [(<numba.core.ir.Assign object at 0x7ffed7ea34f0>,
                                   0)],
             '$20binary_multiply.9': [(<numba.core.ir.Assign object at 0x7ffed7ea3610>,
                                       0)],
             '$22binary_add.10': [(<numba.core.ir.Assign object at 0x7ffed7ea3790>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x7ffed7ea38e0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7ffed7ea2080>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7ffed7ea2410>,
                                  0)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x7ffed7ea2dd0>,
                                  0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7ffed7ea2ec0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7ffed7ea2590>, 0)]})
2025-07-08 12:49:01,459 - numba.core.ssa - DEBUG - [ssa.py:172 (_find_defs_violators)] - SSA violators <numba.core.utils.OrderedSet object at 0x7ffed7eb8d00>
