<<<<<<< HEAD
<<<<<<< HEAD
# Dockerfile v12 - The ENTRYPOINT Bootstrap Fix
FROM --platform=linux/amd64 python:3.10-slim-bullseye
=======
# Dockerfile v10 - Systematic Debugging Step 1: Fix 'face_detection' import
# This builds upon the successful "In-Place" execution model (v8).
FROM python:3.10-slim-bullseye
>>>>>>> initial-batch-work
=======
# Dockerfile v17 - Final Debug Attempt
FROM python:3.10-slim-bullseye
>>>>>>> 4d07f226e347c3bb14a2db7dcce70b2d981ced52

WORKDIR /app
COPY MuseTalk /app/MuseTalk_project

<<<<<<< HEAD
# 3. Copy MuseTalk project and install its requirements
<<<<<<< HEAD
COPY MuseTalk /app/MuseTalk
RUN (cd /app/MuseTalk && \
     sed -i '/tensorflow/d' requirements.txt && \
     sed -i '/tensorboard/d' requirements.txt && \
     pip install --no-cache-dir --retries 5 --timeout 30 -r requirements.txt)
=======
RUN git clone https://github.com/RobMills28/MuseTalk.git /app/MuseTalk
WORKDIR /app/MuseTalk
RUN sed -i '/tensorflow/d' requirements.txt && \
    sed -i '/tensorboard/d' requirements.txt && \
    pip install --no-cache-dir --retries 5 --timeout 30 -r requirements.txt
>>>>>>> initial-batch-work

# 4. Download Weights
RUN (cd /app/MuseTalk && chmod +x ./download_weights.sh && ./download_weights.sh)

# 4.5. Manually download critical models
RUN (cd /app/MuseTalk && \
    mkdir -p ./models/face-parse-bisent/ && \
    mkdir -p ./models/musetalkV15/ && \
    pip install --no-cache-dir gdown && \
    gdown --id 154JgKpzCPW82qINcVieuPH3fZ2e0P812 -O ./models/face-parse-bisent/79999_iter.pth && \
    wget -O ./models/face-parse-bisent/resnet18-5c106cde.pth https://download.pytorch.org/models/resnet18-5c106cde.pth && \
    wget -O ./models/musetalkV15/unet.pth https://huggingface.co/TMElyralab/MuseTalk/resolve/main/musetalkV15/unet.pth && \
    pip uninstall -y gdown)

# 5. Copy our API logic and the new bootstrap script
COPY Docker/api_inference_logic.py /app/MuseTalk/
COPY Docker/musetalk_api.py /app/MuseTalk/
COPY Docker/run_api.sh /app/MuseTalk/
RUN chmod +x /app/MuseTalk/run_api.sh
RUN pip install --no-cache-dir fastapi "uvicorn[standard]"

# 6. Set the final working directory
WORKDIR /app/MuseTalk

# 7. --- THE NEW EXECUTION METHOD ---
# Use ENTRYPOINT to run our bootstrap script.
# The CMD is now empty, as the command is in the script.
EXPOSE 8000
ENTRYPOINT ["/app/MuseTalk/run_api.sh"]
=======
# --- THE DEBUGGING STEP ---
# This command will first list the contents of /app/MuseTalk_project.
# Then it will try to list the contents of a subdirectory. If the subdirectory
# name is wrong, the build will fail here and show us the output of the first ls.
RUN ls -la /app/MuseTalk_project && ls -la /app/MuseTalk_project/THIS_WILL_FAIL
>>>>>>> 4d07f226e347c3bb14a2db7dcce70b2d981ced52
